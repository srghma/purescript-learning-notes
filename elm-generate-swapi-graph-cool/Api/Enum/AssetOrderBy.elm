-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.AssetOrderBy exposing (..)

import Json.Decode as Decode exposing (Decoder)


type AssetOrderBy
    = CreatedAt_ASC
    | CreatedAt_DESC
    | FileName_ASC
    | FileName_DESC
    | Handle_ASC
    | Handle_DESC
    | Height_ASC
    | Height_DESC
    | Id_ASC
    | Id_DESC
    | MimeType_ASC
    | MimeType_DESC
    | Size_ASC
    | Size_DESC
    | UpdatedAt_ASC
    | UpdatedAt_DESC
    | Url_ASC
    | Url_DESC
    | Width_ASC
    | Width_DESC


list : List AssetOrderBy
list =
    [ CreatedAt_ASC, CreatedAt_DESC, FileName_ASC, FileName_DESC, Handle_ASC, Handle_DESC, Height_ASC, Height_DESC, Id_ASC, Id_DESC, MimeType_ASC, MimeType_DESC, Size_ASC, Size_DESC, UpdatedAt_ASC, UpdatedAt_DESC, Url_ASC, Url_DESC, Width_ASC, Width_DESC ]


decoder : Decoder AssetOrderBy
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "createdAt_ASC" ->
                        Decode.succeed CreatedAt_ASC

                    "createdAt_DESC" ->
                        Decode.succeed CreatedAt_DESC

                    "fileName_ASC" ->
                        Decode.succeed FileName_ASC

                    "fileName_DESC" ->
                        Decode.succeed FileName_DESC

                    "handle_ASC" ->
                        Decode.succeed Handle_ASC

                    "handle_DESC" ->
                        Decode.succeed Handle_DESC

                    "height_ASC" ->
                        Decode.succeed Height_ASC

                    "height_DESC" ->
                        Decode.succeed Height_DESC

                    "id_ASC" ->
                        Decode.succeed Id_ASC

                    "id_DESC" ->
                        Decode.succeed Id_DESC

                    "mimeType_ASC" ->
                        Decode.succeed MimeType_ASC

                    "mimeType_DESC" ->
                        Decode.succeed MimeType_DESC

                    "size_ASC" ->
                        Decode.succeed Size_ASC

                    "size_DESC" ->
                        Decode.succeed Size_DESC

                    "updatedAt_ASC" ->
                        Decode.succeed UpdatedAt_ASC

                    "updatedAt_DESC" ->
                        Decode.succeed UpdatedAt_DESC

                    "url_ASC" ->
                        Decode.succeed Url_ASC

                    "url_DESC" ->
                        Decode.succeed Url_DESC

                    "width_ASC" ->
                        Decode.succeed Width_ASC

                    "width_DESC" ->
                        Decode.succeed Width_DESC

                    _ ->
                        Decode.fail ("Invalid AssetOrderBy type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : AssetOrderBy -> String
toString enum =
    case enum of
        CreatedAt_ASC ->
            "createdAt_ASC"

        CreatedAt_DESC ->
            "createdAt_DESC"

        FileName_ASC ->
            "fileName_ASC"

        FileName_DESC ->
            "fileName_DESC"

        Handle_ASC ->
            "handle_ASC"

        Handle_DESC ->
            "handle_DESC"

        Height_ASC ->
            "height_ASC"

        Height_DESC ->
            "height_DESC"

        Id_ASC ->
            "id_ASC"

        Id_DESC ->
            "id_DESC"

        MimeType_ASC ->
            "mimeType_ASC"

        MimeType_DESC ->
            "mimeType_DESC"

        Size_ASC ->
            "size_ASC"

        Size_DESC ->
            "size_DESC"

        UpdatedAt_ASC ->
            "updatedAt_ASC"

        UpdatedAt_DESC ->
            "updatedAt_DESC"

        Url_ASC ->
            "url_ASC"

        Url_DESC ->
            "url_DESC"

        Width_ASC ->
            "width_ASC"

        Width_DESC ->
            "width_DESC"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe AssetOrderBy
fromString enumString =
    case enumString of
        "createdAt_ASC" ->
            Just CreatedAt_ASC

        "createdAt_DESC" ->
            Just CreatedAt_DESC

        "fileName_ASC" ->
            Just FileName_ASC

        "fileName_DESC" ->
            Just FileName_DESC

        "handle_ASC" ->
            Just Handle_ASC

        "handle_DESC" ->
            Just Handle_DESC

        "height_ASC" ->
            Just Height_ASC

        "height_DESC" ->
            Just Height_DESC

        "id_ASC" ->
            Just Id_ASC

        "id_DESC" ->
            Just Id_DESC

        "mimeType_ASC" ->
            Just MimeType_ASC

        "mimeType_DESC" ->
            Just MimeType_DESC

        "size_ASC" ->
            Just Size_ASC

        "size_DESC" ->
            Just Size_DESC

        "updatedAt_ASC" ->
            Just UpdatedAt_ASC

        "updatedAt_DESC" ->
            Just UpdatedAt_DESC

        "url_ASC" ->
            Just Url_ASC

        "url_DESC" ->
            Just Url_DESC

        "width_ASC" ->
            Just Width_ASC

        "width_DESC" ->
            Just Width_DESC

        _ ->
            Nothing
