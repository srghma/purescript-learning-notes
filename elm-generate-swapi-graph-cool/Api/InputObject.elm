-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.InputObject exposing (..)

import Api.Enum.ModelMutationType_
import Api.Enum.PersonEyeColor
import Api.Enum.PersonGender
import Api.Enum.PersonHairColor
import Api.Enum.PersonSkinColor
import Api.Enum.SpeciesEyeColor
import Api.Enum.SpeciesHairColor
import Api.Enum.SpeciesSkinColor
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


buildAssetFilter : (AssetFilterOptionalFields -> AssetFilterOptionalFields) -> AssetFilter
buildAssetFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, fileName = Absent, fileName_not = Absent, fileName_in = Absent, fileName_not_in = Absent, fileName_lt = Absent, fileName_lte = Absent, fileName_gt = Absent, fileName_gte = Absent, fileName_contains = Absent, fileName_not_contains = Absent, fileName_starts_with = Absent, fileName_not_starts_with = Absent, fileName_ends_with = Absent, fileName_not_ends_with = Absent, handle = Absent, handle_not = Absent, handle_in = Absent, handle_not_in = Absent, handle_lt = Absent, handle_lte = Absent, handle_gt = Absent, handle_gte = Absent, handle_contains = Absent, handle_not_contains = Absent, handle_starts_with = Absent, handle_not_starts_with = Absent, handle_ends_with = Absent, handle_not_ends_with = Absent, height = Absent, height_not = Absent, height_in = Absent, height_not_in = Absent, height_lt = Absent, height_lte = Absent, height_gt = Absent, height_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, mimeType = Absent, mimeType_not = Absent, mimeType_in = Absent, mimeType_not_in = Absent, mimeType_lt = Absent, mimeType_lte = Absent, mimeType_gt = Absent, mimeType_gte = Absent, mimeType_contains = Absent, mimeType_not_contains = Absent, mimeType_starts_with = Absent, mimeType_not_starts_with = Absent, mimeType_ends_with = Absent, mimeType_not_ends_with = Absent, size = Absent, size_not = Absent, size_in = Absent, size_not_in = Absent, size_lt = Absent, size_lte = Absent, size_gt = Absent, size_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, url = Absent, url_not = Absent, url_in = Absent, url_not_in = Absent, url_lt = Absent, url_lte = Absent, url_gt = Absent, url_gte = Absent, url_contains = Absent, url_not_contains = Absent, url_starts_with = Absent, url_not_starts_with = Absent, url_ends_with = Absent, url_not_ends_with = Absent, width = Absent, width_not = Absent, width_in = Absent, width_not_in = Absent, width_lt = Absent, width_lte = Absent, width_gt = Absent, width_gte = Absent }
    in
    AssetFilter { and = optionals.and, or = optionals.or, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, fileName = optionals.fileName, fileName_not = optionals.fileName_not, fileName_in = optionals.fileName_in, fileName_not_in = optionals.fileName_not_in, fileName_lt = optionals.fileName_lt, fileName_lte = optionals.fileName_lte, fileName_gt = optionals.fileName_gt, fileName_gte = optionals.fileName_gte, fileName_contains = optionals.fileName_contains, fileName_not_contains = optionals.fileName_not_contains, fileName_starts_with = optionals.fileName_starts_with, fileName_not_starts_with = optionals.fileName_not_starts_with, fileName_ends_with = optionals.fileName_ends_with, fileName_not_ends_with = optionals.fileName_not_ends_with, handle = optionals.handle, handle_not = optionals.handle_not, handle_in = optionals.handle_in, handle_not_in = optionals.handle_not_in, handle_lt = optionals.handle_lt, handle_lte = optionals.handle_lte, handle_gt = optionals.handle_gt, handle_gte = optionals.handle_gte, handle_contains = optionals.handle_contains, handle_not_contains = optionals.handle_not_contains, handle_starts_with = optionals.handle_starts_with, handle_not_starts_with = optionals.handle_not_starts_with, handle_ends_with = optionals.handle_ends_with, handle_not_ends_with = optionals.handle_not_ends_with, height = optionals.height, height_not = optionals.height_not, height_in = optionals.height_in, height_not_in = optionals.height_not_in, height_lt = optionals.height_lt, height_lte = optionals.height_lte, height_gt = optionals.height_gt, height_gte = optionals.height_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, mimeType = optionals.mimeType, mimeType_not = optionals.mimeType_not, mimeType_in = optionals.mimeType_in, mimeType_not_in = optionals.mimeType_not_in, mimeType_lt = optionals.mimeType_lt, mimeType_lte = optionals.mimeType_lte, mimeType_gt = optionals.mimeType_gt, mimeType_gte = optionals.mimeType_gte, mimeType_contains = optionals.mimeType_contains, mimeType_not_contains = optionals.mimeType_not_contains, mimeType_starts_with = optionals.mimeType_starts_with, mimeType_not_starts_with = optionals.mimeType_not_starts_with, mimeType_ends_with = optionals.mimeType_ends_with, mimeType_not_ends_with = optionals.mimeType_not_ends_with, size = optionals.size, size_not = optionals.size_not, size_in = optionals.size_in, size_not_in = optionals.size_not_in, size_lt = optionals.size_lt, size_lte = optionals.size_lte, size_gt = optionals.size_gt, size_gte = optionals.size_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, url = optionals.url, url_not = optionals.url_not, url_in = optionals.url_in, url_not_in = optionals.url_not_in, url_lt = optionals.url_lt, url_lte = optionals.url_lte, url_gt = optionals.url_gt, url_gte = optionals.url_gte, url_contains = optionals.url_contains, url_not_contains = optionals.url_not_contains, url_starts_with = optionals.url_starts_with, url_not_starts_with = optionals.url_not_starts_with, url_ends_with = optionals.url_ends_with, url_not_ends_with = optionals.url_not_ends_with, width = optionals.width, width_not = optionals.width_not, width_in = optionals.width_in, width_not_in = optionals.width_not_in, width_lt = optionals.width_lt, width_lte = optionals.width_lte, width_gt = optionals.width_gt, width_gte = optionals.width_gte }


type alias AssetFilterOptionalFields =
    { and : OptionalArgument (List AssetFilter)
    , or : OptionalArgument (List AssetFilter)
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , fileName : OptionalArgument String
    , fileName_not : OptionalArgument String
    , fileName_in : OptionalArgument (List String)
    , fileName_not_in : OptionalArgument (List String)
    , fileName_lt : OptionalArgument String
    , fileName_lte : OptionalArgument String
    , fileName_gt : OptionalArgument String
    , fileName_gte : OptionalArgument String
    , fileName_contains : OptionalArgument String
    , fileName_not_contains : OptionalArgument String
    , fileName_starts_with : OptionalArgument String
    , fileName_not_starts_with : OptionalArgument String
    , fileName_ends_with : OptionalArgument String
    , fileName_not_ends_with : OptionalArgument String
    , handle : OptionalArgument String
    , handle_not : OptionalArgument String
    , handle_in : OptionalArgument (List String)
    , handle_not_in : OptionalArgument (List String)
    , handle_lt : OptionalArgument String
    , handle_lte : OptionalArgument String
    , handle_gt : OptionalArgument String
    , handle_gte : OptionalArgument String
    , handle_contains : OptionalArgument String
    , handle_not_contains : OptionalArgument String
    , handle_starts_with : OptionalArgument String
    , handle_not_starts_with : OptionalArgument String
    , handle_ends_with : OptionalArgument String
    , handle_not_ends_with : OptionalArgument String
    , height : OptionalArgument Float
    , height_not : OptionalArgument Float
    , height_in : OptionalArgument (List Float)
    , height_not_in : OptionalArgument (List Float)
    , height_lt : OptionalArgument Float
    , height_lte : OptionalArgument Float
    , height_gt : OptionalArgument Float
    , height_gte : OptionalArgument Float
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , mimeType : OptionalArgument String
    , mimeType_not : OptionalArgument String
    , mimeType_in : OptionalArgument (List String)
    , mimeType_not_in : OptionalArgument (List String)
    , mimeType_lt : OptionalArgument String
    , mimeType_lte : OptionalArgument String
    , mimeType_gt : OptionalArgument String
    , mimeType_gte : OptionalArgument String
    , mimeType_contains : OptionalArgument String
    , mimeType_not_contains : OptionalArgument String
    , mimeType_starts_with : OptionalArgument String
    , mimeType_not_starts_with : OptionalArgument String
    , mimeType_ends_with : OptionalArgument String
    , mimeType_not_ends_with : OptionalArgument String
    , size : OptionalArgument Float
    , size_not : OptionalArgument Float
    , size_in : OptionalArgument (List Float)
    , size_not_in : OptionalArgument (List Float)
    , size_lt : OptionalArgument Float
    , size_lte : OptionalArgument Float
    , size_gt : OptionalArgument Float
    , size_gte : OptionalArgument Float
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , url : OptionalArgument String
    , url_not : OptionalArgument String
    , url_in : OptionalArgument (List String)
    , url_not_in : OptionalArgument (List String)
    , url_lt : OptionalArgument String
    , url_lte : OptionalArgument String
    , url_gt : OptionalArgument String
    , url_gte : OptionalArgument String
    , url_contains : OptionalArgument String
    , url_not_contains : OptionalArgument String
    , url_starts_with : OptionalArgument String
    , url_not_starts_with : OptionalArgument String
    , url_ends_with : OptionalArgument String
    , url_not_ends_with : OptionalArgument String
    , width : OptionalArgument Float
    , width_not : OptionalArgument Float
    , width_in : OptionalArgument (List Float)
    , width_not_in : OptionalArgument (List Float)
    , width_lt : OptionalArgument Float
    , width_lte : OptionalArgument Float
    , width_gt : OptionalArgument Float
    , width_gte : OptionalArgument Float
    }


{-| Type alias for the `AssetFilter` attributes. Note that this type
needs to use the `AssetFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias AssetFilterRaw =
    { and : OptionalArgument (List AssetFilter)
    , or : OptionalArgument (List AssetFilter)
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , fileName : OptionalArgument String
    , fileName_not : OptionalArgument String
    , fileName_in : OptionalArgument (List String)
    , fileName_not_in : OptionalArgument (List String)
    , fileName_lt : OptionalArgument String
    , fileName_lte : OptionalArgument String
    , fileName_gt : OptionalArgument String
    , fileName_gte : OptionalArgument String
    , fileName_contains : OptionalArgument String
    , fileName_not_contains : OptionalArgument String
    , fileName_starts_with : OptionalArgument String
    , fileName_not_starts_with : OptionalArgument String
    , fileName_ends_with : OptionalArgument String
    , fileName_not_ends_with : OptionalArgument String
    , handle : OptionalArgument String
    , handle_not : OptionalArgument String
    , handle_in : OptionalArgument (List String)
    , handle_not_in : OptionalArgument (List String)
    , handle_lt : OptionalArgument String
    , handle_lte : OptionalArgument String
    , handle_gt : OptionalArgument String
    , handle_gte : OptionalArgument String
    , handle_contains : OptionalArgument String
    , handle_not_contains : OptionalArgument String
    , handle_starts_with : OptionalArgument String
    , handle_not_starts_with : OptionalArgument String
    , handle_ends_with : OptionalArgument String
    , handle_not_ends_with : OptionalArgument String
    , height : OptionalArgument Float
    , height_not : OptionalArgument Float
    , height_in : OptionalArgument (List Float)
    , height_not_in : OptionalArgument (List Float)
    , height_lt : OptionalArgument Float
    , height_lte : OptionalArgument Float
    , height_gt : OptionalArgument Float
    , height_gte : OptionalArgument Float
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , mimeType : OptionalArgument String
    , mimeType_not : OptionalArgument String
    , mimeType_in : OptionalArgument (List String)
    , mimeType_not_in : OptionalArgument (List String)
    , mimeType_lt : OptionalArgument String
    , mimeType_lte : OptionalArgument String
    , mimeType_gt : OptionalArgument String
    , mimeType_gte : OptionalArgument String
    , mimeType_contains : OptionalArgument String
    , mimeType_not_contains : OptionalArgument String
    , mimeType_starts_with : OptionalArgument String
    , mimeType_not_starts_with : OptionalArgument String
    , mimeType_ends_with : OptionalArgument String
    , mimeType_not_ends_with : OptionalArgument String
    , size : OptionalArgument Float
    , size_not : OptionalArgument Float
    , size_in : OptionalArgument (List Float)
    , size_not_in : OptionalArgument (List Float)
    , size_lt : OptionalArgument Float
    , size_lte : OptionalArgument Float
    , size_gt : OptionalArgument Float
    , size_gte : OptionalArgument Float
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , url : OptionalArgument String
    , url_not : OptionalArgument String
    , url_in : OptionalArgument (List String)
    , url_not_in : OptionalArgument (List String)
    , url_lt : OptionalArgument String
    , url_lte : OptionalArgument String
    , url_gt : OptionalArgument String
    , url_gte : OptionalArgument String
    , url_contains : OptionalArgument String
    , url_not_contains : OptionalArgument String
    , url_starts_with : OptionalArgument String
    , url_not_starts_with : OptionalArgument String
    , url_ends_with : OptionalArgument String
    , url_not_ends_with : OptionalArgument String
    , width : OptionalArgument Float
    , width_not : OptionalArgument Float
    , width_in : OptionalArgument (List Float)
    , width_not_in : OptionalArgument (List Float)
    , width_lt : OptionalArgument Float
    , width_lte : OptionalArgument Float
    , width_gt : OptionalArgument Float
    , width_gte : OptionalArgument Float
    }


{-| Type for the AssetFilter input object.
-}
type AssetFilter
    = AssetFilter AssetFilterRaw


{-| Encode a AssetFilter into a value that can be used as an argument.
-}
encodeAssetFilter : AssetFilter -> Value
encodeAssetFilter (AssetFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeAssetFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeAssetFilter |> Encode.list) |> Encode.optional input.or ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "fileName", Encode.string |> Encode.optional input.fileName ), ( "fileName_not", Encode.string |> Encode.optional input.fileName_not ), ( "fileName_in", (Encode.string |> Encode.list) |> Encode.optional input.fileName_in ), ( "fileName_not_in", (Encode.string |> Encode.list) |> Encode.optional input.fileName_not_in ), ( "fileName_lt", Encode.string |> Encode.optional input.fileName_lt ), ( "fileName_lte", Encode.string |> Encode.optional input.fileName_lte ), ( "fileName_gt", Encode.string |> Encode.optional input.fileName_gt ), ( "fileName_gte", Encode.string |> Encode.optional input.fileName_gte ), ( "fileName_contains", Encode.string |> Encode.optional input.fileName_contains ), ( "fileName_not_contains", Encode.string |> Encode.optional input.fileName_not_contains ), ( "fileName_starts_with", Encode.string |> Encode.optional input.fileName_starts_with ), ( "fileName_not_starts_with", Encode.string |> Encode.optional input.fileName_not_starts_with ), ( "fileName_ends_with", Encode.string |> Encode.optional input.fileName_ends_with ), ( "fileName_not_ends_with", Encode.string |> Encode.optional input.fileName_not_ends_with ), ( "handle", Encode.string |> Encode.optional input.handle ), ( "handle_not", Encode.string |> Encode.optional input.handle_not ), ( "handle_in", (Encode.string |> Encode.list) |> Encode.optional input.handle_in ), ( "handle_not_in", (Encode.string |> Encode.list) |> Encode.optional input.handle_not_in ), ( "handle_lt", Encode.string |> Encode.optional input.handle_lt ), ( "handle_lte", Encode.string |> Encode.optional input.handle_lte ), ( "handle_gt", Encode.string |> Encode.optional input.handle_gt ), ( "handle_gte", Encode.string |> Encode.optional input.handle_gte ), ( "handle_contains", Encode.string |> Encode.optional input.handle_contains ), ( "handle_not_contains", Encode.string |> Encode.optional input.handle_not_contains ), ( "handle_starts_with", Encode.string |> Encode.optional input.handle_starts_with ), ( "handle_not_starts_with", Encode.string |> Encode.optional input.handle_not_starts_with ), ( "handle_ends_with", Encode.string |> Encode.optional input.handle_ends_with ), ( "handle_not_ends_with", Encode.string |> Encode.optional input.handle_not_ends_with ), ( "height", Encode.float |> Encode.optional input.height ), ( "height_not", Encode.float |> Encode.optional input.height_not ), ( "height_in", (Encode.float |> Encode.list) |> Encode.optional input.height_in ), ( "height_not_in", (Encode.float |> Encode.list) |> Encode.optional input.height_not_in ), ( "height_lt", Encode.float |> Encode.optional input.height_lt ), ( "height_lte", Encode.float |> Encode.optional input.height_lte ), ( "height_gt", Encode.float |> Encode.optional input.height_gt ), ( "height_gte", Encode.float |> Encode.optional input.height_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "mimeType", Encode.string |> Encode.optional input.mimeType ), ( "mimeType_not", Encode.string |> Encode.optional input.mimeType_not ), ( "mimeType_in", (Encode.string |> Encode.list) |> Encode.optional input.mimeType_in ), ( "mimeType_not_in", (Encode.string |> Encode.list) |> Encode.optional input.mimeType_not_in ), ( "mimeType_lt", Encode.string |> Encode.optional input.mimeType_lt ), ( "mimeType_lte", Encode.string |> Encode.optional input.mimeType_lte ), ( "mimeType_gt", Encode.string |> Encode.optional input.mimeType_gt ), ( "mimeType_gte", Encode.string |> Encode.optional input.mimeType_gte ), ( "mimeType_contains", Encode.string |> Encode.optional input.mimeType_contains ), ( "mimeType_not_contains", Encode.string |> Encode.optional input.mimeType_not_contains ), ( "mimeType_starts_with", Encode.string |> Encode.optional input.mimeType_starts_with ), ( "mimeType_not_starts_with", Encode.string |> Encode.optional input.mimeType_not_starts_with ), ( "mimeType_ends_with", Encode.string |> Encode.optional input.mimeType_ends_with ), ( "mimeType_not_ends_with", Encode.string |> Encode.optional input.mimeType_not_ends_with ), ( "size", Encode.float |> Encode.optional input.size ), ( "size_not", Encode.float |> Encode.optional input.size_not ), ( "size_in", (Encode.float |> Encode.list) |> Encode.optional input.size_in ), ( "size_not_in", (Encode.float |> Encode.list) |> Encode.optional input.size_not_in ), ( "size_lt", Encode.float |> Encode.optional input.size_lt ), ( "size_lte", Encode.float |> Encode.optional input.size_lte ), ( "size_gt", Encode.float |> Encode.optional input.size_gt ), ( "size_gte", Encode.float |> Encode.optional input.size_gte ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "url", Encode.string |> Encode.optional input.url ), ( "url_not", Encode.string |> Encode.optional input.url_not ), ( "url_in", (Encode.string |> Encode.list) |> Encode.optional input.url_in ), ( "url_not_in", (Encode.string |> Encode.list) |> Encode.optional input.url_not_in ), ( "url_lt", Encode.string |> Encode.optional input.url_lt ), ( "url_lte", Encode.string |> Encode.optional input.url_lte ), ( "url_gt", Encode.string |> Encode.optional input.url_gt ), ( "url_gte", Encode.string |> Encode.optional input.url_gte ), ( "url_contains", Encode.string |> Encode.optional input.url_contains ), ( "url_not_contains", Encode.string |> Encode.optional input.url_not_contains ), ( "url_starts_with", Encode.string |> Encode.optional input.url_starts_with ), ( "url_not_starts_with", Encode.string |> Encode.optional input.url_not_starts_with ), ( "url_ends_with", Encode.string |> Encode.optional input.url_ends_with ), ( "url_not_ends_with", Encode.string |> Encode.optional input.url_not_ends_with ), ( "width", Encode.float |> Encode.optional input.width ), ( "width_not", Encode.float |> Encode.optional input.width_not ), ( "width_in", (Encode.float |> Encode.list) |> Encode.optional input.width_in ), ( "width_not_in", (Encode.float |> Encode.list) |> Encode.optional input.width_not_in ), ( "width_lt", Encode.float |> Encode.optional input.width_lt ), ( "width_lte", Encode.float |> Encode.optional input.width_lte ), ( "width_gt", Encode.float |> Encode.optional input.width_gt ), ( "width_gte", Encode.float |> Encode.optional input.width_gte ) ]


buildAssetSubscriptionFilter : (AssetSubscriptionFilterOptionalFields -> AssetSubscriptionFilterOptionalFields) -> AssetSubscriptionFilter
buildAssetSubscriptionFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, mutation_in = Absent, updatedFields_contains = Absent, updatedFields_contains_every = Absent, updatedFields_contains_some = Absent, node = Absent }
    in
    AssetSubscriptionFilter { and = optionals.and, or = optionals.or, mutation_in = optionals.mutation_in, updatedFields_contains = optionals.updatedFields_contains, updatedFields_contains_every = optionals.updatedFields_contains_every, updatedFields_contains_some = optionals.updatedFields_contains_some, node = optionals.node }


type alias AssetSubscriptionFilterOptionalFields =
    { and : OptionalArgument (List AssetSubscriptionFilter)
    , or : OptionalArgument (List AssetSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument AssetSubscriptionFilterNode
    }


{-| Type alias for the `AssetSubscriptionFilter` attributes. Note that this type
needs to use the `AssetSubscriptionFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias AssetSubscriptionFilterRaw =
    { and : OptionalArgument (List AssetSubscriptionFilter)
    , or : OptionalArgument (List AssetSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument AssetSubscriptionFilterNode
    }


{-| Type for the AssetSubscriptionFilter input object.
-}
type AssetSubscriptionFilter
    = AssetSubscriptionFilter AssetSubscriptionFilterRaw


{-| Encode a AssetSubscriptionFilter into a value that can be used as an argument.
-}
encodeAssetSubscriptionFilter : AssetSubscriptionFilter -> Value
encodeAssetSubscriptionFilter (AssetSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeAssetSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeAssetSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum Api.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeAssetSubscriptionFilterNode |> Encode.optional input.node ) ]


buildAssetSubscriptionFilterNode : (AssetSubscriptionFilterNodeOptionalFields -> AssetSubscriptionFilterNodeOptionalFields) -> AssetSubscriptionFilterNode
buildAssetSubscriptionFilterNode fillOptionals =
    let
        optionals =
            fillOptionals
                { createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, fileName = Absent, fileName_not = Absent, fileName_in = Absent, fileName_not_in = Absent, fileName_lt = Absent, fileName_lte = Absent, fileName_gt = Absent, fileName_gte = Absent, fileName_contains = Absent, fileName_not_contains = Absent, fileName_starts_with = Absent, fileName_not_starts_with = Absent, fileName_ends_with = Absent, fileName_not_ends_with = Absent, handle = Absent, handle_not = Absent, handle_in = Absent, handle_not_in = Absent, handle_lt = Absent, handle_lte = Absent, handle_gt = Absent, handle_gte = Absent, handle_contains = Absent, handle_not_contains = Absent, handle_starts_with = Absent, handle_not_starts_with = Absent, handle_ends_with = Absent, handle_not_ends_with = Absent, height = Absent, height_not = Absent, height_in = Absent, height_not_in = Absent, height_lt = Absent, height_lte = Absent, height_gt = Absent, height_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, mimeType = Absent, mimeType_not = Absent, mimeType_in = Absent, mimeType_not_in = Absent, mimeType_lt = Absent, mimeType_lte = Absent, mimeType_gt = Absent, mimeType_gte = Absent, mimeType_contains = Absent, mimeType_not_contains = Absent, mimeType_starts_with = Absent, mimeType_not_starts_with = Absent, mimeType_ends_with = Absent, mimeType_not_ends_with = Absent, size = Absent, size_not = Absent, size_in = Absent, size_not_in = Absent, size_lt = Absent, size_lte = Absent, size_gt = Absent, size_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, url = Absent, url_not = Absent, url_in = Absent, url_not_in = Absent, url_lt = Absent, url_lte = Absent, url_gt = Absent, url_gte = Absent, url_contains = Absent, url_not_contains = Absent, url_starts_with = Absent, url_not_starts_with = Absent, url_ends_with = Absent, url_not_ends_with = Absent, width = Absent, width_not = Absent, width_in = Absent, width_not_in = Absent, width_lt = Absent, width_lte = Absent, width_gt = Absent, width_gte = Absent }
    in
    { createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, fileName = optionals.fileName, fileName_not = optionals.fileName_not, fileName_in = optionals.fileName_in, fileName_not_in = optionals.fileName_not_in, fileName_lt = optionals.fileName_lt, fileName_lte = optionals.fileName_lte, fileName_gt = optionals.fileName_gt, fileName_gte = optionals.fileName_gte, fileName_contains = optionals.fileName_contains, fileName_not_contains = optionals.fileName_not_contains, fileName_starts_with = optionals.fileName_starts_with, fileName_not_starts_with = optionals.fileName_not_starts_with, fileName_ends_with = optionals.fileName_ends_with, fileName_not_ends_with = optionals.fileName_not_ends_with, handle = optionals.handle, handle_not = optionals.handle_not, handle_in = optionals.handle_in, handle_not_in = optionals.handle_not_in, handle_lt = optionals.handle_lt, handle_lte = optionals.handle_lte, handle_gt = optionals.handle_gt, handle_gte = optionals.handle_gte, handle_contains = optionals.handle_contains, handle_not_contains = optionals.handle_not_contains, handle_starts_with = optionals.handle_starts_with, handle_not_starts_with = optionals.handle_not_starts_with, handle_ends_with = optionals.handle_ends_with, handle_not_ends_with = optionals.handle_not_ends_with, height = optionals.height, height_not = optionals.height_not, height_in = optionals.height_in, height_not_in = optionals.height_not_in, height_lt = optionals.height_lt, height_lte = optionals.height_lte, height_gt = optionals.height_gt, height_gte = optionals.height_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, mimeType = optionals.mimeType, mimeType_not = optionals.mimeType_not, mimeType_in = optionals.mimeType_in, mimeType_not_in = optionals.mimeType_not_in, mimeType_lt = optionals.mimeType_lt, mimeType_lte = optionals.mimeType_lte, mimeType_gt = optionals.mimeType_gt, mimeType_gte = optionals.mimeType_gte, mimeType_contains = optionals.mimeType_contains, mimeType_not_contains = optionals.mimeType_not_contains, mimeType_starts_with = optionals.mimeType_starts_with, mimeType_not_starts_with = optionals.mimeType_not_starts_with, mimeType_ends_with = optionals.mimeType_ends_with, mimeType_not_ends_with = optionals.mimeType_not_ends_with, size = optionals.size, size_not = optionals.size_not, size_in = optionals.size_in, size_not_in = optionals.size_not_in, size_lt = optionals.size_lt, size_lte = optionals.size_lte, size_gt = optionals.size_gt, size_gte = optionals.size_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, url = optionals.url, url_not = optionals.url_not, url_in = optionals.url_in, url_not_in = optionals.url_not_in, url_lt = optionals.url_lt, url_lte = optionals.url_lte, url_gt = optionals.url_gt, url_gte = optionals.url_gte, url_contains = optionals.url_contains, url_not_contains = optionals.url_not_contains, url_starts_with = optionals.url_starts_with, url_not_starts_with = optionals.url_not_starts_with, url_ends_with = optionals.url_ends_with, url_not_ends_with = optionals.url_not_ends_with, width = optionals.width, width_not = optionals.width_not, width_in = optionals.width_in, width_not_in = optionals.width_not_in, width_lt = optionals.width_lt, width_lte = optionals.width_lte, width_gt = optionals.width_gt, width_gte = optionals.width_gte }


type alias AssetSubscriptionFilterNodeOptionalFields =
    { createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , fileName : OptionalArgument String
    , fileName_not : OptionalArgument String
    , fileName_in : OptionalArgument (List String)
    , fileName_not_in : OptionalArgument (List String)
    , fileName_lt : OptionalArgument String
    , fileName_lte : OptionalArgument String
    , fileName_gt : OptionalArgument String
    , fileName_gte : OptionalArgument String
    , fileName_contains : OptionalArgument String
    , fileName_not_contains : OptionalArgument String
    , fileName_starts_with : OptionalArgument String
    , fileName_not_starts_with : OptionalArgument String
    , fileName_ends_with : OptionalArgument String
    , fileName_not_ends_with : OptionalArgument String
    , handle : OptionalArgument String
    , handle_not : OptionalArgument String
    , handle_in : OptionalArgument (List String)
    , handle_not_in : OptionalArgument (List String)
    , handle_lt : OptionalArgument String
    , handle_lte : OptionalArgument String
    , handle_gt : OptionalArgument String
    , handle_gte : OptionalArgument String
    , handle_contains : OptionalArgument String
    , handle_not_contains : OptionalArgument String
    , handle_starts_with : OptionalArgument String
    , handle_not_starts_with : OptionalArgument String
    , handle_ends_with : OptionalArgument String
    , handle_not_ends_with : OptionalArgument String
    , height : OptionalArgument Float
    , height_not : OptionalArgument Float
    , height_in : OptionalArgument (List Float)
    , height_not_in : OptionalArgument (List Float)
    , height_lt : OptionalArgument Float
    , height_lte : OptionalArgument Float
    , height_gt : OptionalArgument Float
    , height_gte : OptionalArgument Float
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , mimeType : OptionalArgument String
    , mimeType_not : OptionalArgument String
    , mimeType_in : OptionalArgument (List String)
    , mimeType_not_in : OptionalArgument (List String)
    , mimeType_lt : OptionalArgument String
    , mimeType_lte : OptionalArgument String
    , mimeType_gt : OptionalArgument String
    , mimeType_gte : OptionalArgument String
    , mimeType_contains : OptionalArgument String
    , mimeType_not_contains : OptionalArgument String
    , mimeType_starts_with : OptionalArgument String
    , mimeType_not_starts_with : OptionalArgument String
    , mimeType_ends_with : OptionalArgument String
    , mimeType_not_ends_with : OptionalArgument String
    , size : OptionalArgument Float
    , size_not : OptionalArgument Float
    , size_in : OptionalArgument (List Float)
    , size_not_in : OptionalArgument (List Float)
    , size_lt : OptionalArgument Float
    , size_lte : OptionalArgument Float
    , size_gt : OptionalArgument Float
    , size_gte : OptionalArgument Float
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , url : OptionalArgument String
    , url_not : OptionalArgument String
    , url_in : OptionalArgument (List String)
    , url_not_in : OptionalArgument (List String)
    , url_lt : OptionalArgument String
    , url_lte : OptionalArgument String
    , url_gt : OptionalArgument String
    , url_gte : OptionalArgument String
    , url_contains : OptionalArgument String
    , url_not_contains : OptionalArgument String
    , url_starts_with : OptionalArgument String
    , url_not_starts_with : OptionalArgument String
    , url_ends_with : OptionalArgument String
    , url_not_ends_with : OptionalArgument String
    , width : OptionalArgument Float
    , width_not : OptionalArgument Float
    , width_in : OptionalArgument (List Float)
    , width_not_in : OptionalArgument (List Float)
    , width_lt : OptionalArgument Float
    , width_lte : OptionalArgument Float
    , width_gt : OptionalArgument Float
    , width_gte : OptionalArgument Float
    }


{-| Type for the AssetSubscriptionFilterNode input object.
-}
type alias AssetSubscriptionFilterNode =
    { createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , fileName : OptionalArgument String
    , fileName_not : OptionalArgument String
    , fileName_in : OptionalArgument (List String)
    , fileName_not_in : OptionalArgument (List String)
    , fileName_lt : OptionalArgument String
    , fileName_lte : OptionalArgument String
    , fileName_gt : OptionalArgument String
    , fileName_gte : OptionalArgument String
    , fileName_contains : OptionalArgument String
    , fileName_not_contains : OptionalArgument String
    , fileName_starts_with : OptionalArgument String
    , fileName_not_starts_with : OptionalArgument String
    , fileName_ends_with : OptionalArgument String
    , fileName_not_ends_with : OptionalArgument String
    , handle : OptionalArgument String
    , handle_not : OptionalArgument String
    , handle_in : OptionalArgument (List String)
    , handle_not_in : OptionalArgument (List String)
    , handle_lt : OptionalArgument String
    , handle_lte : OptionalArgument String
    , handle_gt : OptionalArgument String
    , handle_gte : OptionalArgument String
    , handle_contains : OptionalArgument String
    , handle_not_contains : OptionalArgument String
    , handle_starts_with : OptionalArgument String
    , handle_not_starts_with : OptionalArgument String
    , handle_ends_with : OptionalArgument String
    , handle_not_ends_with : OptionalArgument String
    , height : OptionalArgument Float
    , height_not : OptionalArgument Float
    , height_in : OptionalArgument (List Float)
    , height_not_in : OptionalArgument (List Float)
    , height_lt : OptionalArgument Float
    , height_lte : OptionalArgument Float
    , height_gt : OptionalArgument Float
    , height_gte : OptionalArgument Float
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , mimeType : OptionalArgument String
    , mimeType_not : OptionalArgument String
    , mimeType_in : OptionalArgument (List String)
    , mimeType_not_in : OptionalArgument (List String)
    , mimeType_lt : OptionalArgument String
    , mimeType_lte : OptionalArgument String
    , mimeType_gt : OptionalArgument String
    , mimeType_gte : OptionalArgument String
    , mimeType_contains : OptionalArgument String
    , mimeType_not_contains : OptionalArgument String
    , mimeType_starts_with : OptionalArgument String
    , mimeType_not_starts_with : OptionalArgument String
    , mimeType_ends_with : OptionalArgument String
    , mimeType_not_ends_with : OptionalArgument String
    , size : OptionalArgument Float
    , size_not : OptionalArgument Float
    , size_in : OptionalArgument (List Float)
    , size_not_in : OptionalArgument (List Float)
    , size_lt : OptionalArgument Float
    , size_lte : OptionalArgument Float
    , size_gt : OptionalArgument Float
    , size_gte : OptionalArgument Float
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , url : OptionalArgument String
    , url_not : OptionalArgument String
    , url_in : OptionalArgument (List String)
    , url_not_in : OptionalArgument (List String)
    , url_lt : OptionalArgument String
    , url_lte : OptionalArgument String
    , url_gt : OptionalArgument String
    , url_gte : OptionalArgument String
    , url_contains : OptionalArgument String
    , url_not_contains : OptionalArgument String
    , url_starts_with : OptionalArgument String
    , url_not_starts_with : OptionalArgument String
    , url_ends_with : OptionalArgument String
    , url_not_ends_with : OptionalArgument String
    , width : OptionalArgument Float
    , width_not : OptionalArgument Float
    , width_in : OptionalArgument (List Float)
    , width_not_in : OptionalArgument (List Float)
    , width_lt : OptionalArgument Float
    , width_lte : OptionalArgument Float
    , width_gt : OptionalArgument Float
    , width_gte : OptionalArgument Float
    }


{-| Encode a AssetSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeAssetSubscriptionFilterNode : AssetSubscriptionFilterNode -> Value
encodeAssetSubscriptionFilterNode input =
    Encode.maybeObject
        [ ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "fileName", Encode.string |> Encode.optional input.fileName ), ( "fileName_not", Encode.string |> Encode.optional input.fileName_not ), ( "fileName_in", (Encode.string |> Encode.list) |> Encode.optional input.fileName_in ), ( "fileName_not_in", (Encode.string |> Encode.list) |> Encode.optional input.fileName_not_in ), ( "fileName_lt", Encode.string |> Encode.optional input.fileName_lt ), ( "fileName_lte", Encode.string |> Encode.optional input.fileName_lte ), ( "fileName_gt", Encode.string |> Encode.optional input.fileName_gt ), ( "fileName_gte", Encode.string |> Encode.optional input.fileName_gte ), ( "fileName_contains", Encode.string |> Encode.optional input.fileName_contains ), ( "fileName_not_contains", Encode.string |> Encode.optional input.fileName_not_contains ), ( "fileName_starts_with", Encode.string |> Encode.optional input.fileName_starts_with ), ( "fileName_not_starts_with", Encode.string |> Encode.optional input.fileName_not_starts_with ), ( "fileName_ends_with", Encode.string |> Encode.optional input.fileName_ends_with ), ( "fileName_not_ends_with", Encode.string |> Encode.optional input.fileName_not_ends_with ), ( "handle", Encode.string |> Encode.optional input.handle ), ( "handle_not", Encode.string |> Encode.optional input.handle_not ), ( "handle_in", (Encode.string |> Encode.list) |> Encode.optional input.handle_in ), ( "handle_not_in", (Encode.string |> Encode.list) |> Encode.optional input.handle_not_in ), ( "handle_lt", Encode.string |> Encode.optional input.handle_lt ), ( "handle_lte", Encode.string |> Encode.optional input.handle_lte ), ( "handle_gt", Encode.string |> Encode.optional input.handle_gt ), ( "handle_gte", Encode.string |> Encode.optional input.handle_gte ), ( "handle_contains", Encode.string |> Encode.optional input.handle_contains ), ( "handle_not_contains", Encode.string |> Encode.optional input.handle_not_contains ), ( "handle_starts_with", Encode.string |> Encode.optional input.handle_starts_with ), ( "handle_not_starts_with", Encode.string |> Encode.optional input.handle_not_starts_with ), ( "handle_ends_with", Encode.string |> Encode.optional input.handle_ends_with ), ( "handle_not_ends_with", Encode.string |> Encode.optional input.handle_not_ends_with ), ( "height", Encode.float |> Encode.optional input.height ), ( "height_not", Encode.float |> Encode.optional input.height_not ), ( "height_in", (Encode.float |> Encode.list) |> Encode.optional input.height_in ), ( "height_not_in", (Encode.float |> Encode.list) |> Encode.optional input.height_not_in ), ( "height_lt", Encode.float |> Encode.optional input.height_lt ), ( "height_lte", Encode.float |> Encode.optional input.height_lte ), ( "height_gt", Encode.float |> Encode.optional input.height_gt ), ( "height_gte", Encode.float |> Encode.optional input.height_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "mimeType", Encode.string |> Encode.optional input.mimeType ), ( "mimeType_not", Encode.string |> Encode.optional input.mimeType_not ), ( "mimeType_in", (Encode.string |> Encode.list) |> Encode.optional input.mimeType_in ), ( "mimeType_not_in", (Encode.string |> Encode.list) |> Encode.optional input.mimeType_not_in ), ( "mimeType_lt", Encode.string |> Encode.optional input.mimeType_lt ), ( "mimeType_lte", Encode.string |> Encode.optional input.mimeType_lte ), ( "mimeType_gt", Encode.string |> Encode.optional input.mimeType_gt ), ( "mimeType_gte", Encode.string |> Encode.optional input.mimeType_gte ), ( "mimeType_contains", Encode.string |> Encode.optional input.mimeType_contains ), ( "mimeType_not_contains", Encode.string |> Encode.optional input.mimeType_not_contains ), ( "mimeType_starts_with", Encode.string |> Encode.optional input.mimeType_starts_with ), ( "mimeType_not_starts_with", Encode.string |> Encode.optional input.mimeType_not_starts_with ), ( "mimeType_ends_with", Encode.string |> Encode.optional input.mimeType_ends_with ), ( "mimeType_not_ends_with", Encode.string |> Encode.optional input.mimeType_not_ends_with ), ( "size", Encode.float |> Encode.optional input.size ), ( "size_not", Encode.float |> Encode.optional input.size_not ), ( "size_in", (Encode.float |> Encode.list) |> Encode.optional input.size_in ), ( "size_not_in", (Encode.float |> Encode.list) |> Encode.optional input.size_not_in ), ( "size_lt", Encode.float |> Encode.optional input.size_lt ), ( "size_lte", Encode.float |> Encode.optional input.size_lte ), ( "size_gt", Encode.float |> Encode.optional input.size_gt ), ( "size_gte", Encode.float |> Encode.optional input.size_gte ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "url", Encode.string |> Encode.optional input.url ), ( "url_not", Encode.string |> Encode.optional input.url_not ), ( "url_in", (Encode.string |> Encode.list) |> Encode.optional input.url_in ), ( "url_not_in", (Encode.string |> Encode.list) |> Encode.optional input.url_not_in ), ( "url_lt", Encode.string |> Encode.optional input.url_lt ), ( "url_lte", Encode.string |> Encode.optional input.url_lte ), ( "url_gt", Encode.string |> Encode.optional input.url_gt ), ( "url_gte", Encode.string |> Encode.optional input.url_gte ), ( "url_contains", Encode.string |> Encode.optional input.url_contains ), ( "url_not_contains", Encode.string |> Encode.optional input.url_not_contains ), ( "url_starts_with", Encode.string |> Encode.optional input.url_starts_with ), ( "url_not_starts_with", Encode.string |> Encode.optional input.url_not_starts_with ), ( "url_ends_with", Encode.string |> Encode.optional input.url_ends_with ), ( "url_not_ends_with", Encode.string |> Encode.optional input.url_not_ends_with ), ( "width", Encode.float |> Encode.optional input.width ), ( "width_not", Encode.float |> Encode.optional input.width_not ), ( "width_in", (Encode.float |> Encode.list) |> Encode.optional input.width_in ), ( "width_not_in", (Encode.float |> Encode.list) |> Encode.optional input.width_not_in ), ( "width_lt", Encode.float |> Encode.optional input.width_lt ), ( "width_lte", Encode.float |> Encode.optional input.width_lte ), ( "width_gt", Encode.float |> Encode.optional input.width_gt ), ( "width_gte", Encode.float |> Encode.optional input.width_gte ) ]


buildCreateAsset : CreateAssetRequiredFields -> (CreateAssetOptionalFields -> CreateAssetOptionalFields) -> CreateAsset
buildCreateAsset required fillOptionals =
    let
        optionals =
            fillOptionals
                { height = Absent, mimeType = Absent, width = Absent }
    in
    { fileName = required.fileName, handle = required.handle, height = optionals.height, mimeType = optionals.mimeType, size = required.size, url = required.url, width = optionals.width }


type alias CreateAssetRequiredFields =
    { fileName : String
    , handle : String
    , size : Float
    , url : String
    }


type alias CreateAssetOptionalFields =
    { height : OptionalArgument Float
    , mimeType : OptionalArgument String
    , width : OptionalArgument Float
    }


{-| Type for the CreateAsset input object.
-}
type alias CreateAsset =
    { fileName : String
    , handle : String
    , height : OptionalArgument Float
    , mimeType : OptionalArgument String
    , size : Float
    , url : String
    , width : OptionalArgument Float
    }


{-| Encode a CreateAsset into a value that can be used as an argument.
-}
encodeCreateAsset : CreateAsset -> Value
encodeCreateAsset input =
    Encode.maybeObject
        [ ( "fileName", Encode.string input.fileName |> Just ), ( "handle", Encode.string input.handle |> Just ), ( "height", Encode.float |> Encode.optional input.height ), ( "mimeType", Encode.string |> Encode.optional input.mimeType ), ( "size", Encode.float input.size |> Just ), ( "url", Encode.string input.url |> Just ), ( "width", Encode.float |> Encode.optional input.width ) ]


buildCreateFilm : CreateFilmRequiredFields -> (CreateFilmOptionalFields -> CreateFilmOptionalFields) -> CreateFilm
buildCreateFilm required fillOptionals =
    let
        optionals =
            fillOptionals
                { director = Absent, isPublished = Absent, openingCrawl = Absent, producers = Absent, releaseDate = Absent, charactersIds = Absent, characters = Absent, planetsIds = Absent, planets = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    CreateFilm { director = optionals.director, episodeId = required.episodeId, isPublished = optionals.isPublished, openingCrawl = optionals.openingCrawl, producers = optionals.producers, releaseDate = optionals.releaseDate, title = required.title, charactersIds = optionals.charactersIds, characters = optionals.characters, planetsIds = optionals.planetsIds, planets = optionals.planets, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias CreateFilmRequiredFields =
    { episodeId : Int
    , title : String
    }


type alias CreateFilmOptionalFields =
    { director : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type alias for the `CreateFilm` attributes. Note that this type
needs to use the `CreateFilm` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias CreateFilmRaw =
    { director : OptionalArgument String
    , episodeId : Int
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , title : String
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type for the CreateFilm input object.
-}
type CreateFilm
    = CreateFilm CreateFilmRaw


{-| Encode a CreateFilm into a value that can be used as an argument.
-}
encodeCreateFilm : CreateFilm -> Value
encodeCreateFilm (CreateFilm input) =
    Encode.maybeObject
        [ ( "director", Encode.string |> Encode.optional input.director ), ( "episodeId", Encode.int input.episodeId |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "producers", (Encode.string |> Encode.list) |> Encode.optional input.producers ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "title", Encode.string input.title |> Just ), ( "charactersIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.charactersIds ), ( "characters", (encodeFilmcharactersPerson |> Encode.list) |> Encode.optional input.characters ), ( "planetsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.planetsIds ), ( "planets", (encodeFilmplanetsPlanet |> Encode.list) |> Encode.optional input.planets ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodeFilmspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodeFilmstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodeFilmvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildCreatePerson : CreatePersonRequiredFields -> (CreatePersonOptionalFields -> CreatePersonOptionalFields) -> CreatePerson
buildCreatePerson required fillOptionals =
    let
        optionals =
            fillOptionals
                { birthYear = Absent, eyeColor = Absent, gender = Absent, hairColor = Absent, height = Absent, isPublished = Absent, mass = Absent, skinColor = Absent, homeworldId = Absent, homeworld = Absent, filmsIds = Absent, films = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    CreatePerson { birthYear = optionals.birthYear, eyeColor = optionals.eyeColor, gender = optionals.gender, hairColor = optionals.hairColor, height = optionals.height, isPublished = optionals.isPublished, mass = optionals.mass, name = required.name, skinColor = optionals.skinColor, homeworldId = optionals.homeworldId, homeworld = optionals.homeworld, filmsIds = optionals.filmsIds, films = optionals.films, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias CreatePersonRequiredFields =
    { name : String }


type alias CreatePersonOptionalFields =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type alias for the `CreatePerson` attributes. Note that this type
needs to use the `CreatePerson` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias CreatePersonRaw =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type for the CreatePerson input object.
-}
type CreatePerson
    = CreatePerson CreatePersonRaw


{-| Encode a CreatePerson into a value that can be used as an argument.
-}
encodeCreatePerson : CreatePerson -> Value
encodeCreatePerson (CreatePerson input) =
    Encode.maybeObject
        [ ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "eyeColor", (Encode.enum Api.Enum.PersonEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "hairColor", (Encode.enum Api.Enum.PersonHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "height", Encode.int |> Encode.optional input.height ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.PersonSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "homeworldId", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.homeworldId ), ( "homeworld", encodePersonhomeworldPlanet |> Encode.optional input.homeworld ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePersonfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodePersonspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodePersonstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodePersonvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildCreatePlanet : CreatePlanetRequiredFields -> (CreatePlanetOptionalFields -> CreatePlanetOptionalFields) -> CreatePlanet
buildCreatePlanet required fillOptionals =
    let
        optionals =
            fillOptionals
                { climate = Absent, diameter = Absent, gravity = Absent, isPublished = Absent, orbitalPeriod = Absent, population = Absent, rotationPeriod = Absent, surfaceWater = Absent, terrain = Absent, filmsIds = Absent, films = Absent, residentsIds = Absent, residents = Absent }
    in
    CreatePlanet { climate = optionals.climate, diameter = optionals.diameter, gravity = optionals.gravity, isPublished = optionals.isPublished, name = required.name, orbitalPeriod = optionals.orbitalPeriod, population = optionals.population, rotationPeriod = optionals.rotationPeriod, surfaceWater = optionals.surfaceWater, terrain = optionals.terrain, filmsIds = optionals.filmsIds, films = optionals.films, residentsIds = optionals.residentsIds, residents = optionals.residents }


type alias CreatePlanetRequiredFields =
    { name : String }


type alias CreatePlanetOptionalFields =
    { climate : OptionalArgument (List String)
    , diameter : OptionalArgument Int
    , gravity : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , orbitalPeriod : OptionalArgument Int
    , population : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , terrain : OptionalArgument (List String)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PlanetfilmsFilm)
    , residentsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , residents : OptionalArgument (List PlanetresidentsPerson)
    }


{-| Type alias for the `CreatePlanet` attributes. Note that this type
needs to use the `CreatePlanet` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias CreatePlanetRaw =
    { climate : OptionalArgument (List String)
    , diameter : OptionalArgument Int
    , gravity : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , name : String
    , orbitalPeriod : OptionalArgument Int
    , population : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , terrain : OptionalArgument (List String)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PlanetfilmsFilm)
    , residentsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , residents : OptionalArgument (List PlanetresidentsPerson)
    }


{-| Type for the CreatePlanet input object.
-}
type CreatePlanet
    = CreatePlanet CreatePlanetRaw


{-| Encode a CreatePlanet into a value that can be used as an argument.
-}
encodeCreatePlanet : CreatePlanet -> Value
encodeCreatePlanet (CreatePlanet input) =
    Encode.maybeObject
        [ ( "climate", (Encode.string |> Encode.list) |> Encode.optional input.climate ), ( "diameter", Encode.int |> Encode.optional input.diameter ), ( "gravity", Encode.string |> Encode.optional input.gravity ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "name", Encode.string input.name |> Just ), ( "orbitalPeriod", Encode.int |> Encode.optional input.orbitalPeriod ), ( "population", Encode.float |> Encode.optional input.population ), ( "rotationPeriod", Encode.int |> Encode.optional input.rotationPeriod ), ( "surfaceWater", Encode.float |> Encode.optional input.surfaceWater ), ( "terrain", (Encode.string |> Encode.list) |> Encode.optional input.terrain ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePlanetfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "residentsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.residentsIds ), ( "residents", (encodePlanetresidentsPerson |> Encode.list) |> Encode.optional input.residents ) ]


buildCreateSpecies : CreateSpeciesRequiredFields -> (CreateSpeciesOptionalFields -> CreateSpeciesOptionalFields) -> CreateSpecies
buildCreateSpecies required fillOptionals =
    let
        optionals =
            fillOptionals
                { averageHeight = Absent, averageLifespan = Absent, classification = Absent, designation = Absent, eyeColor = Absent, hairColor = Absent, isPublished = Absent, language = Absent, skinColor = Absent, filmsIds = Absent, films = Absent, peopleIds = Absent, people = Absent }
    in
    CreateSpecies { averageHeight = optionals.averageHeight, averageLifespan = optionals.averageLifespan, classification = optionals.classification, designation = optionals.designation, eyeColor = optionals.eyeColor, hairColor = optionals.hairColor, isPublished = optionals.isPublished, language = optionals.language, name = required.name, skinColor = optionals.skinColor, filmsIds = optionals.filmsIds, films = optionals.films, peopleIds = optionals.peopleIds, people = optionals.people }


type alias CreateSpeciesRequiredFields =
    { name : String }


type alias CreateSpeciesOptionalFields =
    { averageHeight : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , classification : OptionalArgument String
    , designation : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.SpeciesEyeColor.SpeciesEyeColor)
    , hairColor : OptionalArgument (List Api.Enum.SpeciesHairColor.SpeciesHairColor)
    , isPublished : OptionalArgument Bool
    , language : OptionalArgument String
    , skinColor : OptionalArgument (List Api.Enum.SpeciesSkinColor.SpeciesSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List SpeciesfilmsFilm)
    , peopleIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , people : OptionalArgument (List SpeciespeoplePerson)
    }


{-| Type alias for the `CreateSpecies` attributes. Note that this type
needs to use the `CreateSpecies` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias CreateSpeciesRaw =
    { averageHeight : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , classification : OptionalArgument String
    , designation : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.SpeciesEyeColor.SpeciesEyeColor)
    , hairColor : OptionalArgument (List Api.Enum.SpeciesHairColor.SpeciesHairColor)
    , isPublished : OptionalArgument Bool
    , language : OptionalArgument String
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.SpeciesSkinColor.SpeciesSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List SpeciesfilmsFilm)
    , peopleIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , people : OptionalArgument (List SpeciespeoplePerson)
    }


{-| Type for the CreateSpecies input object.
-}
type CreateSpecies
    = CreateSpecies CreateSpeciesRaw


{-| Encode a CreateSpecies into a value that can be used as an argument.
-}
encodeCreateSpecies : CreateSpecies -> Value
encodeCreateSpecies (CreateSpecies input) =
    Encode.maybeObject
        [ ( "averageHeight", Encode.int |> Encode.optional input.averageHeight ), ( "averageLifespan", Encode.int |> Encode.optional input.averageLifespan ), ( "classification", Encode.string |> Encode.optional input.classification ), ( "designation", Encode.string |> Encode.optional input.designation ), ( "eyeColor", (Encode.enum Api.Enum.SpeciesEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "hairColor", (Encode.enum Api.Enum.SpeciesHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "language", Encode.string |> Encode.optional input.language ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.SpeciesSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeSpeciesfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "peopleIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.peopleIds ), ( "people", (encodeSpeciespeoplePerson |> Encode.list) |> Encode.optional input.people ) ]


buildCreateStarship : CreateStarshipRequiredFields -> (CreateStarshipOptionalFields -> CreateStarshipOptionalFields) -> CreateStarship
buildCreateStarship required fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, class = Absent, consumables = Absent, costInCredits = Absent, crew = Absent, hyperdriveRating = Absent, isPublished = Absent, length = Absent, manufacturer = Absent, maxAtmospheringSpeed = Absent, mglt = Absent, passengers = Absent, filmsIds = Absent, films = Absent, pilotsIds = Absent, pilots = Absent }
    in
    CreateStarship { cargoCapacity = optionals.cargoCapacity, class = optionals.class, consumables = optionals.consumables, costInCredits = optionals.costInCredits, crew = optionals.crew, hyperdriveRating = optionals.hyperdriveRating, isPublished = optionals.isPublished, length = optionals.length, manufacturer = optionals.manufacturer, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, mglt = optionals.mglt, name = required.name, passengers = optionals.passengers, filmsIds = optionals.filmsIds, films = optionals.films, pilotsIds = optionals.pilotsIds, pilots = optionals.pilots }


type alias CreateStarshipRequiredFields =
    { name : String }


type alias CreateStarshipOptionalFields =
    { cargoCapacity : OptionalArgument Float
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , crew : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , mglt : OptionalArgument Int
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List StarshipfilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List StarshippilotsPerson)
    }


{-| Type alias for the `CreateStarship` attributes. Note that this type
needs to use the `CreateStarship` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias CreateStarshipRaw =
    { cargoCapacity : OptionalArgument Float
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , crew : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , mglt : OptionalArgument Int
    , name : String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List StarshipfilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List StarshippilotsPerson)
    }


{-| Type for the CreateStarship input object.
-}
type CreateStarship
    = CreateStarship CreateStarshipRaw


{-| Encode a CreateStarship into a value that can be used as an argument.
-}
encodeCreateStarship : CreateStarship -> Value
encodeCreateStarship (CreateStarship input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.float |> Encode.optional input.cargoCapacity ), ( "class", Encode.string |> Encode.optional input.class ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "costInCredits", Encode.float |> Encode.optional input.costInCredits ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "hyperdriveRating", Encode.float |> Encode.optional input.hyperdriveRating ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "length", Encode.float |> Encode.optional input.length ), ( "manufacturer", (Encode.string |> Encode.list) |> Encode.optional input.manufacturer ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "mglt", Encode.int |> Encode.optional input.mglt ), ( "name", Encode.string input.name |> Just ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeStarshipfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "pilotsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.pilotsIds ), ( "pilots", (encodeStarshippilotsPerson |> Encode.list) |> Encode.optional input.pilots ) ]


buildCreateVehicle : CreateVehicleRequiredFields -> (CreateVehicleOptionalFields -> CreateVehicleOptionalFields) -> CreateVehicle
buildCreateVehicle required fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, class = Absent, consumables = Absent, costInCredits = Absent, crew = Absent, isPublished = Absent, length = Absent, manufacturer = Absent, maxAtmospheringSpeed = Absent, model = Absent, passengers = Absent, filmsIds = Absent, films = Absent, pilotsIds = Absent, pilots = Absent }
    in
    CreateVehicle { cargoCapacity = optionals.cargoCapacity, class = optionals.class, consumables = optionals.consumables, costInCredits = optionals.costInCredits, crew = optionals.crew, isPublished = optionals.isPublished, length = optionals.length, manufacturer = optionals.manufacturer, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, model = optionals.model, name = required.name, passengers = optionals.passengers, filmsIds = optionals.filmsIds, films = optionals.films, pilotsIds = optionals.pilotsIds, pilots = optionals.pilots }


type alias CreateVehicleRequiredFields =
    { name : String }


type alias CreateVehicleOptionalFields =
    { cargoCapacity : OptionalArgument Int
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , crew : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , model : OptionalArgument String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List VehiclefilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List VehiclepilotsPerson)
    }


{-| Type alias for the `CreateVehicle` attributes. Note that this type
needs to use the `CreateVehicle` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias CreateVehicleRaw =
    { cargoCapacity : OptionalArgument Int
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , crew : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , model : OptionalArgument String
    , name : String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List VehiclefilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List VehiclepilotsPerson)
    }


{-| Type for the CreateVehicle input object.
-}
type CreateVehicle
    = CreateVehicle CreateVehicleRaw


{-| Encode a CreateVehicle into a value that can be used as an argument.
-}
encodeCreateVehicle : CreateVehicle -> Value
encodeCreateVehicle (CreateVehicle input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.int |> Encode.optional input.cargoCapacity ), ( "class", Encode.string |> Encode.optional input.class ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "costInCredits", Encode.int |> Encode.optional input.costInCredits ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "length", Encode.float |> Encode.optional input.length ), ( "manufacturer", (Encode.string |> Encode.list) |> Encode.optional input.manufacturer ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "model", Encode.string |> Encode.optional input.model ), ( "name", Encode.string input.name |> Just ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeVehiclefilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "pilotsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.pilotsIds ), ( "pilots", (encodeVehiclepilotsPerson |> Encode.list) |> Encode.optional input.pilots ) ]


buildFilmFilter : (FilmFilterOptionalFields -> FilmFilterOptionalFields) -> FilmFilter
buildFilmFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, director = Absent, director_not = Absent, director_in = Absent, director_not_in = Absent, director_lt = Absent, director_lte = Absent, director_gt = Absent, director_gte = Absent, director_contains = Absent, director_not_contains = Absent, director_starts_with = Absent, director_not_starts_with = Absent, director_ends_with = Absent, director_not_ends_with = Absent, episodeId = Absent, episodeId_not = Absent, episodeId_in = Absent, episodeId_not_in = Absent, episodeId_lt = Absent, episodeId_lte = Absent, episodeId_gt = Absent, episodeId_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, openingCrawl = Absent, openingCrawl_not = Absent, openingCrawl_in = Absent, openingCrawl_not_in = Absent, openingCrawl_lt = Absent, openingCrawl_lte = Absent, openingCrawl_gt = Absent, openingCrawl_gte = Absent, openingCrawl_contains = Absent, openingCrawl_not_contains = Absent, openingCrawl_starts_with = Absent, openingCrawl_not_starts_with = Absent, openingCrawl_ends_with = Absent, openingCrawl_not_ends_with = Absent, releaseDate = Absent, releaseDate_not = Absent, releaseDate_in = Absent, releaseDate_not_in = Absent, releaseDate_lt = Absent, releaseDate_lte = Absent, releaseDate_gt = Absent, releaseDate_gte = Absent, title = Absent, title_not = Absent, title_in = Absent, title_not_in = Absent, title_lt = Absent, title_lte = Absent, title_gt = Absent, title_gte = Absent, title_contains = Absent, title_not_contains = Absent, title_starts_with = Absent, title_not_starts_with = Absent, title_ends_with = Absent, title_not_ends_with = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, characters_every = Absent, characters_some = Absent, characters_none = Absent, planets_every = Absent, planets_some = Absent, planets_none = Absent, species_every = Absent, species_some = Absent, species_none = Absent, starships_every = Absent, starships_some = Absent, starships_none = Absent, vehicles_every = Absent, vehicles_some = Absent, vehicles_none = Absent }
    in
    FilmFilter { and = optionals.and, or = optionals.or, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, director = optionals.director, director_not = optionals.director_not, director_in = optionals.director_in, director_not_in = optionals.director_not_in, director_lt = optionals.director_lt, director_lte = optionals.director_lte, director_gt = optionals.director_gt, director_gte = optionals.director_gte, director_contains = optionals.director_contains, director_not_contains = optionals.director_not_contains, director_starts_with = optionals.director_starts_with, director_not_starts_with = optionals.director_not_starts_with, director_ends_with = optionals.director_ends_with, director_not_ends_with = optionals.director_not_ends_with, episodeId = optionals.episodeId, episodeId_not = optionals.episodeId_not, episodeId_in = optionals.episodeId_in, episodeId_not_in = optionals.episodeId_not_in, episodeId_lt = optionals.episodeId_lt, episodeId_lte = optionals.episodeId_lte, episodeId_gt = optionals.episodeId_gt, episodeId_gte = optionals.episodeId_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, openingCrawl = optionals.openingCrawl, openingCrawl_not = optionals.openingCrawl_not, openingCrawl_in = optionals.openingCrawl_in, openingCrawl_not_in = optionals.openingCrawl_not_in, openingCrawl_lt = optionals.openingCrawl_lt, openingCrawl_lte = optionals.openingCrawl_lte, openingCrawl_gt = optionals.openingCrawl_gt, openingCrawl_gte = optionals.openingCrawl_gte, openingCrawl_contains = optionals.openingCrawl_contains, openingCrawl_not_contains = optionals.openingCrawl_not_contains, openingCrawl_starts_with = optionals.openingCrawl_starts_with, openingCrawl_not_starts_with = optionals.openingCrawl_not_starts_with, openingCrawl_ends_with = optionals.openingCrawl_ends_with, openingCrawl_not_ends_with = optionals.openingCrawl_not_ends_with, releaseDate = optionals.releaseDate, releaseDate_not = optionals.releaseDate_not, releaseDate_in = optionals.releaseDate_in, releaseDate_not_in = optionals.releaseDate_not_in, releaseDate_lt = optionals.releaseDate_lt, releaseDate_lte = optionals.releaseDate_lte, releaseDate_gt = optionals.releaseDate_gt, releaseDate_gte = optionals.releaseDate_gte, title = optionals.title, title_not = optionals.title_not, title_in = optionals.title_in, title_not_in = optionals.title_not_in, title_lt = optionals.title_lt, title_lte = optionals.title_lte, title_gt = optionals.title_gt, title_gte = optionals.title_gte, title_contains = optionals.title_contains, title_not_contains = optionals.title_not_contains, title_starts_with = optionals.title_starts_with, title_not_starts_with = optionals.title_not_starts_with, title_ends_with = optionals.title_ends_with, title_not_ends_with = optionals.title_not_ends_with, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, characters_every = optionals.characters_every, characters_some = optionals.characters_some, characters_none = optionals.characters_none, planets_every = optionals.planets_every, planets_some = optionals.planets_some, planets_none = optionals.planets_none, species_every = optionals.species_every, species_some = optionals.species_some, species_none = optionals.species_none, starships_every = optionals.starships_every, starships_some = optionals.starships_some, starships_none = optionals.starships_none, vehicles_every = optionals.vehicles_every, vehicles_some = optionals.vehicles_some, vehicles_none = optionals.vehicles_none }


type alias FilmFilterOptionalFields =
    { and : OptionalArgument (List FilmFilter)
    , or : OptionalArgument (List FilmFilter)
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , director : OptionalArgument String
    , director_not : OptionalArgument String
    , director_in : OptionalArgument (List String)
    , director_not_in : OptionalArgument (List String)
    , director_lt : OptionalArgument String
    , director_lte : OptionalArgument String
    , director_gt : OptionalArgument String
    , director_gte : OptionalArgument String
    , director_contains : OptionalArgument String
    , director_not_contains : OptionalArgument String
    , director_starts_with : OptionalArgument String
    , director_not_starts_with : OptionalArgument String
    , director_ends_with : OptionalArgument String
    , director_not_ends_with : OptionalArgument String
    , episodeId : OptionalArgument Int
    , episodeId_not : OptionalArgument Int
    , episodeId_in : OptionalArgument (List Int)
    , episodeId_not_in : OptionalArgument (List Int)
    , episodeId_lt : OptionalArgument Int
    , episodeId_lte : OptionalArgument Int
    , episodeId_gt : OptionalArgument Int
    , episodeId_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , openingCrawl_not : OptionalArgument String
    , openingCrawl_in : OptionalArgument (List String)
    , openingCrawl_not_in : OptionalArgument (List String)
    , openingCrawl_lt : OptionalArgument String
    , openingCrawl_lte : OptionalArgument String
    , openingCrawl_gt : OptionalArgument String
    , openingCrawl_gte : OptionalArgument String
    , openingCrawl_contains : OptionalArgument String
    , openingCrawl_not_contains : OptionalArgument String
    , openingCrawl_starts_with : OptionalArgument String
    , openingCrawl_not_starts_with : OptionalArgument String
    , openingCrawl_ends_with : OptionalArgument String
    , openingCrawl_not_ends_with : OptionalArgument String
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_not : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , releaseDate_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , releaseDate_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , title : OptionalArgument String
    , title_not : OptionalArgument String
    , title_in : OptionalArgument (List String)
    , title_not_in : OptionalArgument (List String)
    , title_lt : OptionalArgument String
    , title_lte : OptionalArgument String
    , title_gt : OptionalArgument String
    , title_gte : OptionalArgument String
    , title_contains : OptionalArgument String
    , title_not_contains : OptionalArgument String
    , title_starts_with : OptionalArgument String
    , title_not_starts_with : OptionalArgument String
    , title_ends_with : OptionalArgument String
    , title_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , characters_every : OptionalArgument PersonFilter
    , characters_some : OptionalArgument PersonFilter
    , characters_none : OptionalArgument PersonFilter
    , planets_every : OptionalArgument PlanetFilter
    , planets_some : OptionalArgument PlanetFilter
    , planets_none : OptionalArgument PlanetFilter
    , species_every : OptionalArgument SpeciesFilter
    , species_some : OptionalArgument SpeciesFilter
    , species_none : OptionalArgument SpeciesFilter
    , starships_every : OptionalArgument StarshipFilter
    , starships_some : OptionalArgument StarshipFilter
    , starships_none : OptionalArgument StarshipFilter
    , vehicles_every : OptionalArgument VehicleFilter
    , vehicles_some : OptionalArgument VehicleFilter
    , vehicles_none : OptionalArgument VehicleFilter
    }


{-| Type alias for the `FilmFilter` attributes. Note that this type
needs to use the `FilmFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias FilmFilterRaw =
    { and : OptionalArgument (List FilmFilter)
    , or : OptionalArgument (List FilmFilter)
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , director : OptionalArgument String
    , director_not : OptionalArgument String
    , director_in : OptionalArgument (List String)
    , director_not_in : OptionalArgument (List String)
    , director_lt : OptionalArgument String
    , director_lte : OptionalArgument String
    , director_gt : OptionalArgument String
    , director_gte : OptionalArgument String
    , director_contains : OptionalArgument String
    , director_not_contains : OptionalArgument String
    , director_starts_with : OptionalArgument String
    , director_not_starts_with : OptionalArgument String
    , director_ends_with : OptionalArgument String
    , director_not_ends_with : OptionalArgument String
    , episodeId : OptionalArgument Int
    , episodeId_not : OptionalArgument Int
    , episodeId_in : OptionalArgument (List Int)
    , episodeId_not_in : OptionalArgument (List Int)
    , episodeId_lt : OptionalArgument Int
    , episodeId_lte : OptionalArgument Int
    , episodeId_gt : OptionalArgument Int
    , episodeId_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , openingCrawl_not : OptionalArgument String
    , openingCrawl_in : OptionalArgument (List String)
    , openingCrawl_not_in : OptionalArgument (List String)
    , openingCrawl_lt : OptionalArgument String
    , openingCrawl_lte : OptionalArgument String
    , openingCrawl_gt : OptionalArgument String
    , openingCrawl_gte : OptionalArgument String
    , openingCrawl_contains : OptionalArgument String
    , openingCrawl_not_contains : OptionalArgument String
    , openingCrawl_starts_with : OptionalArgument String
    , openingCrawl_not_starts_with : OptionalArgument String
    , openingCrawl_ends_with : OptionalArgument String
    , openingCrawl_not_ends_with : OptionalArgument String
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_not : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , releaseDate_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , releaseDate_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , title : OptionalArgument String
    , title_not : OptionalArgument String
    , title_in : OptionalArgument (List String)
    , title_not_in : OptionalArgument (List String)
    , title_lt : OptionalArgument String
    , title_lte : OptionalArgument String
    , title_gt : OptionalArgument String
    , title_gte : OptionalArgument String
    , title_contains : OptionalArgument String
    , title_not_contains : OptionalArgument String
    , title_starts_with : OptionalArgument String
    , title_not_starts_with : OptionalArgument String
    , title_ends_with : OptionalArgument String
    , title_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , characters_every : OptionalArgument PersonFilter
    , characters_some : OptionalArgument PersonFilter
    , characters_none : OptionalArgument PersonFilter
    , planets_every : OptionalArgument PlanetFilter
    , planets_some : OptionalArgument PlanetFilter
    , planets_none : OptionalArgument PlanetFilter
    , species_every : OptionalArgument SpeciesFilter
    , species_some : OptionalArgument SpeciesFilter
    , species_none : OptionalArgument SpeciesFilter
    , starships_every : OptionalArgument StarshipFilter
    , starships_some : OptionalArgument StarshipFilter
    , starships_none : OptionalArgument StarshipFilter
    , vehicles_every : OptionalArgument VehicleFilter
    , vehicles_some : OptionalArgument VehicleFilter
    , vehicles_none : OptionalArgument VehicleFilter
    }


{-| Type for the FilmFilter input object.
-}
type FilmFilter
    = FilmFilter FilmFilterRaw


{-| Encode a FilmFilter into a value that can be used as an argument.
-}
encodeFilmFilter : FilmFilter -> Value
encodeFilmFilter (FilmFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeFilmFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeFilmFilter |> Encode.list) |> Encode.optional input.or ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "director", Encode.string |> Encode.optional input.director ), ( "director_not", Encode.string |> Encode.optional input.director_not ), ( "director_in", (Encode.string |> Encode.list) |> Encode.optional input.director_in ), ( "director_not_in", (Encode.string |> Encode.list) |> Encode.optional input.director_not_in ), ( "director_lt", Encode.string |> Encode.optional input.director_lt ), ( "director_lte", Encode.string |> Encode.optional input.director_lte ), ( "director_gt", Encode.string |> Encode.optional input.director_gt ), ( "director_gte", Encode.string |> Encode.optional input.director_gte ), ( "director_contains", Encode.string |> Encode.optional input.director_contains ), ( "director_not_contains", Encode.string |> Encode.optional input.director_not_contains ), ( "director_starts_with", Encode.string |> Encode.optional input.director_starts_with ), ( "director_not_starts_with", Encode.string |> Encode.optional input.director_not_starts_with ), ( "director_ends_with", Encode.string |> Encode.optional input.director_ends_with ), ( "director_not_ends_with", Encode.string |> Encode.optional input.director_not_ends_with ), ( "episodeId", Encode.int |> Encode.optional input.episodeId ), ( "episodeId_not", Encode.int |> Encode.optional input.episodeId_not ), ( "episodeId_in", (Encode.int |> Encode.list) |> Encode.optional input.episodeId_in ), ( "episodeId_not_in", (Encode.int |> Encode.list) |> Encode.optional input.episodeId_not_in ), ( "episodeId_lt", Encode.int |> Encode.optional input.episodeId_lt ), ( "episodeId_lte", Encode.int |> Encode.optional input.episodeId_lte ), ( "episodeId_gt", Encode.int |> Encode.optional input.episodeId_gt ), ( "episodeId_gte", Encode.int |> Encode.optional input.episodeId_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "openingCrawl_not", Encode.string |> Encode.optional input.openingCrawl_not ), ( "openingCrawl_in", (Encode.string |> Encode.list) |> Encode.optional input.openingCrawl_in ), ( "openingCrawl_not_in", (Encode.string |> Encode.list) |> Encode.optional input.openingCrawl_not_in ), ( "openingCrawl_lt", Encode.string |> Encode.optional input.openingCrawl_lt ), ( "openingCrawl_lte", Encode.string |> Encode.optional input.openingCrawl_lte ), ( "openingCrawl_gt", Encode.string |> Encode.optional input.openingCrawl_gt ), ( "openingCrawl_gte", Encode.string |> Encode.optional input.openingCrawl_gte ), ( "openingCrawl_contains", Encode.string |> Encode.optional input.openingCrawl_contains ), ( "openingCrawl_not_contains", Encode.string |> Encode.optional input.openingCrawl_not_contains ), ( "openingCrawl_starts_with", Encode.string |> Encode.optional input.openingCrawl_starts_with ), ( "openingCrawl_not_starts_with", Encode.string |> Encode.optional input.openingCrawl_not_starts_with ), ( "openingCrawl_ends_with", Encode.string |> Encode.optional input.openingCrawl_ends_with ), ( "openingCrawl_not_ends_with", Encode.string |> Encode.optional input.openingCrawl_not_ends_with ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "releaseDate_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_not ), ( "releaseDate_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.releaseDate_in ), ( "releaseDate_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.releaseDate_not_in ), ( "releaseDate_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_lt ), ( "releaseDate_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_lte ), ( "releaseDate_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_gt ), ( "releaseDate_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_gte ), ( "title", Encode.string |> Encode.optional input.title ), ( "title_not", Encode.string |> Encode.optional input.title_not ), ( "title_in", (Encode.string |> Encode.list) |> Encode.optional input.title_in ), ( "title_not_in", (Encode.string |> Encode.list) |> Encode.optional input.title_not_in ), ( "title_lt", Encode.string |> Encode.optional input.title_lt ), ( "title_lte", Encode.string |> Encode.optional input.title_lte ), ( "title_gt", Encode.string |> Encode.optional input.title_gt ), ( "title_gte", Encode.string |> Encode.optional input.title_gte ), ( "title_contains", Encode.string |> Encode.optional input.title_contains ), ( "title_not_contains", Encode.string |> Encode.optional input.title_not_contains ), ( "title_starts_with", Encode.string |> Encode.optional input.title_starts_with ), ( "title_not_starts_with", Encode.string |> Encode.optional input.title_not_starts_with ), ( "title_ends_with", Encode.string |> Encode.optional input.title_ends_with ), ( "title_not_ends_with", Encode.string |> Encode.optional input.title_not_ends_with ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "characters_every", encodePersonFilter |> Encode.optional input.characters_every ), ( "characters_some", encodePersonFilter |> Encode.optional input.characters_some ), ( "characters_none", encodePersonFilter |> Encode.optional input.characters_none ), ( "planets_every", encodePlanetFilter |> Encode.optional input.planets_every ), ( "planets_some", encodePlanetFilter |> Encode.optional input.planets_some ), ( "planets_none", encodePlanetFilter |> Encode.optional input.planets_none ), ( "species_every", encodeSpeciesFilter |> Encode.optional input.species_every ), ( "species_some", encodeSpeciesFilter |> Encode.optional input.species_some ), ( "species_none", encodeSpeciesFilter |> Encode.optional input.species_none ), ( "starships_every", encodeStarshipFilter |> Encode.optional input.starships_every ), ( "starships_some", encodeStarshipFilter |> Encode.optional input.starships_some ), ( "starships_none", encodeStarshipFilter |> Encode.optional input.starships_none ), ( "vehicles_every", encodeVehicleFilter |> Encode.optional input.vehicles_every ), ( "vehicles_some", encodeVehicleFilter |> Encode.optional input.vehicles_some ), ( "vehicles_none", encodeVehicleFilter |> Encode.optional input.vehicles_none ) ]


buildFilmSubscriptionFilter : (FilmSubscriptionFilterOptionalFields -> FilmSubscriptionFilterOptionalFields) -> FilmSubscriptionFilter
buildFilmSubscriptionFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, mutation_in = Absent, updatedFields_contains = Absent, updatedFields_contains_every = Absent, updatedFields_contains_some = Absent, node = Absent }
    in
    FilmSubscriptionFilter { and = optionals.and, or = optionals.or, mutation_in = optionals.mutation_in, updatedFields_contains = optionals.updatedFields_contains, updatedFields_contains_every = optionals.updatedFields_contains_every, updatedFields_contains_some = optionals.updatedFields_contains_some, node = optionals.node }


type alias FilmSubscriptionFilterOptionalFields =
    { and : OptionalArgument (List FilmSubscriptionFilter)
    , or : OptionalArgument (List FilmSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument FilmSubscriptionFilterNode
    }


{-| Type alias for the `FilmSubscriptionFilter` attributes. Note that this type
needs to use the `FilmSubscriptionFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias FilmSubscriptionFilterRaw =
    { and : OptionalArgument (List FilmSubscriptionFilter)
    , or : OptionalArgument (List FilmSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument FilmSubscriptionFilterNode
    }


{-| Type for the FilmSubscriptionFilter input object.
-}
type FilmSubscriptionFilter
    = FilmSubscriptionFilter FilmSubscriptionFilterRaw


{-| Encode a FilmSubscriptionFilter into a value that can be used as an argument.
-}
encodeFilmSubscriptionFilter : FilmSubscriptionFilter -> Value
encodeFilmSubscriptionFilter (FilmSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeFilmSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeFilmSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum Api.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeFilmSubscriptionFilterNode |> Encode.optional input.node ) ]


buildFilmSubscriptionFilterNode : (FilmSubscriptionFilterNodeOptionalFields -> FilmSubscriptionFilterNodeOptionalFields) -> FilmSubscriptionFilterNode
buildFilmSubscriptionFilterNode fillOptionals =
    let
        optionals =
            fillOptionals
                { createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, director = Absent, director_not = Absent, director_in = Absent, director_not_in = Absent, director_lt = Absent, director_lte = Absent, director_gt = Absent, director_gte = Absent, director_contains = Absent, director_not_contains = Absent, director_starts_with = Absent, director_not_starts_with = Absent, director_ends_with = Absent, director_not_ends_with = Absent, episodeId = Absent, episodeId_not = Absent, episodeId_in = Absent, episodeId_not_in = Absent, episodeId_lt = Absent, episodeId_lte = Absent, episodeId_gt = Absent, episodeId_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, openingCrawl = Absent, openingCrawl_not = Absent, openingCrawl_in = Absent, openingCrawl_not_in = Absent, openingCrawl_lt = Absent, openingCrawl_lte = Absent, openingCrawl_gt = Absent, openingCrawl_gte = Absent, openingCrawl_contains = Absent, openingCrawl_not_contains = Absent, openingCrawl_starts_with = Absent, openingCrawl_not_starts_with = Absent, openingCrawl_ends_with = Absent, openingCrawl_not_ends_with = Absent, releaseDate = Absent, releaseDate_not = Absent, releaseDate_in = Absent, releaseDate_not_in = Absent, releaseDate_lt = Absent, releaseDate_lte = Absent, releaseDate_gt = Absent, releaseDate_gte = Absent, title = Absent, title_not = Absent, title_in = Absent, title_not_in = Absent, title_lt = Absent, title_lte = Absent, title_gt = Absent, title_gte = Absent, title_contains = Absent, title_not_contains = Absent, title_starts_with = Absent, title_not_starts_with = Absent, title_ends_with = Absent, title_not_ends_with = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, characters_every = Absent, characters_some = Absent, characters_none = Absent, planets_every = Absent, planets_some = Absent, planets_none = Absent, species_every = Absent, species_some = Absent, species_none = Absent, starships_every = Absent, starships_some = Absent, starships_none = Absent, vehicles_every = Absent, vehicles_some = Absent, vehicles_none = Absent }
    in
    FilmSubscriptionFilterNode { createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, director = optionals.director, director_not = optionals.director_not, director_in = optionals.director_in, director_not_in = optionals.director_not_in, director_lt = optionals.director_lt, director_lte = optionals.director_lte, director_gt = optionals.director_gt, director_gte = optionals.director_gte, director_contains = optionals.director_contains, director_not_contains = optionals.director_not_contains, director_starts_with = optionals.director_starts_with, director_not_starts_with = optionals.director_not_starts_with, director_ends_with = optionals.director_ends_with, director_not_ends_with = optionals.director_not_ends_with, episodeId = optionals.episodeId, episodeId_not = optionals.episodeId_not, episodeId_in = optionals.episodeId_in, episodeId_not_in = optionals.episodeId_not_in, episodeId_lt = optionals.episodeId_lt, episodeId_lte = optionals.episodeId_lte, episodeId_gt = optionals.episodeId_gt, episodeId_gte = optionals.episodeId_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, openingCrawl = optionals.openingCrawl, openingCrawl_not = optionals.openingCrawl_not, openingCrawl_in = optionals.openingCrawl_in, openingCrawl_not_in = optionals.openingCrawl_not_in, openingCrawl_lt = optionals.openingCrawl_lt, openingCrawl_lte = optionals.openingCrawl_lte, openingCrawl_gt = optionals.openingCrawl_gt, openingCrawl_gte = optionals.openingCrawl_gte, openingCrawl_contains = optionals.openingCrawl_contains, openingCrawl_not_contains = optionals.openingCrawl_not_contains, openingCrawl_starts_with = optionals.openingCrawl_starts_with, openingCrawl_not_starts_with = optionals.openingCrawl_not_starts_with, openingCrawl_ends_with = optionals.openingCrawl_ends_with, openingCrawl_not_ends_with = optionals.openingCrawl_not_ends_with, releaseDate = optionals.releaseDate, releaseDate_not = optionals.releaseDate_not, releaseDate_in = optionals.releaseDate_in, releaseDate_not_in = optionals.releaseDate_not_in, releaseDate_lt = optionals.releaseDate_lt, releaseDate_lte = optionals.releaseDate_lte, releaseDate_gt = optionals.releaseDate_gt, releaseDate_gte = optionals.releaseDate_gte, title = optionals.title, title_not = optionals.title_not, title_in = optionals.title_in, title_not_in = optionals.title_not_in, title_lt = optionals.title_lt, title_lte = optionals.title_lte, title_gt = optionals.title_gt, title_gte = optionals.title_gte, title_contains = optionals.title_contains, title_not_contains = optionals.title_not_contains, title_starts_with = optionals.title_starts_with, title_not_starts_with = optionals.title_not_starts_with, title_ends_with = optionals.title_ends_with, title_not_ends_with = optionals.title_not_ends_with, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, characters_every = optionals.characters_every, characters_some = optionals.characters_some, characters_none = optionals.characters_none, planets_every = optionals.planets_every, planets_some = optionals.planets_some, planets_none = optionals.planets_none, species_every = optionals.species_every, species_some = optionals.species_some, species_none = optionals.species_none, starships_every = optionals.starships_every, starships_some = optionals.starships_some, starships_none = optionals.starships_none, vehicles_every = optionals.vehicles_every, vehicles_some = optionals.vehicles_some, vehicles_none = optionals.vehicles_none }


type alias FilmSubscriptionFilterNodeOptionalFields =
    { createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , director : OptionalArgument String
    , director_not : OptionalArgument String
    , director_in : OptionalArgument (List String)
    , director_not_in : OptionalArgument (List String)
    , director_lt : OptionalArgument String
    , director_lte : OptionalArgument String
    , director_gt : OptionalArgument String
    , director_gte : OptionalArgument String
    , director_contains : OptionalArgument String
    , director_not_contains : OptionalArgument String
    , director_starts_with : OptionalArgument String
    , director_not_starts_with : OptionalArgument String
    , director_ends_with : OptionalArgument String
    , director_not_ends_with : OptionalArgument String
    , episodeId : OptionalArgument Int
    , episodeId_not : OptionalArgument Int
    , episodeId_in : OptionalArgument (List Int)
    , episodeId_not_in : OptionalArgument (List Int)
    , episodeId_lt : OptionalArgument Int
    , episodeId_lte : OptionalArgument Int
    , episodeId_gt : OptionalArgument Int
    , episodeId_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , openingCrawl_not : OptionalArgument String
    , openingCrawl_in : OptionalArgument (List String)
    , openingCrawl_not_in : OptionalArgument (List String)
    , openingCrawl_lt : OptionalArgument String
    , openingCrawl_lte : OptionalArgument String
    , openingCrawl_gt : OptionalArgument String
    , openingCrawl_gte : OptionalArgument String
    , openingCrawl_contains : OptionalArgument String
    , openingCrawl_not_contains : OptionalArgument String
    , openingCrawl_starts_with : OptionalArgument String
    , openingCrawl_not_starts_with : OptionalArgument String
    , openingCrawl_ends_with : OptionalArgument String
    , openingCrawl_not_ends_with : OptionalArgument String
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_not : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , releaseDate_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , releaseDate_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , title : OptionalArgument String
    , title_not : OptionalArgument String
    , title_in : OptionalArgument (List String)
    , title_not_in : OptionalArgument (List String)
    , title_lt : OptionalArgument String
    , title_lte : OptionalArgument String
    , title_gt : OptionalArgument String
    , title_gte : OptionalArgument String
    , title_contains : OptionalArgument String
    , title_not_contains : OptionalArgument String
    , title_starts_with : OptionalArgument String
    , title_not_starts_with : OptionalArgument String
    , title_ends_with : OptionalArgument String
    , title_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , characters_every : OptionalArgument PersonFilter
    , characters_some : OptionalArgument PersonFilter
    , characters_none : OptionalArgument PersonFilter
    , planets_every : OptionalArgument PlanetFilter
    , planets_some : OptionalArgument PlanetFilter
    , planets_none : OptionalArgument PlanetFilter
    , species_every : OptionalArgument SpeciesFilter
    , species_some : OptionalArgument SpeciesFilter
    , species_none : OptionalArgument SpeciesFilter
    , starships_every : OptionalArgument StarshipFilter
    , starships_some : OptionalArgument StarshipFilter
    , starships_none : OptionalArgument StarshipFilter
    , vehicles_every : OptionalArgument VehicleFilter
    , vehicles_some : OptionalArgument VehicleFilter
    , vehicles_none : OptionalArgument VehicleFilter
    }


{-| Type alias for the `FilmSubscriptionFilterNode` attributes. Note that this type
needs to use the `FilmSubscriptionFilterNode` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias FilmSubscriptionFilterNodeRaw =
    { createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , director : OptionalArgument String
    , director_not : OptionalArgument String
    , director_in : OptionalArgument (List String)
    , director_not_in : OptionalArgument (List String)
    , director_lt : OptionalArgument String
    , director_lte : OptionalArgument String
    , director_gt : OptionalArgument String
    , director_gte : OptionalArgument String
    , director_contains : OptionalArgument String
    , director_not_contains : OptionalArgument String
    , director_starts_with : OptionalArgument String
    , director_not_starts_with : OptionalArgument String
    , director_ends_with : OptionalArgument String
    , director_not_ends_with : OptionalArgument String
    , episodeId : OptionalArgument Int
    , episodeId_not : OptionalArgument Int
    , episodeId_in : OptionalArgument (List Int)
    , episodeId_not_in : OptionalArgument (List Int)
    , episodeId_lt : OptionalArgument Int
    , episodeId_lte : OptionalArgument Int
    , episodeId_gt : OptionalArgument Int
    , episodeId_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , openingCrawl_not : OptionalArgument String
    , openingCrawl_in : OptionalArgument (List String)
    , openingCrawl_not_in : OptionalArgument (List String)
    , openingCrawl_lt : OptionalArgument String
    , openingCrawl_lte : OptionalArgument String
    , openingCrawl_gt : OptionalArgument String
    , openingCrawl_gte : OptionalArgument String
    , openingCrawl_contains : OptionalArgument String
    , openingCrawl_not_contains : OptionalArgument String
    , openingCrawl_starts_with : OptionalArgument String
    , openingCrawl_not_starts_with : OptionalArgument String
    , openingCrawl_ends_with : OptionalArgument String
    , openingCrawl_not_ends_with : OptionalArgument String
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_not : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , releaseDate_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , releaseDate_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , releaseDate_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , title : OptionalArgument String
    , title_not : OptionalArgument String
    , title_in : OptionalArgument (List String)
    , title_not_in : OptionalArgument (List String)
    , title_lt : OptionalArgument String
    , title_lte : OptionalArgument String
    , title_gt : OptionalArgument String
    , title_gte : OptionalArgument String
    , title_contains : OptionalArgument String
    , title_not_contains : OptionalArgument String
    , title_starts_with : OptionalArgument String
    , title_not_starts_with : OptionalArgument String
    , title_ends_with : OptionalArgument String
    , title_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , characters_every : OptionalArgument PersonFilter
    , characters_some : OptionalArgument PersonFilter
    , characters_none : OptionalArgument PersonFilter
    , planets_every : OptionalArgument PlanetFilter
    , planets_some : OptionalArgument PlanetFilter
    , planets_none : OptionalArgument PlanetFilter
    , species_every : OptionalArgument SpeciesFilter
    , species_some : OptionalArgument SpeciesFilter
    , species_none : OptionalArgument SpeciesFilter
    , starships_every : OptionalArgument StarshipFilter
    , starships_some : OptionalArgument StarshipFilter
    , starships_none : OptionalArgument StarshipFilter
    , vehicles_every : OptionalArgument VehicleFilter
    , vehicles_some : OptionalArgument VehicleFilter
    , vehicles_none : OptionalArgument VehicleFilter
    }


{-| Type for the FilmSubscriptionFilterNode input object.
-}
type FilmSubscriptionFilterNode
    = FilmSubscriptionFilterNode FilmSubscriptionFilterNodeRaw


{-| Encode a FilmSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeFilmSubscriptionFilterNode : FilmSubscriptionFilterNode -> Value
encodeFilmSubscriptionFilterNode (FilmSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "director", Encode.string |> Encode.optional input.director ), ( "director_not", Encode.string |> Encode.optional input.director_not ), ( "director_in", (Encode.string |> Encode.list) |> Encode.optional input.director_in ), ( "director_not_in", (Encode.string |> Encode.list) |> Encode.optional input.director_not_in ), ( "director_lt", Encode.string |> Encode.optional input.director_lt ), ( "director_lte", Encode.string |> Encode.optional input.director_lte ), ( "director_gt", Encode.string |> Encode.optional input.director_gt ), ( "director_gte", Encode.string |> Encode.optional input.director_gte ), ( "director_contains", Encode.string |> Encode.optional input.director_contains ), ( "director_not_contains", Encode.string |> Encode.optional input.director_not_contains ), ( "director_starts_with", Encode.string |> Encode.optional input.director_starts_with ), ( "director_not_starts_with", Encode.string |> Encode.optional input.director_not_starts_with ), ( "director_ends_with", Encode.string |> Encode.optional input.director_ends_with ), ( "director_not_ends_with", Encode.string |> Encode.optional input.director_not_ends_with ), ( "episodeId", Encode.int |> Encode.optional input.episodeId ), ( "episodeId_not", Encode.int |> Encode.optional input.episodeId_not ), ( "episodeId_in", (Encode.int |> Encode.list) |> Encode.optional input.episodeId_in ), ( "episodeId_not_in", (Encode.int |> Encode.list) |> Encode.optional input.episodeId_not_in ), ( "episodeId_lt", Encode.int |> Encode.optional input.episodeId_lt ), ( "episodeId_lte", Encode.int |> Encode.optional input.episodeId_lte ), ( "episodeId_gt", Encode.int |> Encode.optional input.episodeId_gt ), ( "episodeId_gte", Encode.int |> Encode.optional input.episodeId_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "openingCrawl_not", Encode.string |> Encode.optional input.openingCrawl_not ), ( "openingCrawl_in", (Encode.string |> Encode.list) |> Encode.optional input.openingCrawl_in ), ( "openingCrawl_not_in", (Encode.string |> Encode.list) |> Encode.optional input.openingCrawl_not_in ), ( "openingCrawl_lt", Encode.string |> Encode.optional input.openingCrawl_lt ), ( "openingCrawl_lte", Encode.string |> Encode.optional input.openingCrawl_lte ), ( "openingCrawl_gt", Encode.string |> Encode.optional input.openingCrawl_gt ), ( "openingCrawl_gte", Encode.string |> Encode.optional input.openingCrawl_gte ), ( "openingCrawl_contains", Encode.string |> Encode.optional input.openingCrawl_contains ), ( "openingCrawl_not_contains", Encode.string |> Encode.optional input.openingCrawl_not_contains ), ( "openingCrawl_starts_with", Encode.string |> Encode.optional input.openingCrawl_starts_with ), ( "openingCrawl_not_starts_with", Encode.string |> Encode.optional input.openingCrawl_not_starts_with ), ( "openingCrawl_ends_with", Encode.string |> Encode.optional input.openingCrawl_ends_with ), ( "openingCrawl_not_ends_with", Encode.string |> Encode.optional input.openingCrawl_not_ends_with ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "releaseDate_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_not ), ( "releaseDate_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.releaseDate_in ), ( "releaseDate_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.releaseDate_not_in ), ( "releaseDate_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_lt ), ( "releaseDate_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_lte ), ( "releaseDate_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_gt ), ( "releaseDate_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate_gte ), ( "title", Encode.string |> Encode.optional input.title ), ( "title_not", Encode.string |> Encode.optional input.title_not ), ( "title_in", (Encode.string |> Encode.list) |> Encode.optional input.title_in ), ( "title_not_in", (Encode.string |> Encode.list) |> Encode.optional input.title_not_in ), ( "title_lt", Encode.string |> Encode.optional input.title_lt ), ( "title_lte", Encode.string |> Encode.optional input.title_lte ), ( "title_gt", Encode.string |> Encode.optional input.title_gt ), ( "title_gte", Encode.string |> Encode.optional input.title_gte ), ( "title_contains", Encode.string |> Encode.optional input.title_contains ), ( "title_not_contains", Encode.string |> Encode.optional input.title_not_contains ), ( "title_starts_with", Encode.string |> Encode.optional input.title_starts_with ), ( "title_not_starts_with", Encode.string |> Encode.optional input.title_not_starts_with ), ( "title_ends_with", Encode.string |> Encode.optional input.title_ends_with ), ( "title_not_ends_with", Encode.string |> Encode.optional input.title_not_ends_with ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "characters_every", encodePersonFilter |> Encode.optional input.characters_every ), ( "characters_some", encodePersonFilter |> Encode.optional input.characters_some ), ( "characters_none", encodePersonFilter |> Encode.optional input.characters_none ), ( "planets_every", encodePlanetFilter |> Encode.optional input.planets_every ), ( "planets_some", encodePlanetFilter |> Encode.optional input.planets_some ), ( "planets_none", encodePlanetFilter |> Encode.optional input.planets_none ), ( "species_every", encodeSpeciesFilter |> Encode.optional input.species_every ), ( "species_some", encodeSpeciesFilter |> Encode.optional input.species_some ), ( "species_none", encodeSpeciesFilter |> Encode.optional input.species_none ), ( "starships_every", encodeStarshipFilter |> Encode.optional input.starships_every ), ( "starships_some", encodeStarshipFilter |> Encode.optional input.starships_some ), ( "starships_none", encodeStarshipFilter |> Encode.optional input.starships_none ), ( "vehicles_every", encodeVehicleFilter |> Encode.optional input.vehicles_every ), ( "vehicles_some", encodeVehicleFilter |> Encode.optional input.vehicles_some ), ( "vehicles_none", encodeVehicleFilter |> Encode.optional input.vehicles_none ) ]


buildFilmcharactersPerson : FilmcharactersPersonRequiredFields -> (FilmcharactersPersonOptionalFields -> FilmcharactersPersonOptionalFields) -> FilmcharactersPerson
buildFilmcharactersPerson required fillOptionals =
    let
        optionals =
            fillOptionals
                { birthYear = Absent, eyeColor = Absent, gender = Absent, hairColor = Absent, height = Absent, isPublished = Absent, mass = Absent, skinColor = Absent, homeworldId = Absent, homeworld = Absent, filmsIds = Absent, films = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    FilmcharactersPerson { birthYear = optionals.birthYear, eyeColor = optionals.eyeColor, gender = optionals.gender, hairColor = optionals.hairColor, height = optionals.height, isPublished = optionals.isPublished, mass = optionals.mass, name = required.name, skinColor = optionals.skinColor, homeworldId = optionals.homeworldId, homeworld = optionals.homeworld, filmsIds = optionals.filmsIds, films = optionals.films, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias FilmcharactersPersonRequiredFields =
    { name : String }


type alias FilmcharactersPersonOptionalFields =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type alias for the `FilmcharactersPerson` attributes. Note that this type
needs to use the `FilmcharactersPerson` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias FilmcharactersPersonRaw =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type for the FilmcharactersPerson input object.
-}
type FilmcharactersPerson
    = FilmcharactersPerson FilmcharactersPersonRaw


{-| Encode a FilmcharactersPerson into a value that can be used as an argument.
-}
encodeFilmcharactersPerson : FilmcharactersPerson -> Value
encodeFilmcharactersPerson (FilmcharactersPerson input) =
    Encode.maybeObject
        [ ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "eyeColor", (Encode.enum Api.Enum.PersonEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "hairColor", (Encode.enum Api.Enum.PersonHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "height", Encode.int |> Encode.optional input.height ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.PersonSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "homeworldId", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.homeworldId ), ( "homeworld", encodePersonhomeworldPlanet |> Encode.optional input.homeworld ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePersonfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodePersonspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodePersonstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodePersonvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildFilmplanetsPlanet : FilmplanetsPlanetRequiredFields -> (FilmplanetsPlanetOptionalFields -> FilmplanetsPlanetOptionalFields) -> FilmplanetsPlanet
buildFilmplanetsPlanet required fillOptionals =
    let
        optionals =
            fillOptionals
                { climate = Absent, diameter = Absent, gravity = Absent, isPublished = Absent, orbitalPeriod = Absent, population = Absent, rotationPeriod = Absent, surfaceWater = Absent, terrain = Absent, filmsIds = Absent, films = Absent, residentsIds = Absent, residents = Absent }
    in
    FilmplanetsPlanet { climate = optionals.climate, diameter = optionals.diameter, gravity = optionals.gravity, isPublished = optionals.isPublished, name = required.name, orbitalPeriod = optionals.orbitalPeriod, population = optionals.population, rotationPeriod = optionals.rotationPeriod, surfaceWater = optionals.surfaceWater, terrain = optionals.terrain, filmsIds = optionals.filmsIds, films = optionals.films, residentsIds = optionals.residentsIds, residents = optionals.residents }


type alias FilmplanetsPlanetRequiredFields =
    { name : String }


type alias FilmplanetsPlanetOptionalFields =
    { climate : OptionalArgument (List String)
    , diameter : OptionalArgument Int
    , gravity : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , orbitalPeriod : OptionalArgument Int
    , population : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , terrain : OptionalArgument (List String)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PlanetfilmsFilm)
    , residentsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , residents : OptionalArgument (List PlanetresidentsPerson)
    }


{-| Type alias for the `FilmplanetsPlanet` attributes. Note that this type
needs to use the `FilmplanetsPlanet` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias FilmplanetsPlanetRaw =
    { climate : OptionalArgument (List String)
    , diameter : OptionalArgument Int
    , gravity : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , name : String
    , orbitalPeriod : OptionalArgument Int
    , population : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , terrain : OptionalArgument (List String)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PlanetfilmsFilm)
    , residentsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , residents : OptionalArgument (List PlanetresidentsPerson)
    }


{-| Type for the FilmplanetsPlanet input object.
-}
type FilmplanetsPlanet
    = FilmplanetsPlanet FilmplanetsPlanetRaw


{-| Encode a FilmplanetsPlanet into a value that can be used as an argument.
-}
encodeFilmplanetsPlanet : FilmplanetsPlanet -> Value
encodeFilmplanetsPlanet (FilmplanetsPlanet input) =
    Encode.maybeObject
        [ ( "climate", (Encode.string |> Encode.list) |> Encode.optional input.climate ), ( "diameter", Encode.int |> Encode.optional input.diameter ), ( "gravity", Encode.string |> Encode.optional input.gravity ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "name", Encode.string input.name |> Just ), ( "orbitalPeriod", Encode.int |> Encode.optional input.orbitalPeriod ), ( "population", Encode.float |> Encode.optional input.population ), ( "rotationPeriod", Encode.int |> Encode.optional input.rotationPeriod ), ( "surfaceWater", Encode.float |> Encode.optional input.surfaceWater ), ( "terrain", (Encode.string |> Encode.list) |> Encode.optional input.terrain ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePlanetfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "residentsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.residentsIds ), ( "residents", (encodePlanetresidentsPerson |> Encode.list) |> Encode.optional input.residents ) ]


buildFilmspeciesSpecies : FilmspeciesSpeciesRequiredFields -> (FilmspeciesSpeciesOptionalFields -> FilmspeciesSpeciesOptionalFields) -> FilmspeciesSpecies
buildFilmspeciesSpecies required fillOptionals =
    let
        optionals =
            fillOptionals
                { averageHeight = Absent, averageLifespan = Absent, classification = Absent, designation = Absent, eyeColor = Absent, hairColor = Absent, isPublished = Absent, language = Absent, skinColor = Absent, filmsIds = Absent, films = Absent, peopleIds = Absent, people = Absent }
    in
    FilmspeciesSpecies { averageHeight = optionals.averageHeight, averageLifespan = optionals.averageLifespan, classification = optionals.classification, designation = optionals.designation, eyeColor = optionals.eyeColor, hairColor = optionals.hairColor, isPublished = optionals.isPublished, language = optionals.language, name = required.name, skinColor = optionals.skinColor, filmsIds = optionals.filmsIds, films = optionals.films, peopleIds = optionals.peopleIds, people = optionals.people }


type alias FilmspeciesSpeciesRequiredFields =
    { name : String }


type alias FilmspeciesSpeciesOptionalFields =
    { averageHeight : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , classification : OptionalArgument String
    , designation : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.SpeciesEyeColor.SpeciesEyeColor)
    , hairColor : OptionalArgument (List Api.Enum.SpeciesHairColor.SpeciesHairColor)
    , isPublished : OptionalArgument Bool
    , language : OptionalArgument String
    , skinColor : OptionalArgument (List Api.Enum.SpeciesSkinColor.SpeciesSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List SpeciesfilmsFilm)
    , peopleIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , people : OptionalArgument (List SpeciespeoplePerson)
    }


{-| Type alias for the `FilmspeciesSpecies` attributes. Note that this type
needs to use the `FilmspeciesSpecies` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias FilmspeciesSpeciesRaw =
    { averageHeight : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , classification : OptionalArgument String
    , designation : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.SpeciesEyeColor.SpeciesEyeColor)
    , hairColor : OptionalArgument (List Api.Enum.SpeciesHairColor.SpeciesHairColor)
    , isPublished : OptionalArgument Bool
    , language : OptionalArgument String
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.SpeciesSkinColor.SpeciesSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List SpeciesfilmsFilm)
    , peopleIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , people : OptionalArgument (List SpeciespeoplePerson)
    }


{-| Type for the FilmspeciesSpecies input object.
-}
type FilmspeciesSpecies
    = FilmspeciesSpecies FilmspeciesSpeciesRaw


{-| Encode a FilmspeciesSpecies into a value that can be used as an argument.
-}
encodeFilmspeciesSpecies : FilmspeciesSpecies -> Value
encodeFilmspeciesSpecies (FilmspeciesSpecies input) =
    Encode.maybeObject
        [ ( "averageHeight", Encode.int |> Encode.optional input.averageHeight ), ( "averageLifespan", Encode.int |> Encode.optional input.averageLifespan ), ( "classification", Encode.string |> Encode.optional input.classification ), ( "designation", Encode.string |> Encode.optional input.designation ), ( "eyeColor", (Encode.enum Api.Enum.SpeciesEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "hairColor", (Encode.enum Api.Enum.SpeciesHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "language", Encode.string |> Encode.optional input.language ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.SpeciesSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeSpeciesfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "peopleIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.peopleIds ), ( "people", (encodeSpeciespeoplePerson |> Encode.list) |> Encode.optional input.people ) ]


buildFilmstarshipsStarship : FilmstarshipsStarshipRequiredFields -> (FilmstarshipsStarshipOptionalFields -> FilmstarshipsStarshipOptionalFields) -> FilmstarshipsStarship
buildFilmstarshipsStarship required fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, class = Absent, consumables = Absent, costInCredits = Absent, crew = Absent, hyperdriveRating = Absent, isPublished = Absent, length = Absent, manufacturer = Absent, maxAtmospheringSpeed = Absent, mglt = Absent, passengers = Absent, filmsIds = Absent, films = Absent, pilotsIds = Absent, pilots = Absent }
    in
    FilmstarshipsStarship { cargoCapacity = optionals.cargoCapacity, class = optionals.class, consumables = optionals.consumables, costInCredits = optionals.costInCredits, crew = optionals.crew, hyperdriveRating = optionals.hyperdriveRating, isPublished = optionals.isPublished, length = optionals.length, manufacturer = optionals.manufacturer, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, mglt = optionals.mglt, name = required.name, passengers = optionals.passengers, filmsIds = optionals.filmsIds, films = optionals.films, pilotsIds = optionals.pilotsIds, pilots = optionals.pilots }


type alias FilmstarshipsStarshipRequiredFields =
    { name : String }


type alias FilmstarshipsStarshipOptionalFields =
    { cargoCapacity : OptionalArgument Float
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , crew : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , mglt : OptionalArgument Int
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List StarshipfilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List StarshippilotsPerson)
    }


{-| Type alias for the `FilmstarshipsStarship` attributes. Note that this type
needs to use the `FilmstarshipsStarship` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias FilmstarshipsStarshipRaw =
    { cargoCapacity : OptionalArgument Float
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , crew : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , mglt : OptionalArgument Int
    , name : String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List StarshipfilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List StarshippilotsPerson)
    }


{-| Type for the FilmstarshipsStarship input object.
-}
type FilmstarshipsStarship
    = FilmstarshipsStarship FilmstarshipsStarshipRaw


{-| Encode a FilmstarshipsStarship into a value that can be used as an argument.
-}
encodeFilmstarshipsStarship : FilmstarshipsStarship -> Value
encodeFilmstarshipsStarship (FilmstarshipsStarship input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.float |> Encode.optional input.cargoCapacity ), ( "class", Encode.string |> Encode.optional input.class ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "costInCredits", Encode.float |> Encode.optional input.costInCredits ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "hyperdriveRating", Encode.float |> Encode.optional input.hyperdriveRating ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "length", Encode.float |> Encode.optional input.length ), ( "manufacturer", (Encode.string |> Encode.list) |> Encode.optional input.manufacturer ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "mglt", Encode.int |> Encode.optional input.mglt ), ( "name", Encode.string input.name |> Just ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeStarshipfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "pilotsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.pilotsIds ), ( "pilots", (encodeStarshippilotsPerson |> Encode.list) |> Encode.optional input.pilots ) ]


buildFilmvehiclesVehicle : FilmvehiclesVehicleRequiredFields -> (FilmvehiclesVehicleOptionalFields -> FilmvehiclesVehicleOptionalFields) -> FilmvehiclesVehicle
buildFilmvehiclesVehicle required fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, class = Absent, consumables = Absent, costInCredits = Absent, crew = Absent, isPublished = Absent, length = Absent, manufacturer = Absent, maxAtmospheringSpeed = Absent, model = Absent, passengers = Absent, filmsIds = Absent, films = Absent, pilotsIds = Absent, pilots = Absent }
    in
    FilmvehiclesVehicle { cargoCapacity = optionals.cargoCapacity, class = optionals.class, consumables = optionals.consumables, costInCredits = optionals.costInCredits, crew = optionals.crew, isPublished = optionals.isPublished, length = optionals.length, manufacturer = optionals.manufacturer, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, model = optionals.model, name = required.name, passengers = optionals.passengers, filmsIds = optionals.filmsIds, films = optionals.films, pilotsIds = optionals.pilotsIds, pilots = optionals.pilots }


type alias FilmvehiclesVehicleRequiredFields =
    { name : String }


type alias FilmvehiclesVehicleOptionalFields =
    { cargoCapacity : OptionalArgument Int
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , crew : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , model : OptionalArgument String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List VehiclefilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List VehiclepilotsPerson)
    }


{-| Type alias for the `FilmvehiclesVehicle` attributes. Note that this type
needs to use the `FilmvehiclesVehicle` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias FilmvehiclesVehicleRaw =
    { cargoCapacity : OptionalArgument Int
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , crew : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , model : OptionalArgument String
    , name : String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List VehiclefilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List VehiclepilotsPerson)
    }


{-| Type for the FilmvehiclesVehicle input object.
-}
type FilmvehiclesVehicle
    = FilmvehiclesVehicle FilmvehiclesVehicleRaw


{-| Encode a FilmvehiclesVehicle into a value that can be used as an argument.
-}
encodeFilmvehiclesVehicle : FilmvehiclesVehicle -> Value
encodeFilmvehiclesVehicle (FilmvehiclesVehicle input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.int |> Encode.optional input.cargoCapacity ), ( "class", Encode.string |> Encode.optional input.class ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "costInCredits", Encode.int |> Encode.optional input.costInCredits ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "length", Encode.float |> Encode.optional input.length ), ( "manufacturer", (Encode.string |> Encode.list) |> Encode.optional input.manufacturer ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "model", Encode.string |> Encode.optional input.model ), ( "name", Encode.string input.name |> Just ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeVehiclefilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "pilotsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.pilotsIds ), ( "pilots", (encodeVehiclepilotsPerson |> Encode.list) |> Encode.optional input.pilots ) ]


buildInvokeFunctionInput : InvokeFunctionInputRequiredFields -> (InvokeFunctionInputOptionalFields -> InvokeFunctionInputOptionalFields) -> InvokeFunctionInput
buildInvokeFunctionInput required fillOptionals =
    let
        optionals =
            fillOptionals
                { clientMutationId = Absent }
    in
    { name = required.name, input = required.input, clientMutationId = optionals.clientMutationId }


type alias InvokeFunctionInputRequiredFields =
    { name : String
    , input : String
    }


type alias InvokeFunctionInputOptionalFields =
    { clientMutationId : OptionalArgument String }


{-| Type for the InvokeFunctionInput input object.
-}
type alias InvokeFunctionInput =
    { name : String
    , input : String
    , clientMutationId : OptionalArgument String
    }


{-| Encode a InvokeFunctionInput into a value that can be used as an argument.
-}
encodeInvokeFunctionInput : InvokeFunctionInput -> Value
encodeInvokeFunctionInput input =
    Encode.maybeObject
        [ ( "name", Encode.string input.name |> Just ), ( "input", Encode.string input.input |> Just ), ( "clientMutationId", Encode.string |> Encode.optional input.clientMutationId ) ]


buildPersonFilter : (PersonFilterOptionalFields -> PersonFilterOptionalFields) -> PersonFilter
buildPersonFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, birthYear = Absent, birthYear_not = Absent, birthYear_in = Absent, birthYear_not_in = Absent, birthYear_lt = Absent, birthYear_lte = Absent, birthYear_gt = Absent, birthYear_gte = Absent, birthYear_contains = Absent, birthYear_not_contains = Absent, birthYear_starts_with = Absent, birthYear_not_starts_with = Absent, birthYear_ends_with = Absent, birthYear_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, gender = Absent, gender_not = Absent, gender_in = Absent, gender_not_in = Absent, height = Absent, height_not = Absent, height_in = Absent, height_not_in = Absent, height_lt = Absent, height_lte = Absent, height_gt = Absent, height_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, mass = Absent, mass_not = Absent, mass_in = Absent, mass_not_in = Absent, mass_lt = Absent, mass_lte = Absent, mass_gt = Absent, mass_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, homeworld = Absent, species_every = Absent, species_some = Absent, species_none = Absent, starships_every = Absent, starships_some = Absent, starships_none = Absent, vehicles_every = Absent, vehicles_some = Absent, vehicles_none = Absent }
    in
    PersonFilter { and = optionals.and, or = optionals.or, birthYear = optionals.birthYear, birthYear_not = optionals.birthYear_not, birthYear_in = optionals.birthYear_in, birthYear_not_in = optionals.birthYear_not_in, birthYear_lt = optionals.birthYear_lt, birthYear_lte = optionals.birthYear_lte, birthYear_gt = optionals.birthYear_gt, birthYear_gte = optionals.birthYear_gte, birthYear_contains = optionals.birthYear_contains, birthYear_not_contains = optionals.birthYear_not_contains, birthYear_starts_with = optionals.birthYear_starts_with, birthYear_not_starts_with = optionals.birthYear_not_starts_with, birthYear_ends_with = optionals.birthYear_ends_with, birthYear_not_ends_with = optionals.birthYear_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, gender = optionals.gender, gender_not = optionals.gender_not, gender_in = optionals.gender_in, gender_not_in = optionals.gender_not_in, height = optionals.height, height_not = optionals.height_not, height_in = optionals.height_in, height_not_in = optionals.height_not_in, height_lt = optionals.height_lt, height_lte = optionals.height_lte, height_gt = optionals.height_gt, height_gte = optionals.height_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, mass = optionals.mass, mass_not = optionals.mass_not, mass_in = optionals.mass_in, mass_not_in = optionals.mass_not_in, mass_lt = optionals.mass_lt, mass_lte = optionals.mass_lte, mass_gt = optionals.mass_gt, mass_gte = optionals.mass_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, homeworld = optionals.homeworld, species_every = optionals.species_every, species_some = optionals.species_some, species_none = optionals.species_none, starships_every = optionals.starships_every, starships_some = optionals.starships_some, starships_none = optionals.starships_none, vehicles_every = optionals.vehicles_every, vehicles_some = optionals.vehicles_some, vehicles_none = optionals.vehicles_none }


type alias PersonFilterOptionalFields =
    { and : OptionalArgument (List PersonFilter)
    , or : OptionalArgument (List PersonFilter)
    , birthYear : OptionalArgument String
    , birthYear_not : OptionalArgument String
    , birthYear_in : OptionalArgument (List String)
    , birthYear_not_in : OptionalArgument (List String)
    , birthYear_lt : OptionalArgument String
    , birthYear_lte : OptionalArgument String
    , birthYear_gt : OptionalArgument String
    , birthYear_gte : OptionalArgument String
    , birthYear_contains : OptionalArgument String
    , birthYear_not_contains : OptionalArgument String
    , birthYear_starts_with : OptionalArgument String
    , birthYear_not_starts_with : OptionalArgument String
    , birthYear_ends_with : OptionalArgument String
    , birthYear_not_ends_with : OptionalArgument String
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , gender_not : OptionalArgument Api.Enum.PersonGender.PersonGender
    , gender_in : OptionalArgument (List Api.Enum.PersonGender.PersonGender)
    , gender_not_in : OptionalArgument (List Api.Enum.PersonGender.PersonGender)
    , height : OptionalArgument Int
    , height_not : OptionalArgument Int
    , height_in : OptionalArgument (List Int)
    , height_not_in : OptionalArgument (List Int)
    , height_lt : OptionalArgument Int
    , height_lte : OptionalArgument Int
    , height_gt : OptionalArgument Int
    , height_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , mass : OptionalArgument Float
    , mass_not : OptionalArgument Float
    , mass_in : OptionalArgument (List Float)
    , mass_not_in : OptionalArgument (List Float)
    , mass_lt : OptionalArgument Float
    , mass_lte : OptionalArgument Float
    , mass_gt : OptionalArgument Float
    , mass_gte : OptionalArgument Float
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , homeworld : OptionalArgument PlanetFilter
    , species_every : OptionalArgument SpeciesFilter
    , species_some : OptionalArgument SpeciesFilter
    , species_none : OptionalArgument SpeciesFilter
    , starships_every : OptionalArgument StarshipFilter
    , starships_some : OptionalArgument StarshipFilter
    , starships_none : OptionalArgument StarshipFilter
    , vehicles_every : OptionalArgument VehicleFilter
    , vehicles_some : OptionalArgument VehicleFilter
    , vehicles_none : OptionalArgument VehicleFilter
    }


{-| Type alias for the `PersonFilter` attributes. Note that this type
needs to use the `PersonFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PersonFilterRaw =
    { and : OptionalArgument (List PersonFilter)
    , or : OptionalArgument (List PersonFilter)
    , birthYear : OptionalArgument String
    , birthYear_not : OptionalArgument String
    , birthYear_in : OptionalArgument (List String)
    , birthYear_not_in : OptionalArgument (List String)
    , birthYear_lt : OptionalArgument String
    , birthYear_lte : OptionalArgument String
    , birthYear_gt : OptionalArgument String
    , birthYear_gte : OptionalArgument String
    , birthYear_contains : OptionalArgument String
    , birthYear_not_contains : OptionalArgument String
    , birthYear_starts_with : OptionalArgument String
    , birthYear_not_starts_with : OptionalArgument String
    , birthYear_ends_with : OptionalArgument String
    , birthYear_not_ends_with : OptionalArgument String
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , gender_not : OptionalArgument Api.Enum.PersonGender.PersonGender
    , gender_in : OptionalArgument (List Api.Enum.PersonGender.PersonGender)
    , gender_not_in : OptionalArgument (List Api.Enum.PersonGender.PersonGender)
    , height : OptionalArgument Int
    , height_not : OptionalArgument Int
    , height_in : OptionalArgument (List Int)
    , height_not_in : OptionalArgument (List Int)
    , height_lt : OptionalArgument Int
    , height_lte : OptionalArgument Int
    , height_gt : OptionalArgument Int
    , height_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , mass : OptionalArgument Float
    , mass_not : OptionalArgument Float
    , mass_in : OptionalArgument (List Float)
    , mass_not_in : OptionalArgument (List Float)
    , mass_lt : OptionalArgument Float
    , mass_lte : OptionalArgument Float
    , mass_gt : OptionalArgument Float
    , mass_gte : OptionalArgument Float
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , homeworld : OptionalArgument PlanetFilter
    , species_every : OptionalArgument SpeciesFilter
    , species_some : OptionalArgument SpeciesFilter
    , species_none : OptionalArgument SpeciesFilter
    , starships_every : OptionalArgument StarshipFilter
    , starships_some : OptionalArgument StarshipFilter
    , starships_none : OptionalArgument StarshipFilter
    , vehicles_every : OptionalArgument VehicleFilter
    , vehicles_some : OptionalArgument VehicleFilter
    , vehicles_none : OptionalArgument VehicleFilter
    }


{-| Type for the PersonFilter input object.
-}
type PersonFilter
    = PersonFilter PersonFilterRaw


{-| Encode a PersonFilter into a value that can be used as an argument.
-}
encodePersonFilter : PersonFilter -> Value
encodePersonFilter (PersonFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodePersonFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodePersonFilter |> Encode.list) |> Encode.optional input.or ), ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "birthYear_not", Encode.string |> Encode.optional input.birthYear_not ), ( "birthYear_in", (Encode.string |> Encode.list) |> Encode.optional input.birthYear_in ), ( "birthYear_not_in", (Encode.string |> Encode.list) |> Encode.optional input.birthYear_not_in ), ( "birthYear_lt", Encode.string |> Encode.optional input.birthYear_lt ), ( "birthYear_lte", Encode.string |> Encode.optional input.birthYear_lte ), ( "birthYear_gt", Encode.string |> Encode.optional input.birthYear_gt ), ( "birthYear_gte", Encode.string |> Encode.optional input.birthYear_gte ), ( "birthYear_contains", Encode.string |> Encode.optional input.birthYear_contains ), ( "birthYear_not_contains", Encode.string |> Encode.optional input.birthYear_not_contains ), ( "birthYear_starts_with", Encode.string |> Encode.optional input.birthYear_starts_with ), ( "birthYear_not_starts_with", Encode.string |> Encode.optional input.birthYear_not_starts_with ), ( "birthYear_ends_with", Encode.string |> Encode.optional input.birthYear_ends_with ), ( "birthYear_not_ends_with", Encode.string |> Encode.optional input.birthYear_not_ends_with ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "gender_not", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender_not ), ( "gender_in", (Encode.enum Api.Enum.PersonGender.toString |> Encode.list) |> Encode.optional input.gender_in ), ( "gender_not_in", (Encode.enum Api.Enum.PersonGender.toString |> Encode.list) |> Encode.optional input.gender_not_in ), ( "height", Encode.int |> Encode.optional input.height ), ( "height_not", Encode.int |> Encode.optional input.height_not ), ( "height_in", (Encode.int |> Encode.list) |> Encode.optional input.height_in ), ( "height_not_in", (Encode.int |> Encode.list) |> Encode.optional input.height_not_in ), ( "height_lt", Encode.int |> Encode.optional input.height_lt ), ( "height_lte", Encode.int |> Encode.optional input.height_lte ), ( "height_gt", Encode.int |> Encode.optional input.height_gt ), ( "height_gte", Encode.int |> Encode.optional input.height_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "mass_not", Encode.float |> Encode.optional input.mass_not ), ( "mass_in", (Encode.float |> Encode.list) |> Encode.optional input.mass_in ), ( "mass_not_in", (Encode.float |> Encode.list) |> Encode.optional input.mass_not_in ), ( "mass_lt", Encode.float |> Encode.optional input.mass_lt ), ( "mass_lte", Encode.float |> Encode.optional input.mass_lte ), ( "mass_gt", Encode.float |> Encode.optional input.mass_gt ), ( "mass_gte", Encode.float |> Encode.optional input.mass_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "homeworld", encodePlanetFilter |> Encode.optional input.homeworld ), ( "species_every", encodeSpeciesFilter |> Encode.optional input.species_every ), ( "species_some", encodeSpeciesFilter |> Encode.optional input.species_some ), ( "species_none", encodeSpeciesFilter |> Encode.optional input.species_none ), ( "starships_every", encodeStarshipFilter |> Encode.optional input.starships_every ), ( "starships_some", encodeStarshipFilter |> Encode.optional input.starships_some ), ( "starships_none", encodeStarshipFilter |> Encode.optional input.starships_none ), ( "vehicles_every", encodeVehicleFilter |> Encode.optional input.vehicles_every ), ( "vehicles_some", encodeVehicleFilter |> Encode.optional input.vehicles_some ), ( "vehicles_none", encodeVehicleFilter |> Encode.optional input.vehicles_none ) ]


buildPersonSubscriptionFilter : (PersonSubscriptionFilterOptionalFields -> PersonSubscriptionFilterOptionalFields) -> PersonSubscriptionFilter
buildPersonSubscriptionFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, mutation_in = Absent, updatedFields_contains = Absent, updatedFields_contains_every = Absent, updatedFields_contains_some = Absent, node = Absent }
    in
    PersonSubscriptionFilter { and = optionals.and, or = optionals.or, mutation_in = optionals.mutation_in, updatedFields_contains = optionals.updatedFields_contains, updatedFields_contains_every = optionals.updatedFields_contains_every, updatedFields_contains_some = optionals.updatedFields_contains_some, node = optionals.node }


type alias PersonSubscriptionFilterOptionalFields =
    { and : OptionalArgument (List PersonSubscriptionFilter)
    , or : OptionalArgument (List PersonSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument PersonSubscriptionFilterNode
    }


{-| Type alias for the `PersonSubscriptionFilter` attributes. Note that this type
needs to use the `PersonSubscriptionFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PersonSubscriptionFilterRaw =
    { and : OptionalArgument (List PersonSubscriptionFilter)
    , or : OptionalArgument (List PersonSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument PersonSubscriptionFilterNode
    }


{-| Type for the PersonSubscriptionFilter input object.
-}
type PersonSubscriptionFilter
    = PersonSubscriptionFilter PersonSubscriptionFilterRaw


{-| Encode a PersonSubscriptionFilter into a value that can be used as an argument.
-}
encodePersonSubscriptionFilter : PersonSubscriptionFilter -> Value
encodePersonSubscriptionFilter (PersonSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodePersonSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodePersonSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum Api.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodePersonSubscriptionFilterNode |> Encode.optional input.node ) ]


buildPersonSubscriptionFilterNode : (PersonSubscriptionFilterNodeOptionalFields -> PersonSubscriptionFilterNodeOptionalFields) -> PersonSubscriptionFilterNode
buildPersonSubscriptionFilterNode fillOptionals =
    let
        optionals =
            fillOptionals
                { birthYear = Absent, birthYear_not = Absent, birthYear_in = Absent, birthYear_not_in = Absent, birthYear_lt = Absent, birthYear_lte = Absent, birthYear_gt = Absent, birthYear_gte = Absent, birthYear_contains = Absent, birthYear_not_contains = Absent, birthYear_starts_with = Absent, birthYear_not_starts_with = Absent, birthYear_ends_with = Absent, birthYear_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, gender = Absent, gender_not = Absent, gender_in = Absent, gender_not_in = Absent, height = Absent, height_not = Absent, height_in = Absent, height_not_in = Absent, height_lt = Absent, height_lte = Absent, height_gt = Absent, height_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, mass = Absent, mass_not = Absent, mass_in = Absent, mass_not_in = Absent, mass_lt = Absent, mass_lte = Absent, mass_gt = Absent, mass_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, homeworld = Absent, species_every = Absent, species_some = Absent, species_none = Absent, starships_every = Absent, starships_some = Absent, starships_none = Absent, vehicles_every = Absent, vehicles_some = Absent, vehicles_none = Absent }
    in
    PersonSubscriptionFilterNode { birthYear = optionals.birthYear, birthYear_not = optionals.birthYear_not, birthYear_in = optionals.birthYear_in, birthYear_not_in = optionals.birthYear_not_in, birthYear_lt = optionals.birthYear_lt, birthYear_lte = optionals.birthYear_lte, birthYear_gt = optionals.birthYear_gt, birthYear_gte = optionals.birthYear_gte, birthYear_contains = optionals.birthYear_contains, birthYear_not_contains = optionals.birthYear_not_contains, birthYear_starts_with = optionals.birthYear_starts_with, birthYear_not_starts_with = optionals.birthYear_not_starts_with, birthYear_ends_with = optionals.birthYear_ends_with, birthYear_not_ends_with = optionals.birthYear_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, gender = optionals.gender, gender_not = optionals.gender_not, gender_in = optionals.gender_in, gender_not_in = optionals.gender_not_in, height = optionals.height, height_not = optionals.height_not, height_in = optionals.height_in, height_not_in = optionals.height_not_in, height_lt = optionals.height_lt, height_lte = optionals.height_lte, height_gt = optionals.height_gt, height_gte = optionals.height_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, mass = optionals.mass, mass_not = optionals.mass_not, mass_in = optionals.mass_in, mass_not_in = optionals.mass_not_in, mass_lt = optionals.mass_lt, mass_lte = optionals.mass_lte, mass_gt = optionals.mass_gt, mass_gte = optionals.mass_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, homeworld = optionals.homeworld, species_every = optionals.species_every, species_some = optionals.species_some, species_none = optionals.species_none, starships_every = optionals.starships_every, starships_some = optionals.starships_some, starships_none = optionals.starships_none, vehicles_every = optionals.vehicles_every, vehicles_some = optionals.vehicles_some, vehicles_none = optionals.vehicles_none }


type alias PersonSubscriptionFilterNodeOptionalFields =
    { birthYear : OptionalArgument String
    , birthYear_not : OptionalArgument String
    , birthYear_in : OptionalArgument (List String)
    , birthYear_not_in : OptionalArgument (List String)
    , birthYear_lt : OptionalArgument String
    , birthYear_lte : OptionalArgument String
    , birthYear_gt : OptionalArgument String
    , birthYear_gte : OptionalArgument String
    , birthYear_contains : OptionalArgument String
    , birthYear_not_contains : OptionalArgument String
    , birthYear_starts_with : OptionalArgument String
    , birthYear_not_starts_with : OptionalArgument String
    , birthYear_ends_with : OptionalArgument String
    , birthYear_not_ends_with : OptionalArgument String
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , gender_not : OptionalArgument Api.Enum.PersonGender.PersonGender
    , gender_in : OptionalArgument (List Api.Enum.PersonGender.PersonGender)
    , gender_not_in : OptionalArgument (List Api.Enum.PersonGender.PersonGender)
    , height : OptionalArgument Int
    , height_not : OptionalArgument Int
    , height_in : OptionalArgument (List Int)
    , height_not_in : OptionalArgument (List Int)
    , height_lt : OptionalArgument Int
    , height_lte : OptionalArgument Int
    , height_gt : OptionalArgument Int
    , height_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , mass : OptionalArgument Float
    , mass_not : OptionalArgument Float
    , mass_in : OptionalArgument (List Float)
    , mass_not_in : OptionalArgument (List Float)
    , mass_lt : OptionalArgument Float
    , mass_lte : OptionalArgument Float
    , mass_gt : OptionalArgument Float
    , mass_gte : OptionalArgument Float
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , homeworld : OptionalArgument PlanetFilter
    , species_every : OptionalArgument SpeciesFilter
    , species_some : OptionalArgument SpeciesFilter
    , species_none : OptionalArgument SpeciesFilter
    , starships_every : OptionalArgument StarshipFilter
    , starships_some : OptionalArgument StarshipFilter
    , starships_none : OptionalArgument StarshipFilter
    , vehicles_every : OptionalArgument VehicleFilter
    , vehicles_some : OptionalArgument VehicleFilter
    , vehicles_none : OptionalArgument VehicleFilter
    }


{-| Type alias for the `PersonSubscriptionFilterNode` attributes. Note that this type
needs to use the `PersonSubscriptionFilterNode` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PersonSubscriptionFilterNodeRaw =
    { birthYear : OptionalArgument String
    , birthYear_not : OptionalArgument String
    , birthYear_in : OptionalArgument (List String)
    , birthYear_not_in : OptionalArgument (List String)
    , birthYear_lt : OptionalArgument String
    , birthYear_lte : OptionalArgument String
    , birthYear_gt : OptionalArgument String
    , birthYear_gte : OptionalArgument String
    , birthYear_contains : OptionalArgument String
    , birthYear_not_contains : OptionalArgument String
    , birthYear_starts_with : OptionalArgument String
    , birthYear_not_starts_with : OptionalArgument String
    , birthYear_ends_with : OptionalArgument String
    , birthYear_not_ends_with : OptionalArgument String
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , gender_not : OptionalArgument Api.Enum.PersonGender.PersonGender
    , gender_in : OptionalArgument (List Api.Enum.PersonGender.PersonGender)
    , gender_not_in : OptionalArgument (List Api.Enum.PersonGender.PersonGender)
    , height : OptionalArgument Int
    , height_not : OptionalArgument Int
    , height_in : OptionalArgument (List Int)
    , height_not_in : OptionalArgument (List Int)
    , height_lt : OptionalArgument Int
    , height_lte : OptionalArgument Int
    , height_gt : OptionalArgument Int
    , height_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , mass : OptionalArgument Float
    , mass_not : OptionalArgument Float
    , mass_in : OptionalArgument (List Float)
    , mass_not_in : OptionalArgument (List Float)
    , mass_lt : OptionalArgument Float
    , mass_lte : OptionalArgument Float
    , mass_gt : OptionalArgument Float
    , mass_gte : OptionalArgument Float
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , homeworld : OptionalArgument PlanetFilter
    , species_every : OptionalArgument SpeciesFilter
    , species_some : OptionalArgument SpeciesFilter
    , species_none : OptionalArgument SpeciesFilter
    , starships_every : OptionalArgument StarshipFilter
    , starships_some : OptionalArgument StarshipFilter
    , starships_none : OptionalArgument StarshipFilter
    , vehicles_every : OptionalArgument VehicleFilter
    , vehicles_some : OptionalArgument VehicleFilter
    , vehicles_none : OptionalArgument VehicleFilter
    }


{-| Type for the PersonSubscriptionFilterNode input object.
-}
type PersonSubscriptionFilterNode
    = PersonSubscriptionFilterNode PersonSubscriptionFilterNodeRaw


{-| Encode a PersonSubscriptionFilterNode into a value that can be used as an argument.
-}
encodePersonSubscriptionFilterNode : PersonSubscriptionFilterNode -> Value
encodePersonSubscriptionFilterNode (PersonSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "birthYear_not", Encode.string |> Encode.optional input.birthYear_not ), ( "birthYear_in", (Encode.string |> Encode.list) |> Encode.optional input.birthYear_in ), ( "birthYear_not_in", (Encode.string |> Encode.list) |> Encode.optional input.birthYear_not_in ), ( "birthYear_lt", Encode.string |> Encode.optional input.birthYear_lt ), ( "birthYear_lte", Encode.string |> Encode.optional input.birthYear_lte ), ( "birthYear_gt", Encode.string |> Encode.optional input.birthYear_gt ), ( "birthYear_gte", Encode.string |> Encode.optional input.birthYear_gte ), ( "birthYear_contains", Encode.string |> Encode.optional input.birthYear_contains ), ( "birthYear_not_contains", Encode.string |> Encode.optional input.birthYear_not_contains ), ( "birthYear_starts_with", Encode.string |> Encode.optional input.birthYear_starts_with ), ( "birthYear_not_starts_with", Encode.string |> Encode.optional input.birthYear_not_starts_with ), ( "birthYear_ends_with", Encode.string |> Encode.optional input.birthYear_ends_with ), ( "birthYear_not_ends_with", Encode.string |> Encode.optional input.birthYear_not_ends_with ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "gender_not", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender_not ), ( "gender_in", (Encode.enum Api.Enum.PersonGender.toString |> Encode.list) |> Encode.optional input.gender_in ), ( "gender_not_in", (Encode.enum Api.Enum.PersonGender.toString |> Encode.list) |> Encode.optional input.gender_not_in ), ( "height", Encode.int |> Encode.optional input.height ), ( "height_not", Encode.int |> Encode.optional input.height_not ), ( "height_in", (Encode.int |> Encode.list) |> Encode.optional input.height_in ), ( "height_not_in", (Encode.int |> Encode.list) |> Encode.optional input.height_not_in ), ( "height_lt", Encode.int |> Encode.optional input.height_lt ), ( "height_lte", Encode.int |> Encode.optional input.height_lte ), ( "height_gt", Encode.int |> Encode.optional input.height_gt ), ( "height_gte", Encode.int |> Encode.optional input.height_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "mass_not", Encode.float |> Encode.optional input.mass_not ), ( "mass_in", (Encode.float |> Encode.list) |> Encode.optional input.mass_in ), ( "mass_not_in", (Encode.float |> Encode.list) |> Encode.optional input.mass_not_in ), ( "mass_lt", Encode.float |> Encode.optional input.mass_lt ), ( "mass_lte", Encode.float |> Encode.optional input.mass_lte ), ( "mass_gt", Encode.float |> Encode.optional input.mass_gt ), ( "mass_gte", Encode.float |> Encode.optional input.mass_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "homeworld", encodePlanetFilter |> Encode.optional input.homeworld ), ( "species_every", encodeSpeciesFilter |> Encode.optional input.species_every ), ( "species_some", encodeSpeciesFilter |> Encode.optional input.species_some ), ( "species_none", encodeSpeciesFilter |> Encode.optional input.species_none ), ( "starships_every", encodeStarshipFilter |> Encode.optional input.starships_every ), ( "starships_some", encodeStarshipFilter |> Encode.optional input.starships_some ), ( "starships_none", encodeStarshipFilter |> Encode.optional input.starships_none ), ( "vehicles_every", encodeVehicleFilter |> Encode.optional input.vehicles_every ), ( "vehicles_some", encodeVehicleFilter |> Encode.optional input.vehicles_some ), ( "vehicles_none", encodeVehicleFilter |> Encode.optional input.vehicles_none ) ]


buildPersonfilmsFilm : PersonfilmsFilmRequiredFields -> (PersonfilmsFilmOptionalFields -> PersonfilmsFilmOptionalFields) -> PersonfilmsFilm
buildPersonfilmsFilm required fillOptionals =
    let
        optionals =
            fillOptionals
                { director = Absent, isPublished = Absent, openingCrawl = Absent, producers = Absent, releaseDate = Absent, charactersIds = Absent, characters = Absent, planetsIds = Absent, planets = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    PersonfilmsFilm { director = optionals.director, episodeId = required.episodeId, isPublished = optionals.isPublished, openingCrawl = optionals.openingCrawl, producers = optionals.producers, releaseDate = optionals.releaseDate, title = required.title, charactersIds = optionals.charactersIds, characters = optionals.characters, planetsIds = optionals.planetsIds, planets = optionals.planets, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias PersonfilmsFilmRequiredFields =
    { episodeId : Int
    , title : String
    }


type alias PersonfilmsFilmOptionalFields =
    { director : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type alias for the `PersonfilmsFilm` attributes. Note that this type
needs to use the `PersonfilmsFilm` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PersonfilmsFilmRaw =
    { director : OptionalArgument String
    , episodeId : Int
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , title : String
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type for the PersonfilmsFilm input object.
-}
type PersonfilmsFilm
    = PersonfilmsFilm PersonfilmsFilmRaw


{-| Encode a PersonfilmsFilm into a value that can be used as an argument.
-}
encodePersonfilmsFilm : PersonfilmsFilm -> Value
encodePersonfilmsFilm (PersonfilmsFilm input) =
    Encode.maybeObject
        [ ( "director", Encode.string |> Encode.optional input.director ), ( "episodeId", Encode.int input.episodeId |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "producers", (Encode.string |> Encode.list) |> Encode.optional input.producers ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "title", Encode.string input.title |> Just ), ( "charactersIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.charactersIds ), ( "characters", (encodeFilmcharactersPerson |> Encode.list) |> Encode.optional input.characters ), ( "planetsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.planetsIds ), ( "planets", (encodeFilmplanetsPlanet |> Encode.list) |> Encode.optional input.planets ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodeFilmspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodeFilmstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodeFilmvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildPersonhomeworldPlanet : PersonhomeworldPlanetRequiredFields -> (PersonhomeworldPlanetOptionalFields -> PersonhomeworldPlanetOptionalFields) -> PersonhomeworldPlanet
buildPersonhomeworldPlanet required fillOptionals =
    let
        optionals =
            fillOptionals
                { climate = Absent, diameter = Absent, gravity = Absent, isPublished = Absent, orbitalPeriod = Absent, population = Absent, rotationPeriod = Absent, surfaceWater = Absent, terrain = Absent, filmsIds = Absent, films = Absent, residentsIds = Absent, residents = Absent }
    in
    PersonhomeworldPlanet { climate = optionals.climate, diameter = optionals.diameter, gravity = optionals.gravity, isPublished = optionals.isPublished, name = required.name, orbitalPeriod = optionals.orbitalPeriod, population = optionals.population, rotationPeriod = optionals.rotationPeriod, surfaceWater = optionals.surfaceWater, terrain = optionals.terrain, filmsIds = optionals.filmsIds, films = optionals.films, residentsIds = optionals.residentsIds, residents = optionals.residents }


type alias PersonhomeworldPlanetRequiredFields =
    { name : String }


type alias PersonhomeworldPlanetOptionalFields =
    { climate : OptionalArgument (List String)
    , diameter : OptionalArgument Int
    , gravity : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , orbitalPeriod : OptionalArgument Int
    , population : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , terrain : OptionalArgument (List String)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PlanetfilmsFilm)
    , residentsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , residents : OptionalArgument (List PlanetresidentsPerson)
    }


{-| Type alias for the `PersonhomeworldPlanet` attributes. Note that this type
needs to use the `PersonhomeworldPlanet` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PersonhomeworldPlanetRaw =
    { climate : OptionalArgument (List String)
    , diameter : OptionalArgument Int
    , gravity : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , name : String
    , orbitalPeriod : OptionalArgument Int
    , population : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , terrain : OptionalArgument (List String)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PlanetfilmsFilm)
    , residentsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , residents : OptionalArgument (List PlanetresidentsPerson)
    }


{-| Type for the PersonhomeworldPlanet input object.
-}
type PersonhomeworldPlanet
    = PersonhomeworldPlanet PersonhomeworldPlanetRaw


{-| Encode a PersonhomeworldPlanet into a value that can be used as an argument.
-}
encodePersonhomeworldPlanet : PersonhomeworldPlanet -> Value
encodePersonhomeworldPlanet (PersonhomeworldPlanet input) =
    Encode.maybeObject
        [ ( "climate", (Encode.string |> Encode.list) |> Encode.optional input.climate ), ( "diameter", Encode.int |> Encode.optional input.diameter ), ( "gravity", Encode.string |> Encode.optional input.gravity ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "name", Encode.string input.name |> Just ), ( "orbitalPeriod", Encode.int |> Encode.optional input.orbitalPeriod ), ( "population", Encode.float |> Encode.optional input.population ), ( "rotationPeriod", Encode.int |> Encode.optional input.rotationPeriod ), ( "surfaceWater", Encode.float |> Encode.optional input.surfaceWater ), ( "terrain", (Encode.string |> Encode.list) |> Encode.optional input.terrain ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePlanetfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "residentsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.residentsIds ), ( "residents", (encodePlanetresidentsPerson |> Encode.list) |> Encode.optional input.residents ) ]


buildPersonspeciesSpecies : PersonspeciesSpeciesRequiredFields -> (PersonspeciesSpeciesOptionalFields -> PersonspeciesSpeciesOptionalFields) -> PersonspeciesSpecies
buildPersonspeciesSpecies required fillOptionals =
    let
        optionals =
            fillOptionals
                { averageHeight = Absent, averageLifespan = Absent, classification = Absent, designation = Absent, eyeColor = Absent, hairColor = Absent, isPublished = Absent, language = Absent, skinColor = Absent, filmsIds = Absent, films = Absent, peopleIds = Absent, people = Absent }
    in
    PersonspeciesSpecies { averageHeight = optionals.averageHeight, averageLifespan = optionals.averageLifespan, classification = optionals.classification, designation = optionals.designation, eyeColor = optionals.eyeColor, hairColor = optionals.hairColor, isPublished = optionals.isPublished, language = optionals.language, name = required.name, skinColor = optionals.skinColor, filmsIds = optionals.filmsIds, films = optionals.films, peopleIds = optionals.peopleIds, people = optionals.people }


type alias PersonspeciesSpeciesRequiredFields =
    { name : String }


type alias PersonspeciesSpeciesOptionalFields =
    { averageHeight : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , classification : OptionalArgument String
    , designation : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.SpeciesEyeColor.SpeciesEyeColor)
    , hairColor : OptionalArgument (List Api.Enum.SpeciesHairColor.SpeciesHairColor)
    , isPublished : OptionalArgument Bool
    , language : OptionalArgument String
    , skinColor : OptionalArgument (List Api.Enum.SpeciesSkinColor.SpeciesSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List SpeciesfilmsFilm)
    , peopleIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , people : OptionalArgument (List SpeciespeoplePerson)
    }


{-| Type alias for the `PersonspeciesSpecies` attributes. Note that this type
needs to use the `PersonspeciesSpecies` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PersonspeciesSpeciesRaw =
    { averageHeight : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , classification : OptionalArgument String
    , designation : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.SpeciesEyeColor.SpeciesEyeColor)
    , hairColor : OptionalArgument (List Api.Enum.SpeciesHairColor.SpeciesHairColor)
    , isPublished : OptionalArgument Bool
    , language : OptionalArgument String
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.SpeciesSkinColor.SpeciesSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List SpeciesfilmsFilm)
    , peopleIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , people : OptionalArgument (List SpeciespeoplePerson)
    }


{-| Type for the PersonspeciesSpecies input object.
-}
type PersonspeciesSpecies
    = PersonspeciesSpecies PersonspeciesSpeciesRaw


{-| Encode a PersonspeciesSpecies into a value that can be used as an argument.
-}
encodePersonspeciesSpecies : PersonspeciesSpecies -> Value
encodePersonspeciesSpecies (PersonspeciesSpecies input) =
    Encode.maybeObject
        [ ( "averageHeight", Encode.int |> Encode.optional input.averageHeight ), ( "averageLifespan", Encode.int |> Encode.optional input.averageLifespan ), ( "classification", Encode.string |> Encode.optional input.classification ), ( "designation", Encode.string |> Encode.optional input.designation ), ( "eyeColor", (Encode.enum Api.Enum.SpeciesEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "hairColor", (Encode.enum Api.Enum.SpeciesHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "language", Encode.string |> Encode.optional input.language ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.SpeciesSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeSpeciesfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "peopleIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.peopleIds ), ( "people", (encodeSpeciespeoplePerson |> Encode.list) |> Encode.optional input.people ) ]


buildPersonstarshipsStarship : PersonstarshipsStarshipRequiredFields -> (PersonstarshipsStarshipOptionalFields -> PersonstarshipsStarshipOptionalFields) -> PersonstarshipsStarship
buildPersonstarshipsStarship required fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, class = Absent, consumables = Absent, costInCredits = Absent, crew = Absent, hyperdriveRating = Absent, isPublished = Absent, length = Absent, manufacturer = Absent, maxAtmospheringSpeed = Absent, mglt = Absent, passengers = Absent, filmsIds = Absent, films = Absent, pilotsIds = Absent, pilots = Absent }
    in
    PersonstarshipsStarship { cargoCapacity = optionals.cargoCapacity, class = optionals.class, consumables = optionals.consumables, costInCredits = optionals.costInCredits, crew = optionals.crew, hyperdriveRating = optionals.hyperdriveRating, isPublished = optionals.isPublished, length = optionals.length, manufacturer = optionals.manufacturer, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, mglt = optionals.mglt, name = required.name, passengers = optionals.passengers, filmsIds = optionals.filmsIds, films = optionals.films, pilotsIds = optionals.pilotsIds, pilots = optionals.pilots }


type alias PersonstarshipsStarshipRequiredFields =
    { name : String }


type alias PersonstarshipsStarshipOptionalFields =
    { cargoCapacity : OptionalArgument Float
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , crew : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , mglt : OptionalArgument Int
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List StarshipfilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List StarshippilotsPerson)
    }


{-| Type alias for the `PersonstarshipsStarship` attributes. Note that this type
needs to use the `PersonstarshipsStarship` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PersonstarshipsStarshipRaw =
    { cargoCapacity : OptionalArgument Float
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , crew : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , mglt : OptionalArgument Int
    , name : String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List StarshipfilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List StarshippilotsPerson)
    }


{-| Type for the PersonstarshipsStarship input object.
-}
type PersonstarshipsStarship
    = PersonstarshipsStarship PersonstarshipsStarshipRaw


{-| Encode a PersonstarshipsStarship into a value that can be used as an argument.
-}
encodePersonstarshipsStarship : PersonstarshipsStarship -> Value
encodePersonstarshipsStarship (PersonstarshipsStarship input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.float |> Encode.optional input.cargoCapacity ), ( "class", Encode.string |> Encode.optional input.class ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "costInCredits", Encode.float |> Encode.optional input.costInCredits ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "hyperdriveRating", Encode.float |> Encode.optional input.hyperdriveRating ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "length", Encode.float |> Encode.optional input.length ), ( "manufacturer", (Encode.string |> Encode.list) |> Encode.optional input.manufacturer ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "mglt", Encode.int |> Encode.optional input.mglt ), ( "name", Encode.string input.name |> Just ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeStarshipfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "pilotsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.pilotsIds ), ( "pilots", (encodeStarshippilotsPerson |> Encode.list) |> Encode.optional input.pilots ) ]


buildPersonvehiclesVehicle : PersonvehiclesVehicleRequiredFields -> (PersonvehiclesVehicleOptionalFields -> PersonvehiclesVehicleOptionalFields) -> PersonvehiclesVehicle
buildPersonvehiclesVehicle required fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, class = Absent, consumables = Absent, costInCredits = Absent, crew = Absent, isPublished = Absent, length = Absent, manufacturer = Absent, maxAtmospheringSpeed = Absent, model = Absent, passengers = Absent, filmsIds = Absent, films = Absent, pilotsIds = Absent, pilots = Absent }
    in
    PersonvehiclesVehicle { cargoCapacity = optionals.cargoCapacity, class = optionals.class, consumables = optionals.consumables, costInCredits = optionals.costInCredits, crew = optionals.crew, isPublished = optionals.isPublished, length = optionals.length, manufacturer = optionals.manufacturer, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, model = optionals.model, name = required.name, passengers = optionals.passengers, filmsIds = optionals.filmsIds, films = optionals.films, pilotsIds = optionals.pilotsIds, pilots = optionals.pilots }


type alias PersonvehiclesVehicleRequiredFields =
    { name : String }


type alias PersonvehiclesVehicleOptionalFields =
    { cargoCapacity : OptionalArgument Int
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , crew : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , model : OptionalArgument String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List VehiclefilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List VehiclepilotsPerson)
    }


{-| Type alias for the `PersonvehiclesVehicle` attributes. Note that this type
needs to use the `PersonvehiclesVehicle` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PersonvehiclesVehicleRaw =
    { cargoCapacity : OptionalArgument Int
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , crew : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , model : OptionalArgument String
    , name : String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List VehiclefilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List VehiclepilotsPerson)
    }


{-| Type for the PersonvehiclesVehicle input object.
-}
type PersonvehiclesVehicle
    = PersonvehiclesVehicle PersonvehiclesVehicleRaw


{-| Encode a PersonvehiclesVehicle into a value that can be used as an argument.
-}
encodePersonvehiclesVehicle : PersonvehiclesVehicle -> Value
encodePersonvehiclesVehicle (PersonvehiclesVehicle input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.int |> Encode.optional input.cargoCapacity ), ( "class", Encode.string |> Encode.optional input.class ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "costInCredits", Encode.int |> Encode.optional input.costInCredits ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "length", Encode.float |> Encode.optional input.length ), ( "manufacturer", (Encode.string |> Encode.list) |> Encode.optional input.manufacturer ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "model", Encode.string |> Encode.optional input.model ), ( "name", Encode.string input.name |> Just ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeVehiclefilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "pilotsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.pilotsIds ), ( "pilots", (encodeVehiclepilotsPerson |> Encode.list) |> Encode.optional input.pilots ) ]


buildPlanetFilter : (PlanetFilterOptionalFields -> PlanetFilterOptionalFields) -> PlanetFilter
buildPlanetFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, diameter = Absent, diameter_not = Absent, diameter_in = Absent, diameter_not_in = Absent, diameter_lt = Absent, diameter_lte = Absent, diameter_gt = Absent, diameter_gte = Absent, gravity = Absent, gravity_not = Absent, gravity_in = Absent, gravity_not_in = Absent, gravity_lt = Absent, gravity_lte = Absent, gravity_gt = Absent, gravity_gte = Absent, gravity_contains = Absent, gravity_not_contains = Absent, gravity_starts_with = Absent, gravity_not_starts_with = Absent, gravity_ends_with = Absent, gravity_not_ends_with = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, orbitalPeriod = Absent, orbitalPeriod_not = Absent, orbitalPeriod_in = Absent, orbitalPeriod_not_in = Absent, orbitalPeriod_lt = Absent, orbitalPeriod_lte = Absent, orbitalPeriod_gt = Absent, orbitalPeriod_gte = Absent, population = Absent, population_not = Absent, population_in = Absent, population_not_in = Absent, population_lt = Absent, population_lte = Absent, population_gt = Absent, population_gte = Absent, rotationPeriod = Absent, rotationPeriod_not = Absent, rotationPeriod_in = Absent, rotationPeriod_not_in = Absent, rotationPeriod_lt = Absent, rotationPeriod_lte = Absent, rotationPeriod_gt = Absent, rotationPeriod_gte = Absent, surfaceWater = Absent, surfaceWater_not = Absent, surfaceWater_in = Absent, surfaceWater_not_in = Absent, surfaceWater_lt = Absent, surfaceWater_lte = Absent, surfaceWater_gt = Absent, surfaceWater_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, residents_every = Absent, residents_some = Absent, residents_none = Absent }
    in
    PlanetFilter { and = optionals.and, or = optionals.or, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, diameter = optionals.diameter, diameter_not = optionals.diameter_not, diameter_in = optionals.diameter_in, diameter_not_in = optionals.diameter_not_in, diameter_lt = optionals.diameter_lt, diameter_lte = optionals.diameter_lte, diameter_gt = optionals.diameter_gt, diameter_gte = optionals.diameter_gte, gravity = optionals.gravity, gravity_not = optionals.gravity_not, gravity_in = optionals.gravity_in, gravity_not_in = optionals.gravity_not_in, gravity_lt = optionals.gravity_lt, gravity_lte = optionals.gravity_lte, gravity_gt = optionals.gravity_gt, gravity_gte = optionals.gravity_gte, gravity_contains = optionals.gravity_contains, gravity_not_contains = optionals.gravity_not_contains, gravity_starts_with = optionals.gravity_starts_with, gravity_not_starts_with = optionals.gravity_not_starts_with, gravity_ends_with = optionals.gravity_ends_with, gravity_not_ends_with = optionals.gravity_not_ends_with, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, orbitalPeriod = optionals.orbitalPeriod, orbitalPeriod_not = optionals.orbitalPeriod_not, orbitalPeriod_in = optionals.orbitalPeriod_in, orbitalPeriod_not_in = optionals.orbitalPeriod_not_in, orbitalPeriod_lt = optionals.orbitalPeriod_lt, orbitalPeriod_lte = optionals.orbitalPeriod_lte, orbitalPeriod_gt = optionals.orbitalPeriod_gt, orbitalPeriod_gte = optionals.orbitalPeriod_gte, population = optionals.population, population_not = optionals.population_not, population_in = optionals.population_in, population_not_in = optionals.population_not_in, population_lt = optionals.population_lt, population_lte = optionals.population_lte, population_gt = optionals.population_gt, population_gte = optionals.population_gte, rotationPeriod = optionals.rotationPeriod, rotationPeriod_not = optionals.rotationPeriod_not, rotationPeriod_in = optionals.rotationPeriod_in, rotationPeriod_not_in = optionals.rotationPeriod_not_in, rotationPeriod_lt = optionals.rotationPeriod_lt, rotationPeriod_lte = optionals.rotationPeriod_lte, rotationPeriod_gt = optionals.rotationPeriod_gt, rotationPeriod_gte = optionals.rotationPeriod_gte, surfaceWater = optionals.surfaceWater, surfaceWater_not = optionals.surfaceWater_not, surfaceWater_in = optionals.surfaceWater_in, surfaceWater_not_in = optionals.surfaceWater_not_in, surfaceWater_lt = optionals.surfaceWater_lt, surfaceWater_lte = optionals.surfaceWater_lte, surfaceWater_gt = optionals.surfaceWater_gt, surfaceWater_gte = optionals.surfaceWater_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, residents_every = optionals.residents_every, residents_some = optionals.residents_some, residents_none = optionals.residents_none }


type alias PlanetFilterOptionalFields =
    { and : OptionalArgument (List PlanetFilter)
    , or : OptionalArgument (List PlanetFilter)
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , diameter : OptionalArgument Int
    , diameter_not : OptionalArgument Int
    , diameter_in : OptionalArgument (List Int)
    , diameter_not_in : OptionalArgument (List Int)
    , diameter_lt : OptionalArgument Int
    , diameter_lte : OptionalArgument Int
    , diameter_gt : OptionalArgument Int
    , diameter_gte : OptionalArgument Int
    , gravity : OptionalArgument String
    , gravity_not : OptionalArgument String
    , gravity_in : OptionalArgument (List String)
    , gravity_not_in : OptionalArgument (List String)
    , gravity_lt : OptionalArgument String
    , gravity_lte : OptionalArgument String
    , gravity_gt : OptionalArgument String
    , gravity_gte : OptionalArgument String
    , gravity_contains : OptionalArgument String
    , gravity_not_contains : OptionalArgument String
    , gravity_starts_with : OptionalArgument String
    , gravity_not_starts_with : OptionalArgument String
    , gravity_ends_with : OptionalArgument String
    , gravity_not_ends_with : OptionalArgument String
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , orbitalPeriod : OptionalArgument Int
    , orbitalPeriod_not : OptionalArgument Int
    , orbitalPeriod_in : OptionalArgument (List Int)
    , orbitalPeriod_not_in : OptionalArgument (List Int)
    , orbitalPeriod_lt : OptionalArgument Int
    , orbitalPeriod_lte : OptionalArgument Int
    , orbitalPeriod_gt : OptionalArgument Int
    , orbitalPeriod_gte : OptionalArgument Int
    , population : OptionalArgument Float
    , population_not : OptionalArgument Float
    , population_in : OptionalArgument (List Float)
    , population_not_in : OptionalArgument (List Float)
    , population_lt : OptionalArgument Float
    , population_lte : OptionalArgument Float
    , population_gt : OptionalArgument Float
    , population_gte : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , rotationPeriod_not : OptionalArgument Int
    , rotationPeriod_in : OptionalArgument (List Int)
    , rotationPeriod_not_in : OptionalArgument (List Int)
    , rotationPeriod_lt : OptionalArgument Int
    , rotationPeriod_lte : OptionalArgument Int
    , rotationPeriod_gt : OptionalArgument Int
    , rotationPeriod_gte : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , surfaceWater_not : OptionalArgument Float
    , surfaceWater_in : OptionalArgument (List Float)
    , surfaceWater_not_in : OptionalArgument (List Float)
    , surfaceWater_lt : OptionalArgument Float
    , surfaceWater_lte : OptionalArgument Float
    , surfaceWater_gt : OptionalArgument Float
    , surfaceWater_gte : OptionalArgument Float
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , residents_every : OptionalArgument PersonFilter
    , residents_some : OptionalArgument PersonFilter
    , residents_none : OptionalArgument PersonFilter
    }


{-| Type alias for the `PlanetFilter` attributes. Note that this type
needs to use the `PlanetFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PlanetFilterRaw =
    { and : OptionalArgument (List PlanetFilter)
    , or : OptionalArgument (List PlanetFilter)
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , diameter : OptionalArgument Int
    , diameter_not : OptionalArgument Int
    , diameter_in : OptionalArgument (List Int)
    , diameter_not_in : OptionalArgument (List Int)
    , diameter_lt : OptionalArgument Int
    , diameter_lte : OptionalArgument Int
    , diameter_gt : OptionalArgument Int
    , diameter_gte : OptionalArgument Int
    , gravity : OptionalArgument String
    , gravity_not : OptionalArgument String
    , gravity_in : OptionalArgument (List String)
    , gravity_not_in : OptionalArgument (List String)
    , gravity_lt : OptionalArgument String
    , gravity_lte : OptionalArgument String
    , gravity_gt : OptionalArgument String
    , gravity_gte : OptionalArgument String
    , gravity_contains : OptionalArgument String
    , gravity_not_contains : OptionalArgument String
    , gravity_starts_with : OptionalArgument String
    , gravity_not_starts_with : OptionalArgument String
    , gravity_ends_with : OptionalArgument String
    , gravity_not_ends_with : OptionalArgument String
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , orbitalPeriod : OptionalArgument Int
    , orbitalPeriod_not : OptionalArgument Int
    , orbitalPeriod_in : OptionalArgument (List Int)
    , orbitalPeriod_not_in : OptionalArgument (List Int)
    , orbitalPeriod_lt : OptionalArgument Int
    , orbitalPeriod_lte : OptionalArgument Int
    , orbitalPeriod_gt : OptionalArgument Int
    , orbitalPeriod_gte : OptionalArgument Int
    , population : OptionalArgument Float
    , population_not : OptionalArgument Float
    , population_in : OptionalArgument (List Float)
    , population_not_in : OptionalArgument (List Float)
    , population_lt : OptionalArgument Float
    , population_lte : OptionalArgument Float
    , population_gt : OptionalArgument Float
    , population_gte : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , rotationPeriod_not : OptionalArgument Int
    , rotationPeriod_in : OptionalArgument (List Int)
    , rotationPeriod_not_in : OptionalArgument (List Int)
    , rotationPeriod_lt : OptionalArgument Int
    , rotationPeriod_lte : OptionalArgument Int
    , rotationPeriod_gt : OptionalArgument Int
    , rotationPeriod_gte : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , surfaceWater_not : OptionalArgument Float
    , surfaceWater_in : OptionalArgument (List Float)
    , surfaceWater_not_in : OptionalArgument (List Float)
    , surfaceWater_lt : OptionalArgument Float
    , surfaceWater_lte : OptionalArgument Float
    , surfaceWater_gt : OptionalArgument Float
    , surfaceWater_gte : OptionalArgument Float
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , residents_every : OptionalArgument PersonFilter
    , residents_some : OptionalArgument PersonFilter
    , residents_none : OptionalArgument PersonFilter
    }


{-| Type for the PlanetFilter input object.
-}
type PlanetFilter
    = PlanetFilter PlanetFilterRaw


{-| Encode a PlanetFilter into a value that can be used as an argument.
-}
encodePlanetFilter : PlanetFilter -> Value
encodePlanetFilter (PlanetFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodePlanetFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodePlanetFilter |> Encode.list) |> Encode.optional input.or ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "diameter", Encode.int |> Encode.optional input.diameter ), ( "diameter_not", Encode.int |> Encode.optional input.diameter_not ), ( "diameter_in", (Encode.int |> Encode.list) |> Encode.optional input.diameter_in ), ( "diameter_not_in", (Encode.int |> Encode.list) |> Encode.optional input.diameter_not_in ), ( "diameter_lt", Encode.int |> Encode.optional input.diameter_lt ), ( "diameter_lte", Encode.int |> Encode.optional input.diameter_lte ), ( "diameter_gt", Encode.int |> Encode.optional input.diameter_gt ), ( "diameter_gte", Encode.int |> Encode.optional input.diameter_gte ), ( "gravity", Encode.string |> Encode.optional input.gravity ), ( "gravity_not", Encode.string |> Encode.optional input.gravity_not ), ( "gravity_in", (Encode.string |> Encode.list) |> Encode.optional input.gravity_in ), ( "gravity_not_in", (Encode.string |> Encode.list) |> Encode.optional input.gravity_not_in ), ( "gravity_lt", Encode.string |> Encode.optional input.gravity_lt ), ( "gravity_lte", Encode.string |> Encode.optional input.gravity_lte ), ( "gravity_gt", Encode.string |> Encode.optional input.gravity_gt ), ( "gravity_gte", Encode.string |> Encode.optional input.gravity_gte ), ( "gravity_contains", Encode.string |> Encode.optional input.gravity_contains ), ( "gravity_not_contains", Encode.string |> Encode.optional input.gravity_not_contains ), ( "gravity_starts_with", Encode.string |> Encode.optional input.gravity_starts_with ), ( "gravity_not_starts_with", Encode.string |> Encode.optional input.gravity_not_starts_with ), ( "gravity_ends_with", Encode.string |> Encode.optional input.gravity_ends_with ), ( "gravity_not_ends_with", Encode.string |> Encode.optional input.gravity_not_ends_with ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "orbitalPeriod", Encode.int |> Encode.optional input.orbitalPeriod ), ( "orbitalPeriod_not", Encode.int |> Encode.optional input.orbitalPeriod_not ), ( "orbitalPeriod_in", (Encode.int |> Encode.list) |> Encode.optional input.orbitalPeriod_in ), ( "orbitalPeriod_not_in", (Encode.int |> Encode.list) |> Encode.optional input.orbitalPeriod_not_in ), ( "orbitalPeriod_lt", Encode.int |> Encode.optional input.orbitalPeriod_lt ), ( "orbitalPeriod_lte", Encode.int |> Encode.optional input.orbitalPeriod_lte ), ( "orbitalPeriod_gt", Encode.int |> Encode.optional input.orbitalPeriod_gt ), ( "orbitalPeriod_gte", Encode.int |> Encode.optional input.orbitalPeriod_gte ), ( "population", Encode.float |> Encode.optional input.population ), ( "population_not", Encode.float |> Encode.optional input.population_not ), ( "population_in", (Encode.float |> Encode.list) |> Encode.optional input.population_in ), ( "population_not_in", (Encode.float |> Encode.list) |> Encode.optional input.population_not_in ), ( "population_lt", Encode.float |> Encode.optional input.population_lt ), ( "population_lte", Encode.float |> Encode.optional input.population_lte ), ( "population_gt", Encode.float |> Encode.optional input.population_gt ), ( "population_gte", Encode.float |> Encode.optional input.population_gte ), ( "rotationPeriod", Encode.int |> Encode.optional input.rotationPeriod ), ( "rotationPeriod_not", Encode.int |> Encode.optional input.rotationPeriod_not ), ( "rotationPeriod_in", (Encode.int |> Encode.list) |> Encode.optional input.rotationPeriod_in ), ( "rotationPeriod_not_in", (Encode.int |> Encode.list) |> Encode.optional input.rotationPeriod_not_in ), ( "rotationPeriod_lt", Encode.int |> Encode.optional input.rotationPeriod_lt ), ( "rotationPeriod_lte", Encode.int |> Encode.optional input.rotationPeriod_lte ), ( "rotationPeriod_gt", Encode.int |> Encode.optional input.rotationPeriod_gt ), ( "rotationPeriod_gte", Encode.int |> Encode.optional input.rotationPeriod_gte ), ( "surfaceWater", Encode.float |> Encode.optional input.surfaceWater ), ( "surfaceWater_not", Encode.float |> Encode.optional input.surfaceWater_not ), ( "surfaceWater_in", (Encode.float |> Encode.list) |> Encode.optional input.surfaceWater_in ), ( "surfaceWater_not_in", (Encode.float |> Encode.list) |> Encode.optional input.surfaceWater_not_in ), ( "surfaceWater_lt", Encode.float |> Encode.optional input.surfaceWater_lt ), ( "surfaceWater_lte", Encode.float |> Encode.optional input.surfaceWater_lte ), ( "surfaceWater_gt", Encode.float |> Encode.optional input.surfaceWater_gt ), ( "surfaceWater_gte", Encode.float |> Encode.optional input.surfaceWater_gte ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "residents_every", encodePersonFilter |> Encode.optional input.residents_every ), ( "residents_some", encodePersonFilter |> Encode.optional input.residents_some ), ( "residents_none", encodePersonFilter |> Encode.optional input.residents_none ) ]


buildPlanetSubscriptionFilter : (PlanetSubscriptionFilterOptionalFields -> PlanetSubscriptionFilterOptionalFields) -> PlanetSubscriptionFilter
buildPlanetSubscriptionFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, mutation_in = Absent, updatedFields_contains = Absent, updatedFields_contains_every = Absent, updatedFields_contains_some = Absent, node = Absent }
    in
    PlanetSubscriptionFilter { and = optionals.and, or = optionals.or, mutation_in = optionals.mutation_in, updatedFields_contains = optionals.updatedFields_contains, updatedFields_contains_every = optionals.updatedFields_contains_every, updatedFields_contains_some = optionals.updatedFields_contains_some, node = optionals.node }


type alias PlanetSubscriptionFilterOptionalFields =
    { and : OptionalArgument (List PlanetSubscriptionFilter)
    , or : OptionalArgument (List PlanetSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument PlanetSubscriptionFilterNode
    }


{-| Type alias for the `PlanetSubscriptionFilter` attributes. Note that this type
needs to use the `PlanetSubscriptionFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PlanetSubscriptionFilterRaw =
    { and : OptionalArgument (List PlanetSubscriptionFilter)
    , or : OptionalArgument (List PlanetSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument PlanetSubscriptionFilterNode
    }


{-| Type for the PlanetSubscriptionFilter input object.
-}
type PlanetSubscriptionFilter
    = PlanetSubscriptionFilter PlanetSubscriptionFilterRaw


{-| Encode a PlanetSubscriptionFilter into a value that can be used as an argument.
-}
encodePlanetSubscriptionFilter : PlanetSubscriptionFilter -> Value
encodePlanetSubscriptionFilter (PlanetSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodePlanetSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodePlanetSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum Api.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodePlanetSubscriptionFilterNode |> Encode.optional input.node ) ]


buildPlanetSubscriptionFilterNode : (PlanetSubscriptionFilterNodeOptionalFields -> PlanetSubscriptionFilterNodeOptionalFields) -> PlanetSubscriptionFilterNode
buildPlanetSubscriptionFilterNode fillOptionals =
    let
        optionals =
            fillOptionals
                { createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, diameter = Absent, diameter_not = Absent, diameter_in = Absent, diameter_not_in = Absent, diameter_lt = Absent, diameter_lte = Absent, diameter_gt = Absent, diameter_gte = Absent, gravity = Absent, gravity_not = Absent, gravity_in = Absent, gravity_not_in = Absent, gravity_lt = Absent, gravity_lte = Absent, gravity_gt = Absent, gravity_gte = Absent, gravity_contains = Absent, gravity_not_contains = Absent, gravity_starts_with = Absent, gravity_not_starts_with = Absent, gravity_ends_with = Absent, gravity_not_ends_with = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, orbitalPeriod = Absent, orbitalPeriod_not = Absent, orbitalPeriod_in = Absent, orbitalPeriod_not_in = Absent, orbitalPeriod_lt = Absent, orbitalPeriod_lte = Absent, orbitalPeriod_gt = Absent, orbitalPeriod_gte = Absent, population = Absent, population_not = Absent, population_in = Absent, population_not_in = Absent, population_lt = Absent, population_lte = Absent, population_gt = Absent, population_gte = Absent, rotationPeriod = Absent, rotationPeriod_not = Absent, rotationPeriod_in = Absent, rotationPeriod_not_in = Absent, rotationPeriod_lt = Absent, rotationPeriod_lte = Absent, rotationPeriod_gt = Absent, rotationPeriod_gte = Absent, surfaceWater = Absent, surfaceWater_not = Absent, surfaceWater_in = Absent, surfaceWater_not_in = Absent, surfaceWater_lt = Absent, surfaceWater_lte = Absent, surfaceWater_gt = Absent, surfaceWater_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, residents_every = Absent, residents_some = Absent, residents_none = Absent }
    in
    PlanetSubscriptionFilterNode { createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, diameter = optionals.diameter, diameter_not = optionals.diameter_not, diameter_in = optionals.diameter_in, diameter_not_in = optionals.diameter_not_in, diameter_lt = optionals.diameter_lt, diameter_lte = optionals.diameter_lte, diameter_gt = optionals.diameter_gt, diameter_gte = optionals.diameter_gte, gravity = optionals.gravity, gravity_not = optionals.gravity_not, gravity_in = optionals.gravity_in, gravity_not_in = optionals.gravity_not_in, gravity_lt = optionals.gravity_lt, gravity_lte = optionals.gravity_lte, gravity_gt = optionals.gravity_gt, gravity_gte = optionals.gravity_gte, gravity_contains = optionals.gravity_contains, gravity_not_contains = optionals.gravity_not_contains, gravity_starts_with = optionals.gravity_starts_with, gravity_not_starts_with = optionals.gravity_not_starts_with, gravity_ends_with = optionals.gravity_ends_with, gravity_not_ends_with = optionals.gravity_not_ends_with, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, orbitalPeriod = optionals.orbitalPeriod, orbitalPeriod_not = optionals.orbitalPeriod_not, orbitalPeriod_in = optionals.orbitalPeriod_in, orbitalPeriod_not_in = optionals.orbitalPeriod_not_in, orbitalPeriod_lt = optionals.orbitalPeriod_lt, orbitalPeriod_lte = optionals.orbitalPeriod_lte, orbitalPeriod_gt = optionals.orbitalPeriod_gt, orbitalPeriod_gte = optionals.orbitalPeriod_gte, population = optionals.population, population_not = optionals.population_not, population_in = optionals.population_in, population_not_in = optionals.population_not_in, population_lt = optionals.population_lt, population_lte = optionals.population_lte, population_gt = optionals.population_gt, population_gte = optionals.population_gte, rotationPeriod = optionals.rotationPeriod, rotationPeriod_not = optionals.rotationPeriod_not, rotationPeriod_in = optionals.rotationPeriod_in, rotationPeriod_not_in = optionals.rotationPeriod_not_in, rotationPeriod_lt = optionals.rotationPeriod_lt, rotationPeriod_lte = optionals.rotationPeriod_lte, rotationPeriod_gt = optionals.rotationPeriod_gt, rotationPeriod_gte = optionals.rotationPeriod_gte, surfaceWater = optionals.surfaceWater, surfaceWater_not = optionals.surfaceWater_not, surfaceWater_in = optionals.surfaceWater_in, surfaceWater_not_in = optionals.surfaceWater_not_in, surfaceWater_lt = optionals.surfaceWater_lt, surfaceWater_lte = optionals.surfaceWater_lte, surfaceWater_gt = optionals.surfaceWater_gt, surfaceWater_gte = optionals.surfaceWater_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, residents_every = optionals.residents_every, residents_some = optionals.residents_some, residents_none = optionals.residents_none }


type alias PlanetSubscriptionFilterNodeOptionalFields =
    { createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , diameter : OptionalArgument Int
    , diameter_not : OptionalArgument Int
    , diameter_in : OptionalArgument (List Int)
    , diameter_not_in : OptionalArgument (List Int)
    , diameter_lt : OptionalArgument Int
    , diameter_lte : OptionalArgument Int
    , diameter_gt : OptionalArgument Int
    , diameter_gte : OptionalArgument Int
    , gravity : OptionalArgument String
    , gravity_not : OptionalArgument String
    , gravity_in : OptionalArgument (List String)
    , gravity_not_in : OptionalArgument (List String)
    , gravity_lt : OptionalArgument String
    , gravity_lte : OptionalArgument String
    , gravity_gt : OptionalArgument String
    , gravity_gte : OptionalArgument String
    , gravity_contains : OptionalArgument String
    , gravity_not_contains : OptionalArgument String
    , gravity_starts_with : OptionalArgument String
    , gravity_not_starts_with : OptionalArgument String
    , gravity_ends_with : OptionalArgument String
    , gravity_not_ends_with : OptionalArgument String
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , orbitalPeriod : OptionalArgument Int
    , orbitalPeriod_not : OptionalArgument Int
    , orbitalPeriod_in : OptionalArgument (List Int)
    , orbitalPeriod_not_in : OptionalArgument (List Int)
    , orbitalPeriod_lt : OptionalArgument Int
    , orbitalPeriod_lte : OptionalArgument Int
    , orbitalPeriod_gt : OptionalArgument Int
    , orbitalPeriod_gte : OptionalArgument Int
    , population : OptionalArgument Float
    , population_not : OptionalArgument Float
    , population_in : OptionalArgument (List Float)
    , population_not_in : OptionalArgument (List Float)
    , population_lt : OptionalArgument Float
    , population_lte : OptionalArgument Float
    , population_gt : OptionalArgument Float
    , population_gte : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , rotationPeriod_not : OptionalArgument Int
    , rotationPeriod_in : OptionalArgument (List Int)
    , rotationPeriod_not_in : OptionalArgument (List Int)
    , rotationPeriod_lt : OptionalArgument Int
    , rotationPeriod_lte : OptionalArgument Int
    , rotationPeriod_gt : OptionalArgument Int
    , rotationPeriod_gte : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , surfaceWater_not : OptionalArgument Float
    , surfaceWater_in : OptionalArgument (List Float)
    , surfaceWater_not_in : OptionalArgument (List Float)
    , surfaceWater_lt : OptionalArgument Float
    , surfaceWater_lte : OptionalArgument Float
    , surfaceWater_gt : OptionalArgument Float
    , surfaceWater_gte : OptionalArgument Float
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , residents_every : OptionalArgument PersonFilter
    , residents_some : OptionalArgument PersonFilter
    , residents_none : OptionalArgument PersonFilter
    }


{-| Type alias for the `PlanetSubscriptionFilterNode` attributes. Note that this type
needs to use the `PlanetSubscriptionFilterNode` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PlanetSubscriptionFilterNodeRaw =
    { createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , diameter : OptionalArgument Int
    , diameter_not : OptionalArgument Int
    , diameter_in : OptionalArgument (List Int)
    , diameter_not_in : OptionalArgument (List Int)
    , diameter_lt : OptionalArgument Int
    , diameter_lte : OptionalArgument Int
    , diameter_gt : OptionalArgument Int
    , diameter_gte : OptionalArgument Int
    , gravity : OptionalArgument String
    , gravity_not : OptionalArgument String
    , gravity_in : OptionalArgument (List String)
    , gravity_not_in : OptionalArgument (List String)
    , gravity_lt : OptionalArgument String
    , gravity_lte : OptionalArgument String
    , gravity_gt : OptionalArgument String
    , gravity_gte : OptionalArgument String
    , gravity_contains : OptionalArgument String
    , gravity_not_contains : OptionalArgument String
    , gravity_starts_with : OptionalArgument String
    , gravity_not_starts_with : OptionalArgument String
    , gravity_ends_with : OptionalArgument String
    , gravity_not_ends_with : OptionalArgument String
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , orbitalPeriod : OptionalArgument Int
    , orbitalPeriod_not : OptionalArgument Int
    , orbitalPeriod_in : OptionalArgument (List Int)
    , orbitalPeriod_not_in : OptionalArgument (List Int)
    , orbitalPeriod_lt : OptionalArgument Int
    , orbitalPeriod_lte : OptionalArgument Int
    , orbitalPeriod_gt : OptionalArgument Int
    , orbitalPeriod_gte : OptionalArgument Int
    , population : OptionalArgument Float
    , population_not : OptionalArgument Float
    , population_in : OptionalArgument (List Float)
    , population_not_in : OptionalArgument (List Float)
    , population_lt : OptionalArgument Float
    , population_lte : OptionalArgument Float
    , population_gt : OptionalArgument Float
    , population_gte : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , rotationPeriod_not : OptionalArgument Int
    , rotationPeriod_in : OptionalArgument (List Int)
    , rotationPeriod_not_in : OptionalArgument (List Int)
    , rotationPeriod_lt : OptionalArgument Int
    , rotationPeriod_lte : OptionalArgument Int
    , rotationPeriod_gt : OptionalArgument Int
    , rotationPeriod_gte : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , surfaceWater_not : OptionalArgument Float
    , surfaceWater_in : OptionalArgument (List Float)
    , surfaceWater_not_in : OptionalArgument (List Float)
    , surfaceWater_lt : OptionalArgument Float
    , surfaceWater_lte : OptionalArgument Float
    , surfaceWater_gt : OptionalArgument Float
    , surfaceWater_gte : OptionalArgument Float
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , residents_every : OptionalArgument PersonFilter
    , residents_some : OptionalArgument PersonFilter
    , residents_none : OptionalArgument PersonFilter
    }


{-| Type for the PlanetSubscriptionFilterNode input object.
-}
type PlanetSubscriptionFilterNode
    = PlanetSubscriptionFilterNode PlanetSubscriptionFilterNodeRaw


{-| Encode a PlanetSubscriptionFilterNode into a value that can be used as an argument.
-}
encodePlanetSubscriptionFilterNode : PlanetSubscriptionFilterNode -> Value
encodePlanetSubscriptionFilterNode (PlanetSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "diameter", Encode.int |> Encode.optional input.diameter ), ( "diameter_not", Encode.int |> Encode.optional input.diameter_not ), ( "diameter_in", (Encode.int |> Encode.list) |> Encode.optional input.diameter_in ), ( "diameter_not_in", (Encode.int |> Encode.list) |> Encode.optional input.diameter_not_in ), ( "diameter_lt", Encode.int |> Encode.optional input.diameter_lt ), ( "diameter_lte", Encode.int |> Encode.optional input.diameter_lte ), ( "diameter_gt", Encode.int |> Encode.optional input.diameter_gt ), ( "diameter_gte", Encode.int |> Encode.optional input.diameter_gte ), ( "gravity", Encode.string |> Encode.optional input.gravity ), ( "gravity_not", Encode.string |> Encode.optional input.gravity_not ), ( "gravity_in", (Encode.string |> Encode.list) |> Encode.optional input.gravity_in ), ( "gravity_not_in", (Encode.string |> Encode.list) |> Encode.optional input.gravity_not_in ), ( "gravity_lt", Encode.string |> Encode.optional input.gravity_lt ), ( "gravity_lte", Encode.string |> Encode.optional input.gravity_lte ), ( "gravity_gt", Encode.string |> Encode.optional input.gravity_gt ), ( "gravity_gte", Encode.string |> Encode.optional input.gravity_gte ), ( "gravity_contains", Encode.string |> Encode.optional input.gravity_contains ), ( "gravity_not_contains", Encode.string |> Encode.optional input.gravity_not_contains ), ( "gravity_starts_with", Encode.string |> Encode.optional input.gravity_starts_with ), ( "gravity_not_starts_with", Encode.string |> Encode.optional input.gravity_not_starts_with ), ( "gravity_ends_with", Encode.string |> Encode.optional input.gravity_ends_with ), ( "gravity_not_ends_with", Encode.string |> Encode.optional input.gravity_not_ends_with ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "orbitalPeriod", Encode.int |> Encode.optional input.orbitalPeriod ), ( "orbitalPeriod_not", Encode.int |> Encode.optional input.orbitalPeriod_not ), ( "orbitalPeriod_in", (Encode.int |> Encode.list) |> Encode.optional input.orbitalPeriod_in ), ( "orbitalPeriod_not_in", (Encode.int |> Encode.list) |> Encode.optional input.orbitalPeriod_not_in ), ( "orbitalPeriod_lt", Encode.int |> Encode.optional input.orbitalPeriod_lt ), ( "orbitalPeriod_lte", Encode.int |> Encode.optional input.orbitalPeriod_lte ), ( "orbitalPeriod_gt", Encode.int |> Encode.optional input.orbitalPeriod_gt ), ( "orbitalPeriod_gte", Encode.int |> Encode.optional input.orbitalPeriod_gte ), ( "population", Encode.float |> Encode.optional input.population ), ( "population_not", Encode.float |> Encode.optional input.population_not ), ( "population_in", (Encode.float |> Encode.list) |> Encode.optional input.population_in ), ( "population_not_in", (Encode.float |> Encode.list) |> Encode.optional input.population_not_in ), ( "population_lt", Encode.float |> Encode.optional input.population_lt ), ( "population_lte", Encode.float |> Encode.optional input.population_lte ), ( "population_gt", Encode.float |> Encode.optional input.population_gt ), ( "population_gte", Encode.float |> Encode.optional input.population_gte ), ( "rotationPeriod", Encode.int |> Encode.optional input.rotationPeriod ), ( "rotationPeriod_not", Encode.int |> Encode.optional input.rotationPeriod_not ), ( "rotationPeriod_in", (Encode.int |> Encode.list) |> Encode.optional input.rotationPeriod_in ), ( "rotationPeriod_not_in", (Encode.int |> Encode.list) |> Encode.optional input.rotationPeriod_not_in ), ( "rotationPeriod_lt", Encode.int |> Encode.optional input.rotationPeriod_lt ), ( "rotationPeriod_lte", Encode.int |> Encode.optional input.rotationPeriod_lte ), ( "rotationPeriod_gt", Encode.int |> Encode.optional input.rotationPeriod_gt ), ( "rotationPeriod_gte", Encode.int |> Encode.optional input.rotationPeriod_gte ), ( "surfaceWater", Encode.float |> Encode.optional input.surfaceWater ), ( "surfaceWater_not", Encode.float |> Encode.optional input.surfaceWater_not ), ( "surfaceWater_in", (Encode.float |> Encode.list) |> Encode.optional input.surfaceWater_in ), ( "surfaceWater_not_in", (Encode.float |> Encode.list) |> Encode.optional input.surfaceWater_not_in ), ( "surfaceWater_lt", Encode.float |> Encode.optional input.surfaceWater_lt ), ( "surfaceWater_lte", Encode.float |> Encode.optional input.surfaceWater_lte ), ( "surfaceWater_gt", Encode.float |> Encode.optional input.surfaceWater_gt ), ( "surfaceWater_gte", Encode.float |> Encode.optional input.surfaceWater_gte ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "residents_every", encodePersonFilter |> Encode.optional input.residents_every ), ( "residents_some", encodePersonFilter |> Encode.optional input.residents_some ), ( "residents_none", encodePersonFilter |> Encode.optional input.residents_none ) ]


buildPlanetfilmsFilm : PlanetfilmsFilmRequiredFields -> (PlanetfilmsFilmOptionalFields -> PlanetfilmsFilmOptionalFields) -> PlanetfilmsFilm
buildPlanetfilmsFilm required fillOptionals =
    let
        optionals =
            fillOptionals
                { director = Absent, isPublished = Absent, openingCrawl = Absent, producers = Absent, releaseDate = Absent, charactersIds = Absent, characters = Absent, planetsIds = Absent, planets = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    PlanetfilmsFilm { director = optionals.director, episodeId = required.episodeId, isPublished = optionals.isPublished, openingCrawl = optionals.openingCrawl, producers = optionals.producers, releaseDate = optionals.releaseDate, title = required.title, charactersIds = optionals.charactersIds, characters = optionals.characters, planetsIds = optionals.planetsIds, planets = optionals.planets, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias PlanetfilmsFilmRequiredFields =
    { episodeId : Int
    , title : String
    }


type alias PlanetfilmsFilmOptionalFields =
    { director : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type alias for the `PlanetfilmsFilm` attributes. Note that this type
needs to use the `PlanetfilmsFilm` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PlanetfilmsFilmRaw =
    { director : OptionalArgument String
    , episodeId : Int
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , title : String
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type for the PlanetfilmsFilm input object.
-}
type PlanetfilmsFilm
    = PlanetfilmsFilm PlanetfilmsFilmRaw


{-| Encode a PlanetfilmsFilm into a value that can be used as an argument.
-}
encodePlanetfilmsFilm : PlanetfilmsFilm -> Value
encodePlanetfilmsFilm (PlanetfilmsFilm input) =
    Encode.maybeObject
        [ ( "director", Encode.string |> Encode.optional input.director ), ( "episodeId", Encode.int input.episodeId |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "producers", (Encode.string |> Encode.list) |> Encode.optional input.producers ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "title", Encode.string input.title |> Just ), ( "charactersIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.charactersIds ), ( "characters", (encodeFilmcharactersPerson |> Encode.list) |> Encode.optional input.characters ), ( "planetsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.planetsIds ), ( "planets", (encodeFilmplanetsPlanet |> Encode.list) |> Encode.optional input.planets ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodeFilmspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodeFilmstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodeFilmvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildPlanetresidentsPerson : PlanetresidentsPersonRequiredFields -> (PlanetresidentsPersonOptionalFields -> PlanetresidentsPersonOptionalFields) -> PlanetresidentsPerson
buildPlanetresidentsPerson required fillOptionals =
    let
        optionals =
            fillOptionals
                { birthYear = Absent, eyeColor = Absent, gender = Absent, hairColor = Absent, height = Absent, isPublished = Absent, mass = Absent, skinColor = Absent, filmsIds = Absent, films = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    PlanetresidentsPerson { birthYear = optionals.birthYear, eyeColor = optionals.eyeColor, gender = optionals.gender, hairColor = optionals.hairColor, height = optionals.height, isPublished = optionals.isPublished, mass = optionals.mass, name = required.name, skinColor = optionals.skinColor, filmsIds = optionals.filmsIds, films = optionals.films, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias PlanetresidentsPersonRequiredFields =
    { name : String }


type alias PlanetresidentsPersonOptionalFields =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type alias for the `PlanetresidentsPerson` attributes. Note that this type
needs to use the `PlanetresidentsPerson` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias PlanetresidentsPersonRaw =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type for the PlanetresidentsPerson input object.
-}
type PlanetresidentsPerson
    = PlanetresidentsPerson PlanetresidentsPersonRaw


{-| Encode a PlanetresidentsPerson into a value that can be used as an argument.
-}
encodePlanetresidentsPerson : PlanetresidentsPerson -> Value
encodePlanetresidentsPerson (PlanetresidentsPerson input) =
    Encode.maybeObject
        [ ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "eyeColor", (Encode.enum Api.Enum.PersonEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "hairColor", (Encode.enum Api.Enum.PersonHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "height", Encode.int |> Encode.optional input.height ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.PersonSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePersonfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodePersonspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodePersonstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodePersonvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildSpeciesFilter : (SpeciesFilterOptionalFields -> SpeciesFilterOptionalFields) -> SpeciesFilter
buildSpeciesFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, averageHeight = Absent, averageHeight_not = Absent, averageHeight_in = Absent, averageHeight_not_in = Absent, averageHeight_lt = Absent, averageHeight_lte = Absent, averageHeight_gt = Absent, averageHeight_gte = Absent, averageLifespan = Absent, averageLifespan_not = Absent, averageLifespan_in = Absent, averageLifespan_not_in = Absent, averageLifespan_lt = Absent, averageLifespan_lte = Absent, averageLifespan_gt = Absent, averageLifespan_gte = Absent, classification = Absent, classification_not = Absent, classification_in = Absent, classification_not_in = Absent, classification_lt = Absent, classification_lte = Absent, classification_gt = Absent, classification_gte = Absent, classification_contains = Absent, classification_not_contains = Absent, classification_starts_with = Absent, classification_not_starts_with = Absent, classification_ends_with = Absent, classification_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, designation = Absent, designation_not = Absent, designation_in = Absent, designation_not_in = Absent, designation_lt = Absent, designation_lte = Absent, designation_gt = Absent, designation_gte = Absent, designation_contains = Absent, designation_not_contains = Absent, designation_starts_with = Absent, designation_not_starts_with = Absent, designation_ends_with = Absent, designation_not_ends_with = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, language = Absent, language_not = Absent, language_in = Absent, language_not_in = Absent, language_lt = Absent, language_lte = Absent, language_gt = Absent, language_gte = Absent, language_contains = Absent, language_not_contains = Absent, language_starts_with = Absent, language_not_starts_with = Absent, language_ends_with = Absent, language_not_ends_with = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, people_every = Absent, people_some = Absent, people_none = Absent }
    in
    SpeciesFilter { and = optionals.and, or = optionals.or, averageHeight = optionals.averageHeight, averageHeight_not = optionals.averageHeight_not, averageHeight_in = optionals.averageHeight_in, averageHeight_not_in = optionals.averageHeight_not_in, averageHeight_lt = optionals.averageHeight_lt, averageHeight_lte = optionals.averageHeight_lte, averageHeight_gt = optionals.averageHeight_gt, averageHeight_gte = optionals.averageHeight_gte, averageLifespan = optionals.averageLifespan, averageLifespan_not = optionals.averageLifespan_not, averageLifespan_in = optionals.averageLifespan_in, averageLifespan_not_in = optionals.averageLifespan_not_in, averageLifespan_lt = optionals.averageLifespan_lt, averageLifespan_lte = optionals.averageLifespan_lte, averageLifespan_gt = optionals.averageLifespan_gt, averageLifespan_gte = optionals.averageLifespan_gte, classification = optionals.classification, classification_not = optionals.classification_not, classification_in = optionals.classification_in, classification_not_in = optionals.classification_not_in, classification_lt = optionals.classification_lt, classification_lte = optionals.classification_lte, classification_gt = optionals.classification_gt, classification_gte = optionals.classification_gte, classification_contains = optionals.classification_contains, classification_not_contains = optionals.classification_not_contains, classification_starts_with = optionals.classification_starts_with, classification_not_starts_with = optionals.classification_not_starts_with, classification_ends_with = optionals.classification_ends_with, classification_not_ends_with = optionals.classification_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, designation = optionals.designation, designation_not = optionals.designation_not, designation_in = optionals.designation_in, designation_not_in = optionals.designation_not_in, designation_lt = optionals.designation_lt, designation_lte = optionals.designation_lte, designation_gt = optionals.designation_gt, designation_gte = optionals.designation_gte, designation_contains = optionals.designation_contains, designation_not_contains = optionals.designation_not_contains, designation_starts_with = optionals.designation_starts_with, designation_not_starts_with = optionals.designation_not_starts_with, designation_ends_with = optionals.designation_ends_with, designation_not_ends_with = optionals.designation_not_ends_with, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, language = optionals.language, language_not = optionals.language_not, language_in = optionals.language_in, language_not_in = optionals.language_not_in, language_lt = optionals.language_lt, language_lte = optionals.language_lte, language_gt = optionals.language_gt, language_gte = optionals.language_gte, language_contains = optionals.language_contains, language_not_contains = optionals.language_not_contains, language_starts_with = optionals.language_starts_with, language_not_starts_with = optionals.language_not_starts_with, language_ends_with = optionals.language_ends_with, language_not_ends_with = optionals.language_not_ends_with, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, people_every = optionals.people_every, people_some = optionals.people_some, people_none = optionals.people_none }


type alias SpeciesFilterOptionalFields =
    { and : OptionalArgument (List SpeciesFilter)
    , or : OptionalArgument (List SpeciesFilter)
    , averageHeight : OptionalArgument Int
    , averageHeight_not : OptionalArgument Int
    , averageHeight_in : OptionalArgument (List Int)
    , averageHeight_not_in : OptionalArgument (List Int)
    , averageHeight_lt : OptionalArgument Int
    , averageHeight_lte : OptionalArgument Int
    , averageHeight_gt : OptionalArgument Int
    , averageHeight_gte : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , averageLifespan_not : OptionalArgument Int
    , averageLifespan_in : OptionalArgument (List Int)
    , averageLifespan_not_in : OptionalArgument (List Int)
    , averageLifespan_lt : OptionalArgument Int
    , averageLifespan_lte : OptionalArgument Int
    , averageLifespan_gt : OptionalArgument Int
    , averageLifespan_gte : OptionalArgument Int
    , classification : OptionalArgument String
    , classification_not : OptionalArgument String
    , classification_in : OptionalArgument (List String)
    , classification_not_in : OptionalArgument (List String)
    , classification_lt : OptionalArgument String
    , classification_lte : OptionalArgument String
    , classification_gt : OptionalArgument String
    , classification_gte : OptionalArgument String
    , classification_contains : OptionalArgument String
    , classification_not_contains : OptionalArgument String
    , classification_starts_with : OptionalArgument String
    , classification_not_starts_with : OptionalArgument String
    , classification_ends_with : OptionalArgument String
    , classification_not_ends_with : OptionalArgument String
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , designation : OptionalArgument String
    , designation_not : OptionalArgument String
    , designation_in : OptionalArgument (List String)
    , designation_not_in : OptionalArgument (List String)
    , designation_lt : OptionalArgument String
    , designation_lte : OptionalArgument String
    , designation_gt : OptionalArgument String
    , designation_gte : OptionalArgument String
    , designation_contains : OptionalArgument String
    , designation_not_contains : OptionalArgument String
    , designation_starts_with : OptionalArgument String
    , designation_not_starts_with : OptionalArgument String
    , designation_ends_with : OptionalArgument String
    , designation_not_ends_with : OptionalArgument String
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , language : OptionalArgument String
    , language_not : OptionalArgument String
    , language_in : OptionalArgument (List String)
    , language_not_in : OptionalArgument (List String)
    , language_lt : OptionalArgument String
    , language_lte : OptionalArgument String
    , language_gt : OptionalArgument String
    , language_gte : OptionalArgument String
    , language_contains : OptionalArgument String
    , language_not_contains : OptionalArgument String
    , language_starts_with : OptionalArgument String
    , language_not_starts_with : OptionalArgument String
    , language_ends_with : OptionalArgument String
    , language_not_ends_with : OptionalArgument String
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , people_every : OptionalArgument PersonFilter
    , people_some : OptionalArgument PersonFilter
    , people_none : OptionalArgument PersonFilter
    }


{-| Type alias for the `SpeciesFilter` attributes. Note that this type
needs to use the `SpeciesFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias SpeciesFilterRaw =
    { and : OptionalArgument (List SpeciesFilter)
    , or : OptionalArgument (List SpeciesFilter)
    , averageHeight : OptionalArgument Int
    , averageHeight_not : OptionalArgument Int
    , averageHeight_in : OptionalArgument (List Int)
    , averageHeight_not_in : OptionalArgument (List Int)
    , averageHeight_lt : OptionalArgument Int
    , averageHeight_lte : OptionalArgument Int
    , averageHeight_gt : OptionalArgument Int
    , averageHeight_gte : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , averageLifespan_not : OptionalArgument Int
    , averageLifespan_in : OptionalArgument (List Int)
    , averageLifespan_not_in : OptionalArgument (List Int)
    , averageLifespan_lt : OptionalArgument Int
    , averageLifespan_lte : OptionalArgument Int
    , averageLifespan_gt : OptionalArgument Int
    , averageLifespan_gte : OptionalArgument Int
    , classification : OptionalArgument String
    , classification_not : OptionalArgument String
    , classification_in : OptionalArgument (List String)
    , classification_not_in : OptionalArgument (List String)
    , classification_lt : OptionalArgument String
    , classification_lte : OptionalArgument String
    , classification_gt : OptionalArgument String
    , classification_gte : OptionalArgument String
    , classification_contains : OptionalArgument String
    , classification_not_contains : OptionalArgument String
    , classification_starts_with : OptionalArgument String
    , classification_not_starts_with : OptionalArgument String
    , classification_ends_with : OptionalArgument String
    , classification_not_ends_with : OptionalArgument String
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , designation : OptionalArgument String
    , designation_not : OptionalArgument String
    , designation_in : OptionalArgument (List String)
    , designation_not_in : OptionalArgument (List String)
    , designation_lt : OptionalArgument String
    , designation_lte : OptionalArgument String
    , designation_gt : OptionalArgument String
    , designation_gte : OptionalArgument String
    , designation_contains : OptionalArgument String
    , designation_not_contains : OptionalArgument String
    , designation_starts_with : OptionalArgument String
    , designation_not_starts_with : OptionalArgument String
    , designation_ends_with : OptionalArgument String
    , designation_not_ends_with : OptionalArgument String
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , language : OptionalArgument String
    , language_not : OptionalArgument String
    , language_in : OptionalArgument (List String)
    , language_not_in : OptionalArgument (List String)
    , language_lt : OptionalArgument String
    , language_lte : OptionalArgument String
    , language_gt : OptionalArgument String
    , language_gte : OptionalArgument String
    , language_contains : OptionalArgument String
    , language_not_contains : OptionalArgument String
    , language_starts_with : OptionalArgument String
    , language_not_starts_with : OptionalArgument String
    , language_ends_with : OptionalArgument String
    , language_not_ends_with : OptionalArgument String
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , people_every : OptionalArgument PersonFilter
    , people_some : OptionalArgument PersonFilter
    , people_none : OptionalArgument PersonFilter
    }


{-| Type for the SpeciesFilter input object.
-}
type SpeciesFilter
    = SpeciesFilter SpeciesFilterRaw


{-| Encode a SpeciesFilter into a value that can be used as an argument.
-}
encodeSpeciesFilter : SpeciesFilter -> Value
encodeSpeciesFilter (SpeciesFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeSpeciesFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeSpeciesFilter |> Encode.list) |> Encode.optional input.or ), ( "averageHeight", Encode.int |> Encode.optional input.averageHeight ), ( "averageHeight_not", Encode.int |> Encode.optional input.averageHeight_not ), ( "averageHeight_in", (Encode.int |> Encode.list) |> Encode.optional input.averageHeight_in ), ( "averageHeight_not_in", (Encode.int |> Encode.list) |> Encode.optional input.averageHeight_not_in ), ( "averageHeight_lt", Encode.int |> Encode.optional input.averageHeight_lt ), ( "averageHeight_lte", Encode.int |> Encode.optional input.averageHeight_lte ), ( "averageHeight_gt", Encode.int |> Encode.optional input.averageHeight_gt ), ( "averageHeight_gte", Encode.int |> Encode.optional input.averageHeight_gte ), ( "averageLifespan", Encode.int |> Encode.optional input.averageLifespan ), ( "averageLifespan_not", Encode.int |> Encode.optional input.averageLifespan_not ), ( "averageLifespan_in", (Encode.int |> Encode.list) |> Encode.optional input.averageLifespan_in ), ( "averageLifespan_not_in", (Encode.int |> Encode.list) |> Encode.optional input.averageLifespan_not_in ), ( "averageLifespan_lt", Encode.int |> Encode.optional input.averageLifespan_lt ), ( "averageLifespan_lte", Encode.int |> Encode.optional input.averageLifespan_lte ), ( "averageLifespan_gt", Encode.int |> Encode.optional input.averageLifespan_gt ), ( "averageLifespan_gte", Encode.int |> Encode.optional input.averageLifespan_gte ), ( "classification", Encode.string |> Encode.optional input.classification ), ( "classification_not", Encode.string |> Encode.optional input.classification_not ), ( "classification_in", (Encode.string |> Encode.list) |> Encode.optional input.classification_in ), ( "classification_not_in", (Encode.string |> Encode.list) |> Encode.optional input.classification_not_in ), ( "classification_lt", Encode.string |> Encode.optional input.classification_lt ), ( "classification_lte", Encode.string |> Encode.optional input.classification_lte ), ( "classification_gt", Encode.string |> Encode.optional input.classification_gt ), ( "classification_gte", Encode.string |> Encode.optional input.classification_gte ), ( "classification_contains", Encode.string |> Encode.optional input.classification_contains ), ( "classification_not_contains", Encode.string |> Encode.optional input.classification_not_contains ), ( "classification_starts_with", Encode.string |> Encode.optional input.classification_starts_with ), ( "classification_not_starts_with", Encode.string |> Encode.optional input.classification_not_starts_with ), ( "classification_ends_with", Encode.string |> Encode.optional input.classification_ends_with ), ( "classification_not_ends_with", Encode.string |> Encode.optional input.classification_not_ends_with ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "designation", Encode.string |> Encode.optional input.designation ), ( "designation_not", Encode.string |> Encode.optional input.designation_not ), ( "designation_in", (Encode.string |> Encode.list) |> Encode.optional input.designation_in ), ( "designation_not_in", (Encode.string |> Encode.list) |> Encode.optional input.designation_not_in ), ( "designation_lt", Encode.string |> Encode.optional input.designation_lt ), ( "designation_lte", Encode.string |> Encode.optional input.designation_lte ), ( "designation_gt", Encode.string |> Encode.optional input.designation_gt ), ( "designation_gte", Encode.string |> Encode.optional input.designation_gte ), ( "designation_contains", Encode.string |> Encode.optional input.designation_contains ), ( "designation_not_contains", Encode.string |> Encode.optional input.designation_not_contains ), ( "designation_starts_with", Encode.string |> Encode.optional input.designation_starts_with ), ( "designation_not_starts_with", Encode.string |> Encode.optional input.designation_not_starts_with ), ( "designation_ends_with", Encode.string |> Encode.optional input.designation_ends_with ), ( "designation_not_ends_with", Encode.string |> Encode.optional input.designation_not_ends_with ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "language", Encode.string |> Encode.optional input.language ), ( "language_not", Encode.string |> Encode.optional input.language_not ), ( "language_in", (Encode.string |> Encode.list) |> Encode.optional input.language_in ), ( "language_not_in", (Encode.string |> Encode.list) |> Encode.optional input.language_not_in ), ( "language_lt", Encode.string |> Encode.optional input.language_lt ), ( "language_lte", Encode.string |> Encode.optional input.language_lte ), ( "language_gt", Encode.string |> Encode.optional input.language_gt ), ( "language_gte", Encode.string |> Encode.optional input.language_gte ), ( "language_contains", Encode.string |> Encode.optional input.language_contains ), ( "language_not_contains", Encode.string |> Encode.optional input.language_not_contains ), ( "language_starts_with", Encode.string |> Encode.optional input.language_starts_with ), ( "language_not_starts_with", Encode.string |> Encode.optional input.language_not_starts_with ), ( "language_ends_with", Encode.string |> Encode.optional input.language_ends_with ), ( "language_not_ends_with", Encode.string |> Encode.optional input.language_not_ends_with ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "people_every", encodePersonFilter |> Encode.optional input.people_every ), ( "people_some", encodePersonFilter |> Encode.optional input.people_some ), ( "people_none", encodePersonFilter |> Encode.optional input.people_none ) ]


buildSpeciesSubscriptionFilter : (SpeciesSubscriptionFilterOptionalFields -> SpeciesSubscriptionFilterOptionalFields) -> SpeciesSubscriptionFilter
buildSpeciesSubscriptionFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, mutation_in = Absent, updatedFields_contains = Absent, updatedFields_contains_every = Absent, updatedFields_contains_some = Absent, node = Absent }
    in
    SpeciesSubscriptionFilter { and = optionals.and, or = optionals.or, mutation_in = optionals.mutation_in, updatedFields_contains = optionals.updatedFields_contains, updatedFields_contains_every = optionals.updatedFields_contains_every, updatedFields_contains_some = optionals.updatedFields_contains_some, node = optionals.node }


type alias SpeciesSubscriptionFilterOptionalFields =
    { and : OptionalArgument (List SpeciesSubscriptionFilter)
    , or : OptionalArgument (List SpeciesSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument SpeciesSubscriptionFilterNode
    }


{-| Type alias for the `SpeciesSubscriptionFilter` attributes. Note that this type
needs to use the `SpeciesSubscriptionFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias SpeciesSubscriptionFilterRaw =
    { and : OptionalArgument (List SpeciesSubscriptionFilter)
    , or : OptionalArgument (List SpeciesSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument SpeciesSubscriptionFilterNode
    }


{-| Type for the SpeciesSubscriptionFilter input object.
-}
type SpeciesSubscriptionFilter
    = SpeciesSubscriptionFilter SpeciesSubscriptionFilterRaw


{-| Encode a SpeciesSubscriptionFilter into a value that can be used as an argument.
-}
encodeSpeciesSubscriptionFilter : SpeciesSubscriptionFilter -> Value
encodeSpeciesSubscriptionFilter (SpeciesSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeSpeciesSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeSpeciesSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum Api.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeSpeciesSubscriptionFilterNode |> Encode.optional input.node ) ]


buildSpeciesSubscriptionFilterNode : (SpeciesSubscriptionFilterNodeOptionalFields -> SpeciesSubscriptionFilterNodeOptionalFields) -> SpeciesSubscriptionFilterNode
buildSpeciesSubscriptionFilterNode fillOptionals =
    let
        optionals =
            fillOptionals
                { averageHeight = Absent, averageHeight_not = Absent, averageHeight_in = Absent, averageHeight_not_in = Absent, averageHeight_lt = Absent, averageHeight_lte = Absent, averageHeight_gt = Absent, averageHeight_gte = Absent, averageLifespan = Absent, averageLifespan_not = Absent, averageLifespan_in = Absent, averageLifespan_not_in = Absent, averageLifespan_lt = Absent, averageLifespan_lte = Absent, averageLifespan_gt = Absent, averageLifespan_gte = Absent, classification = Absent, classification_not = Absent, classification_in = Absent, classification_not_in = Absent, classification_lt = Absent, classification_lte = Absent, classification_gt = Absent, classification_gte = Absent, classification_contains = Absent, classification_not_contains = Absent, classification_starts_with = Absent, classification_not_starts_with = Absent, classification_ends_with = Absent, classification_not_ends_with = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, designation = Absent, designation_not = Absent, designation_in = Absent, designation_not_in = Absent, designation_lt = Absent, designation_lte = Absent, designation_gt = Absent, designation_gte = Absent, designation_contains = Absent, designation_not_contains = Absent, designation_starts_with = Absent, designation_not_starts_with = Absent, designation_ends_with = Absent, designation_not_ends_with = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, language = Absent, language_not = Absent, language_in = Absent, language_not_in = Absent, language_lt = Absent, language_lte = Absent, language_gt = Absent, language_gte = Absent, language_contains = Absent, language_not_contains = Absent, language_starts_with = Absent, language_not_starts_with = Absent, language_ends_with = Absent, language_not_ends_with = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, people_every = Absent, people_some = Absent, people_none = Absent }
    in
    SpeciesSubscriptionFilterNode { averageHeight = optionals.averageHeight, averageHeight_not = optionals.averageHeight_not, averageHeight_in = optionals.averageHeight_in, averageHeight_not_in = optionals.averageHeight_not_in, averageHeight_lt = optionals.averageHeight_lt, averageHeight_lte = optionals.averageHeight_lte, averageHeight_gt = optionals.averageHeight_gt, averageHeight_gte = optionals.averageHeight_gte, averageLifespan = optionals.averageLifespan, averageLifespan_not = optionals.averageLifespan_not, averageLifespan_in = optionals.averageLifespan_in, averageLifespan_not_in = optionals.averageLifespan_not_in, averageLifespan_lt = optionals.averageLifespan_lt, averageLifespan_lte = optionals.averageLifespan_lte, averageLifespan_gt = optionals.averageLifespan_gt, averageLifespan_gte = optionals.averageLifespan_gte, classification = optionals.classification, classification_not = optionals.classification_not, classification_in = optionals.classification_in, classification_not_in = optionals.classification_not_in, classification_lt = optionals.classification_lt, classification_lte = optionals.classification_lte, classification_gt = optionals.classification_gt, classification_gte = optionals.classification_gte, classification_contains = optionals.classification_contains, classification_not_contains = optionals.classification_not_contains, classification_starts_with = optionals.classification_starts_with, classification_not_starts_with = optionals.classification_not_starts_with, classification_ends_with = optionals.classification_ends_with, classification_not_ends_with = optionals.classification_not_ends_with, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, designation = optionals.designation, designation_not = optionals.designation_not, designation_in = optionals.designation_in, designation_not_in = optionals.designation_not_in, designation_lt = optionals.designation_lt, designation_lte = optionals.designation_lte, designation_gt = optionals.designation_gt, designation_gte = optionals.designation_gte, designation_contains = optionals.designation_contains, designation_not_contains = optionals.designation_not_contains, designation_starts_with = optionals.designation_starts_with, designation_not_starts_with = optionals.designation_not_starts_with, designation_ends_with = optionals.designation_ends_with, designation_not_ends_with = optionals.designation_not_ends_with, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, language = optionals.language, language_not = optionals.language_not, language_in = optionals.language_in, language_not_in = optionals.language_not_in, language_lt = optionals.language_lt, language_lte = optionals.language_lte, language_gt = optionals.language_gt, language_gte = optionals.language_gte, language_contains = optionals.language_contains, language_not_contains = optionals.language_not_contains, language_starts_with = optionals.language_starts_with, language_not_starts_with = optionals.language_not_starts_with, language_ends_with = optionals.language_ends_with, language_not_ends_with = optionals.language_not_ends_with, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, people_every = optionals.people_every, people_some = optionals.people_some, people_none = optionals.people_none }


type alias SpeciesSubscriptionFilterNodeOptionalFields =
    { averageHeight : OptionalArgument Int
    , averageHeight_not : OptionalArgument Int
    , averageHeight_in : OptionalArgument (List Int)
    , averageHeight_not_in : OptionalArgument (List Int)
    , averageHeight_lt : OptionalArgument Int
    , averageHeight_lte : OptionalArgument Int
    , averageHeight_gt : OptionalArgument Int
    , averageHeight_gte : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , averageLifespan_not : OptionalArgument Int
    , averageLifespan_in : OptionalArgument (List Int)
    , averageLifespan_not_in : OptionalArgument (List Int)
    , averageLifespan_lt : OptionalArgument Int
    , averageLifespan_lte : OptionalArgument Int
    , averageLifespan_gt : OptionalArgument Int
    , averageLifespan_gte : OptionalArgument Int
    , classification : OptionalArgument String
    , classification_not : OptionalArgument String
    , classification_in : OptionalArgument (List String)
    , classification_not_in : OptionalArgument (List String)
    , classification_lt : OptionalArgument String
    , classification_lte : OptionalArgument String
    , classification_gt : OptionalArgument String
    , classification_gte : OptionalArgument String
    , classification_contains : OptionalArgument String
    , classification_not_contains : OptionalArgument String
    , classification_starts_with : OptionalArgument String
    , classification_not_starts_with : OptionalArgument String
    , classification_ends_with : OptionalArgument String
    , classification_not_ends_with : OptionalArgument String
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , designation : OptionalArgument String
    , designation_not : OptionalArgument String
    , designation_in : OptionalArgument (List String)
    , designation_not_in : OptionalArgument (List String)
    , designation_lt : OptionalArgument String
    , designation_lte : OptionalArgument String
    , designation_gt : OptionalArgument String
    , designation_gte : OptionalArgument String
    , designation_contains : OptionalArgument String
    , designation_not_contains : OptionalArgument String
    , designation_starts_with : OptionalArgument String
    , designation_not_starts_with : OptionalArgument String
    , designation_ends_with : OptionalArgument String
    , designation_not_ends_with : OptionalArgument String
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , language : OptionalArgument String
    , language_not : OptionalArgument String
    , language_in : OptionalArgument (List String)
    , language_not_in : OptionalArgument (List String)
    , language_lt : OptionalArgument String
    , language_lte : OptionalArgument String
    , language_gt : OptionalArgument String
    , language_gte : OptionalArgument String
    , language_contains : OptionalArgument String
    , language_not_contains : OptionalArgument String
    , language_starts_with : OptionalArgument String
    , language_not_starts_with : OptionalArgument String
    , language_ends_with : OptionalArgument String
    , language_not_ends_with : OptionalArgument String
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , people_every : OptionalArgument PersonFilter
    , people_some : OptionalArgument PersonFilter
    , people_none : OptionalArgument PersonFilter
    }


{-| Type alias for the `SpeciesSubscriptionFilterNode` attributes. Note that this type
needs to use the `SpeciesSubscriptionFilterNode` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias SpeciesSubscriptionFilterNodeRaw =
    { averageHeight : OptionalArgument Int
    , averageHeight_not : OptionalArgument Int
    , averageHeight_in : OptionalArgument (List Int)
    , averageHeight_not_in : OptionalArgument (List Int)
    , averageHeight_lt : OptionalArgument Int
    , averageHeight_lte : OptionalArgument Int
    , averageHeight_gt : OptionalArgument Int
    , averageHeight_gte : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , averageLifespan_not : OptionalArgument Int
    , averageLifespan_in : OptionalArgument (List Int)
    , averageLifespan_not_in : OptionalArgument (List Int)
    , averageLifespan_lt : OptionalArgument Int
    , averageLifespan_lte : OptionalArgument Int
    , averageLifespan_gt : OptionalArgument Int
    , averageLifespan_gte : OptionalArgument Int
    , classification : OptionalArgument String
    , classification_not : OptionalArgument String
    , classification_in : OptionalArgument (List String)
    , classification_not_in : OptionalArgument (List String)
    , classification_lt : OptionalArgument String
    , classification_lte : OptionalArgument String
    , classification_gt : OptionalArgument String
    , classification_gte : OptionalArgument String
    , classification_contains : OptionalArgument String
    , classification_not_contains : OptionalArgument String
    , classification_starts_with : OptionalArgument String
    , classification_not_starts_with : OptionalArgument String
    , classification_ends_with : OptionalArgument String
    , classification_not_ends_with : OptionalArgument String
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , designation : OptionalArgument String
    , designation_not : OptionalArgument String
    , designation_in : OptionalArgument (List String)
    , designation_not_in : OptionalArgument (List String)
    , designation_lt : OptionalArgument String
    , designation_lte : OptionalArgument String
    , designation_gt : OptionalArgument String
    , designation_gte : OptionalArgument String
    , designation_contains : OptionalArgument String
    , designation_not_contains : OptionalArgument String
    , designation_starts_with : OptionalArgument String
    , designation_not_starts_with : OptionalArgument String
    , designation_ends_with : OptionalArgument String
    , designation_not_ends_with : OptionalArgument String
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , language : OptionalArgument String
    , language_not : OptionalArgument String
    , language_in : OptionalArgument (List String)
    , language_not_in : OptionalArgument (List String)
    , language_lt : OptionalArgument String
    , language_lte : OptionalArgument String
    , language_gt : OptionalArgument String
    , language_gte : OptionalArgument String
    , language_contains : OptionalArgument String
    , language_not_contains : OptionalArgument String
    , language_starts_with : OptionalArgument String
    , language_not_starts_with : OptionalArgument String
    , language_ends_with : OptionalArgument String
    , language_not_ends_with : OptionalArgument String
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , people_every : OptionalArgument PersonFilter
    , people_some : OptionalArgument PersonFilter
    , people_none : OptionalArgument PersonFilter
    }


{-| Type for the SpeciesSubscriptionFilterNode input object.
-}
type SpeciesSubscriptionFilterNode
    = SpeciesSubscriptionFilterNode SpeciesSubscriptionFilterNodeRaw


{-| Encode a SpeciesSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeSpeciesSubscriptionFilterNode : SpeciesSubscriptionFilterNode -> Value
encodeSpeciesSubscriptionFilterNode (SpeciesSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "averageHeight", Encode.int |> Encode.optional input.averageHeight ), ( "averageHeight_not", Encode.int |> Encode.optional input.averageHeight_not ), ( "averageHeight_in", (Encode.int |> Encode.list) |> Encode.optional input.averageHeight_in ), ( "averageHeight_not_in", (Encode.int |> Encode.list) |> Encode.optional input.averageHeight_not_in ), ( "averageHeight_lt", Encode.int |> Encode.optional input.averageHeight_lt ), ( "averageHeight_lte", Encode.int |> Encode.optional input.averageHeight_lte ), ( "averageHeight_gt", Encode.int |> Encode.optional input.averageHeight_gt ), ( "averageHeight_gte", Encode.int |> Encode.optional input.averageHeight_gte ), ( "averageLifespan", Encode.int |> Encode.optional input.averageLifespan ), ( "averageLifespan_not", Encode.int |> Encode.optional input.averageLifespan_not ), ( "averageLifespan_in", (Encode.int |> Encode.list) |> Encode.optional input.averageLifespan_in ), ( "averageLifespan_not_in", (Encode.int |> Encode.list) |> Encode.optional input.averageLifespan_not_in ), ( "averageLifespan_lt", Encode.int |> Encode.optional input.averageLifespan_lt ), ( "averageLifespan_lte", Encode.int |> Encode.optional input.averageLifespan_lte ), ( "averageLifespan_gt", Encode.int |> Encode.optional input.averageLifespan_gt ), ( "averageLifespan_gte", Encode.int |> Encode.optional input.averageLifespan_gte ), ( "classification", Encode.string |> Encode.optional input.classification ), ( "classification_not", Encode.string |> Encode.optional input.classification_not ), ( "classification_in", (Encode.string |> Encode.list) |> Encode.optional input.classification_in ), ( "classification_not_in", (Encode.string |> Encode.list) |> Encode.optional input.classification_not_in ), ( "classification_lt", Encode.string |> Encode.optional input.classification_lt ), ( "classification_lte", Encode.string |> Encode.optional input.classification_lte ), ( "classification_gt", Encode.string |> Encode.optional input.classification_gt ), ( "classification_gte", Encode.string |> Encode.optional input.classification_gte ), ( "classification_contains", Encode.string |> Encode.optional input.classification_contains ), ( "classification_not_contains", Encode.string |> Encode.optional input.classification_not_contains ), ( "classification_starts_with", Encode.string |> Encode.optional input.classification_starts_with ), ( "classification_not_starts_with", Encode.string |> Encode.optional input.classification_not_starts_with ), ( "classification_ends_with", Encode.string |> Encode.optional input.classification_ends_with ), ( "classification_not_ends_with", Encode.string |> Encode.optional input.classification_not_ends_with ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "designation", Encode.string |> Encode.optional input.designation ), ( "designation_not", Encode.string |> Encode.optional input.designation_not ), ( "designation_in", (Encode.string |> Encode.list) |> Encode.optional input.designation_in ), ( "designation_not_in", (Encode.string |> Encode.list) |> Encode.optional input.designation_not_in ), ( "designation_lt", Encode.string |> Encode.optional input.designation_lt ), ( "designation_lte", Encode.string |> Encode.optional input.designation_lte ), ( "designation_gt", Encode.string |> Encode.optional input.designation_gt ), ( "designation_gte", Encode.string |> Encode.optional input.designation_gte ), ( "designation_contains", Encode.string |> Encode.optional input.designation_contains ), ( "designation_not_contains", Encode.string |> Encode.optional input.designation_not_contains ), ( "designation_starts_with", Encode.string |> Encode.optional input.designation_starts_with ), ( "designation_not_starts_with", Encode.string |> Encode.optional input.designation_not_starts_with ), ( "designation_ends_with", Encode.string |> Encode.optional input.designation_ends_with ), ( "designation_not_ends_with", Encode.string |> Encode.optional input.designation_not_ends_with ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "language", Encode.string |> Encode.optional input.language ), ( "language_not", Encode.string |> Encode.optional input.language_not ), ( "language_in", (Encode.string |> Encode.list) |> Encode.optional input.language_in ), ( "language_not_in", (Encode.string |> Encode.list) |> Encode.optional input.language_not_in ), ( "language_lt", Encode.string |> Encode.optional input.language_lt ), ( "language_lte", Encode.string |> Encode.optional input.language_lte ), ( "language_gt", Encode.string |> Encode.optional input.language_gt ), ( "language_gte", Encode.string |> Encode.optional input.language_gte ), ( "language_contains", Encode.string |> Encode.optional input.language_contains ), ( "language_not_contains", Encode.string |> Encode.optional input.language_not_contains ), ( "language_starts_with", Encode.string |> Encode.optional input.language_starts_with ), ( "language_not_starts_with", Encode.string |> Encode.optional input.language_not_starts_with ), ( "language_ends_with", Encode.string |> Encode.optional input.language_ends_with ), ( "language_not_ends_with", Encode.string |> Encode.optional input.language_not_ends_with ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "people_every", encodePersonFilter |> Encode.optional input.people_every ), ( "people_some", encodePersonFilter |> Encode.optional input.people_some ), ( "people_none", encodePersonFilter |> Encode.optional input.people_none ) ]


buildSpeciesfilmsFilm : SpeciesfilmsFilmRequiredFields -> (SpeciesfilmsFilmOptionalFields -> SpeciesfilmsFilmOptionalFields) -> SpeciesfilmsFilm
buildSpeciesfilmsFilm required fillOptionals =
    let
        optionals =
            fillOptionals
                { director = Absent, isPublished = Absent, openingCrawl = Absent, producers = Absent, releaseDate = Absent, charactersIds = Absent, characters = Absent, planetsIds = Absent, planets = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    SpeciesfilmsFilm { director = optionals.director, episodeId = required.episodeId, isPublished = optionals.isPublished, openingCrawl = optionals.openingCrawl, producers = optionals.producers, releaseDate = optionals.releaseDate, title = required.title, charactersIds = optionals.charactersIds, characters = optionals.characters, planetsIds = optionals.planetsIds, planets = optionals.planets, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias SpeciesfilmsFilmRequiredFields =
    { episodeId : Int
    , title : String
    }


type alias SpeciesfilmsFilmOptionalFields =
    { director : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type alias for the `SpeciesfilmsFilm` attributes. Note that this type
needs to use the `SpeciesfilmsFilm` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias SpeciesfilmsFilmRaw =
    { director : OptionalArgument String
    , episodeId : Int
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , title : String
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type for the SpeciesfilmsFilm input object.
-}
type SpeciesfilmsFilm
    = SpeciesfilmsFilm SpeciesfilmsFilmRaw


{-| Encode a SpeciesfilmsFilm into a value that can be used as an argument.
-}
encodeSpeciesfilmsFilm : SpeciesfilmsFilm -> Value
encodeSpeciesfilmsFilm (SpeciesfilmsFilm input) =
    Encode.maybeObject
        [ ( "director", Encode.string |> Encode.optional input.director ), ( "episodeId", Encode.int input.episodeId |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "producers", (Encode.string |> Encode.list) |> Encode.optional input.producers ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "title", Encode.string input.title |> Just ), ( "charactersIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.charactersIds ), ( "characters", (encodeFilmcharactersPerson |> Encode.list) |> Encode.optional input.characters ), ( "planetsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.planetsIds ), ( "planets", (encodeFilmplanetsPlanet |> Encode.list) |> Encode.optional input.planets ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodeFilmspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodeFilmstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodeFilmvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildSpeciespeoplePerson : SpeciespeoplePersonRequiredFields -> (SpeciespeoplePersonOptionalFields -> SpeciespeoplePersonOptionalFields) -> SpeciespeoplePerson
buildSpeciespeoplePerson required fillOptionals =
    let
        optionals =
            fillOptionals
                { birthYear = Absent, eyeColor = Absent, gender = Absent, hairColor = Absent, height = Absent, isPublished = Absent, mass = Absent, skinColor = Absent, homeworldId = Absent, homeworld = Absent, filmsIds = Absent, films = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    SpeciespeoplePerson { birthYear = optionals.birthYear, eyeColor = optionals.eyeColor, gender = optionals.gender, hairColor = optionals.hairColor, height = optionals.height, isPublished = optionals.isPublished, mass = optionals.mass, name = required.name, skinColor = optionals.skinColor, homeworldId = optionals.homeworldId, homeworld = optionals.homeworld, filmsIds = optionals.filmsIds, films = optionals.films, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias SpeciespeoplePersonRequiredFields =
    { name : String }


type alias SpeciespeoplePersonOptionalFields =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type alias for the `SpeciespeoplePerson` attributes. Note that this type
needs to use the `SpeciespeoplePerson` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias SpeciespeoplePersonRaw =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type for the SpeciespeoplePerson input object.
-}
type SpeciespeoplePerson
    = SpeciespeoplePerson SpeciespeoplePersonRaw


{-| Encode a SpeciespeoplePerson into a value that can be used as an argument.
-}
encodeSpeciespeoplePerson : SpeciespeoplePerson -> Value
encodeSpeciespeoplePerson (SpeciespeoplePerson input) =
    Encode.maybeObject
        [ ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "eyeColor", (Encode.enum Api.Enum.PersonEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "hairColor", (Encode.enum Api.Enum.PersonHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "height", Encode.int |> Encode.optional input.height ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.PersonSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "homeworldId", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.homeworldId ), ( "homeworld", encodePersonhomeworldPlanet |> Encode.optional input.homeworld ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePersonfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodePersonspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodePersonstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodePersonvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildStarshipFilter : (StarshipFilterOptionalFields -> StarshipFilterOptionalFields) -> StarshipFilter
buildStarshipFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, cargoCapacity = Absent, cargoCapacity_not = Absent, cargoCapacity_in = Absent, cargoCapacity_not_in = Absent, cargoCapacity_lt = Absent, cargoCapacity_lte = Absent, cargoCapacity_gt = Absent, cargoCapacity_gte = Absent, class = Absent, class_not = Absent, class_in = Absent, class_not_in = Absent, class_lt = Absent, class_lte = Absent, class_gt = Absent, class_gte = Absent, class_contains = Absent, class_not_contains = Absent, class_starts_with = Absent, class_not_starts_with = Absent, class_ends_with = Absent, class_not_ends_with = Absent, consumables = Absent, consumables_not = Absent, consumables_in = Absent, consumables_not_in = Absent, consumables_lt = Absent, consumables_lte = Absent, consumables_gt = Absent, consumables_gte = Absent, consumables_contains = Absent, consumables_not_contains = Absent, consumables_starts_with = Absent, consumables_not_starts_with = Absent, consumables_ends_with = Absent, consumables_not_ends_with = Absent, costInCredits = Absent, costInCredits_not = Absent, costInCredits_in = Absent, costInCredits_not_in = Absent, costInCredits_lt = Absent, costInCredits_lte = Absent, costInCredits_gt = Absent, costInCredits_gte = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, crew = Absent, crew_not = Absent, crew_in = Absent, crew_not_in = Absent, crew_lt = Absent, crew_lte = Absent, crew_gt = Absent, crew_gte = Absent, hyperdriveRating = Absent, hyperdriveRating_not = Absent, hyperdriveRating_in = Absent, hyperdriveRating_not_in = Absent, hyperdriveRating_lt = Absent, hyperdriveRating_lte = Absent, hyperdriveRating_gt = Absent, hyperdriveRating_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, length = Absent, length_not = Absent, length_in = Absent, length_not_in = Absent, length_lt = Absent, length_lte = Absent, length_gt = Absent, length_gte = Absent, maxAtmospheringSpeed = Absent, maxAtmospheringSpeed_not = Absent, maxAtmospheringSpeed_in = Absent, maxAtmospheringSpeed_not_in = Absent, maxAtmospheringSpeed_lt = Absent, maxAtmospheringSpeed_lte = Absent, maxAtmospheringSpeed_gt = Absent, maxAtmospheringSpeed_gte = Absent, mglt = Absent, mglt_not = Absent, mglt_in = Absent, mglt_not_in = Absent, mglt_lt = Absent, mglt_lte = Absent, mglt_gt = Absent, mglt_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, passengers = Absent, passengers_not = Absent, passengers_in = Absent, passengers_not_in = Absent, passengers_lt = Absent, passengers_lte = Absent, passengers_gt = Absent, passengers_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, pilots_every = Absent, pilots_some = Absent, pilots_none = Absent }
    in
    StarshipFilter { and = optionals.and, or = optionals.or, cargoCapacity = optionals.cargoCapacity, cargoCapacity_not = optionals.cargoCapacity_not, cargoCapacity_in = optionals.cargoCapacity_in, cargoCapacity_not_in = optionals.cargoCapacity_not_in, cargoCapacity_lt = optionals.cargoCapacity_lt, cargoCapacity_lte = optionals.cargoCapacity_lte, cargoCapacity_gt = optionals.cargoCapacity_gt, cargoCapacity_gte = optionals.cargoCapacity_gte, class = optionals.class, class_not = optionals.class_not, class_in = optionals.class_in, class_not_in = optionals.class_not_in, class_lt = optionals.class_lt, class_lte = optionals.class_lte, class_gt = optionals.class_gt, class_gte = optionals.class_gte, class_contains = optionals.class_contains, class_not_contains = optionals.class_not_contains, class_starts_with = optionals.class_starts_with, class_not_starts_with = optionals.class_not_starts_with, class_ends_with = optionals.class_ends_with, class_not_ends_with = optionals.class_not_ends_with, consumables = optionals.consumables, consumables_not = optionals.consumables_not, consumables_in = optionals.consumables_in, consumables_not_in = optionals.consumables_not_in, consumables_lt = optionals.consumables_lt, consumables_lte = optionals.consumables_lte, consumables_gt = optionals.consumables_gt, consumables_gte = optionals.consumables_gte, consumables_contains = optionals.consumables_contains, consumables_not_contains = optionals.consumables_not_contains, consumables_starts_with = optionals.consumables_starts_with, consumables_not_starts_with = optionals.consumables_not_starts_with, consumables_ends_with = optionals.consumables_ends_with, consumables_not_ends_with = optionals.consumables_not_ends_with, costInCredits = optionals.costInCredits, costInCredits_not = optionals.costInCredits_not, costInCredits_in = optionals.costInCredits_in, costInCredits_not_in = optionals.costInCredits_not_in, costInCredits_lt = optionals.costInCredits_lt, costInCredits_lte = optionals.costInCredits_lte, costInCredits_gt = optionals.costInCredits_gt, costInCredits_gte = optionals.costInCredits_gte, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, crew = optionals.crew, crew_not = optionals.crew_not, crew_in = optionals.crew_in, crew_not_in = optionals.crew_not_in, crew_lt = optionals.crew_lt, crew_lte = optionals.crew_lte, crew_gt = optionals.crew_gt, crew_gte = optionals.crew_gte, hyperdriveRating = optionals.hyperdriveRating, hyperdriveRating_not = optionals.hyperdriveRating_not, hyperdriveRating_in = optionals.hyperdriveRating_in, hyperdriveRating_not_in = optionals.hyperdriveRating_not_in, hyperdriveRating_lt = optionals.hyperdriveRating_lt, hyperdriveRating_lte = optionals.hyperdriveRating_lte, hyperdriveRating_gt = optionals.hyperdriveRating_gt, hyperdriveRating_gte = optionals.hyperdriveRating_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, length = optionals.length, length_not = optionals.length_not, length_in = optionals.length_in, length_not_in = optionals.length_not_in, length_lt = optionals.length_lt, length_lte = optionals.length_lte, length_gt = optionals.length_gt, length_gte = optionals.length_gte, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, maxAtmospheringSpeed_not = optionals.maxAtmospheringSpeed_not, maxAtmospheringSpeed_in = optionals.maxAtmospheringSpeed_in, maxAtmospheringSpeed_not_in = optionals.maxAtmospheringSpeed_not_in, maxAtmospheringSpeed_lt = optionals.maxAtmospheringSpeed_lt, maxAtmospheringSpeed_lte = optionals.maxAtmospheringSpeed_lte, maxAtmospheringSpeed_gt = optionals.maxAtmospheringSpeed_gt, maxAtmospheringSpeed_gte = optionals.maxAtmospheringSpeed_gte, mglt = optionals.mglt, mglt_not = optionals.mglt_not, mglt_in = optionals.mglt_in, mglt_not_in = optionals.mglt_not_in, mglt_lt = optionals.mglt_lt, mglt_lte = optionals.mglt_lte, mglt_gt = optionals.mglt_gt, mglt_gte = optionals.mglt_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, passengers = optionals.passengers, passengers_not = optionals.passengers_not, passengers_in = optionals.passengers_in, passengers_not_in = optionals.passengers_not_in, passengers_lt = optionals.passengers_lt, passengers_lte = optionals.passengers_lte, passengers_gt = optionals.passengers_gt, passengers_gte = optionals.passengers_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, pilots_every = optionals.pilots_every, pilots_some = optionals.pilots_some, pilots_none = optionals.pilots_none }


type alias StarshipFilterOptionalFields =
    { and : OptionalArgument (List StarshipFilter)
    , or : OptionalArgument (List StarshipFilter)
    , cargoCapacity : OptionalArgument Float
    , cargoCapacity_not : OptionalArgument Float
    , cargoCapacity_in : OptionalArgument (List Float)
    , cargoCapacity_not_in : OptionalArgument (List Float)
    , cargoCapacity_lt : OptionalArgument Float
    , cargoCapacity_lte : OptionalArgument Float
    , cargoCapacity_gt : OptionalArgument Float
    , cargoCapacity_gte : OptionalArgument Float
    , class : OptionalArgument String
    , class_not : OptionalArgument String
    , class_in : OptionalArgument (List String)
    , class_not_in : OptionalArgument (List String)
    , class_lt : OptionalArgument String
    , class_lte : OptionalArgument String
    , class_gt : OptionalArgument String
    , class_gte : OptionalArgument String
    , class_contains : OptionalArgument String
    , class_not_contains : OptionalArgument String
    , class_starts_with : OptionalArgument String
    , class_not_starts_with : OptionalArgument String
    , class_ends_with : OptionalArgument String
    , class_not_ends_with : OptionalArgument String
    , consumables : OptionalArgument String
    , consumables_not : OptionalArgument String
    , consumables_in : OptionalArgument (List String)
    , consumables_not_in : OptionalArgument (List String)
    , consumables_lt : OptionalArgument String
    , consumables_lte : OptionalArgument String
    , consumables_gt : OptionalArgument String
    , consumables_gte : OptionalArgument String
    , consumables_contains : OptionalArgument String
    , consumables_not_contains : OptionalArgument String
    , consumables_starts_with : OptionalArgument String
    , consumables_not_starts_with : OptionalArgument String
    , consumables_ends_with : OptionalArgument String
    , consumables_not_ends_with : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , costInCredits_not : OptionalArgument Float
    , costInCredits_in : OptionalArgument (List Float)
    , costInCredits_not_in : OptionalArgument (List Float)
    , costInCredits_lt : OptionalArgument Float
    , costInCredits_lte : OptionalArgument Float
    , costInCredits_gt : OptionalArgument Float
    , costInCredits_gte : OptionalArgument Float
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , crew : OptionalArgument Int
    , crew_not : OptionalArgument Int
    , crew_in : OptionalArgument (List Int)
    , crew_not_in : OptionalArgument (List Int)
    , crew_lt : OptionalArgument Int
    , crew_lte : OptionalArgument Int
    , crew_gt : OptionalArgument Int
    , crew_gte : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , hyperdriveRating_not : OptionalArgument Float
    , hyperdriveRating_in : OptionalArgument (List Float)
    , hyperdriveRating_not_in : OptionalArgument (List Float)
    , hyperdriveRating_lt : OptionalArgument Float
    , hyperdriveRating_lte : OptionalArgument Float
    , hyperdriveRating_gt : OptionalArgument Float
    , hyperdriveRating_gte : OptionalArgument Float
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , length : OptionalArgument Float
    , length_not : OptionalArgument Float
    , length_in : OptionalArgument (List Float)
    , length_not_in : OptionalArgument (List Float)
    , length_lt : OptionalArgument Float
    , length_lte : OptionalArgument Float
    , length_gt : OptionalArgument Float
    , length_gte : OptionalArgument Float
    , maxAtmospheringSpeed : OptionalArgument Int
    , maxAtmospheringSpeed_not : OptionalArgument Int
    , maxAtmospheringSpeed_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_not_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_lt : OptionalArgument Int
    , maxAtmospheringSpeed_lte : OptionalArgument Int
    , maxAtmospheringSpeed_gt : OptionalArgument Int
    , maxAtmospheringSpeed_gte : OptionalArgument Int
    , mglt : OptionalArgument Int
    , mglt_not : OptionalArgument Int
    , mglt_in : OptionalArgument (List Int)
    , mglt_not_in : OptionalArgument (List Int)
    , mglt_lt : OptionalArgument Int
    , mglt_lte : OptionalArgument Int
    , mglt_gt : OptionalArgument Int
    , mglt_gte : OptionalArgument Int
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , passengers : OptionalArgument Int
    , passengers_not : OptionalArgument Int
    , passengers_in : OptionalArgument (List Int)
    , passengers_not_in : OptionalArgument (List Int)
    , passengers_lt : OptionalArgument Int
    , passengers_lte : OptionalArgument Int
    , passengers_gt : OptionalArgument Int
    , passengers_gte : OptionalArgument Int
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , pilots_every : OptionalArgument PersonFilter
    , pilots_some : OptionalArgument PersonFilter
    , pilots_none : OptionalArgument PersonFilter
    }


{-| Type alias for the `StarshipFilter` attributes. Note that this type
needs to use the `StarshipFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias StarshipFilterRaw =
    { and : OptionalArgument (List StarshipFilter)
    , or : OptionalArgument (List StarshipFilter)
    , cargoCapacity : OptionalArgument Float
    , cargoCapacity_not : OptionalArgument Float
    , cargoCapacity_in : OptionalArgument (List Float)
    , cargoCapacity_not_in : OptionalArgument (List Float)
    , cargoCapacity_lt : OptionalArgument Float
    , cargoCapacity_lte : OptionalArgument Float
    , cargoCapacity_gt : OptionalArgument Float
    , cargoCapacity_gte : OptionalArgument Float
    , class : OptionalArgument String
    , class_not : OptionalArgument String
    , class_in : OptionalArgument (List String)
    , class_not_in : OptionalArgument (List String)
    , class_lt : OptionalArgument String
    , class_lte : OptionalArgument String
    , class_gt : OptionalArgument String
    , class_gte : OptionalArgument String
    , class_contains : OptionalArgument String
    , class_not_contains : OptionalArgument String
    , class_starts_with : OptionalArgument String
    , class_not_starts_with : OptionalArgument String
    , class_ends_with : OptionalArgument String
    , class_not_ends_with : OptionalArgument String
    , consumables : OptionalArgument String
    , consumables_not : OptionalArgument String
    , consumables_in : OptionalArgument (List String)
    , consumables_not_in : OptionalArgument (List String)
    , consumables_lt : OptionalArgument String
    , consumables_lte : OptionalArgument String
    , consumables_gt : OptionalArgument String
    , consumables_gte : OptionalArgument String
    , consumables_contains : OptionalArgument String
    , consumables_not_contains : OptionalArgument String
    , consumables_starts_with : OptionalArgument String
    , consumables_not_starts_with : OptionalArgument String
    , consumables_ends_with : OptionalArgument String
    , consumables_not_ends_with : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , costInCredits_not : OptionalArgument Float
    , costInCredits_in : OptionalArgument (List Float)
    , costInCredits_not_in : OptionalArgument (List Float)
    , costInCredits_lt : OptionalArgument Float
    , costInCredits_lte : OptionalArgument Float
    , costInCredits_gt : OptionalArgument Float
    , costInCredits_gte : OptionalArgument Float
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , crew : OptionalArgument Int
    , crew_not : OptionalArgument Int
    , crew_in : OptionalArgument (List Int)
    , crew_not_in : OptionalArgument (List Int)
    , crew_lt : OptionalArgument Int
    , crew_lte : OptionalArgument Int
    , crew_gt : OptionalArgument Int
    , crew_gte : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , hyperdriveRating_not : OptionalArgument Float
    , hyperdriveRating_in : OptionalArgument (List Float)
    , hyperdriveRating_not_in : OptionalArgument (List Float)
    , hyperdriveRating_lt : OptionalArgument Float
    , hyperdriveRating_lte : OptionalArgument Float
    , hyperdriveRating_gt : OptionalArgument Float
    , hyperdriveRating_gte : OptionalArgument Float
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , length : OptionalArgument Float
    , length_not : OptionalArgument Float
    , length_in : OptionalArgument (List Float)
    , length_not_in : OptionalArgument (List Float)
    , length_lt : OptionalArgument Float
    , length_lte : OptionalArgument Float
    , length_gt : OptionalArgument Float
    , length_gte : OptionalArgument Float
    , maxAtmospheringSpeed : OptionalArgument Int
    , maxAtmospheringSpeed_not : OptionalArgument Int
    , maxAtmospheringSpeed_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_not_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_lt : OptionalArgument Int
    , maxAtmospheringSpeed_lte : OptionalArgument Int
    , maxAtmospheringSpeed_gt : OptionalArgument Int
    , maxAtmospheringSpeed_gte : OptionalArgument Int
    , mglt : OptionalArgument Int
    , mglt_not : OptionalArgument Int
    , mglt_in : OptionalArgument (List Int)
    , mglt_not_in : OptionalArgument (List Int)
    , mglt_lt : OptionalArgument Int
    , mglt_lte : OptionalArgument Int
    , mglt_gt : OptionalArgument Int
    , mglt_gte : OptionalArgument Int
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , passengers : OptionalArgument Int
    , passengers_not : OptionalArgument Int
    , passengers_in : OptionalArgument (List Int)
    , passengers_not_in : OptionalArgument (List Int)
    , passengers_lt : OptionalArgument Int
    , passengers_lte : OptionalArgument Int
    , passengers_gt : OptionalArgument Int
    , passengers_gte : OptionalArgument Int
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , pilots_every : OptionalArgument PersonFilter
    , pilots_some : OptionalArgument PersonFilter
    , pilots_none : OptionalArgument PersonFilter
    }


{-| Type for the StarshipFilter input object.
-}
type StarshipFilter
    = StarshipFilter StarshipFilterRaw


{-| Encode a StarshipFilter into a value that can be used as an argument.
-}
encodeStarshipFilter : StarshipFilter -> Value
encodeStarshipFilter (StarshipFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeStarshipFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeStarshipFilter |> Encode.list) |> Encode.optional input.or ), ( "cargoCapacity", Encode.float |> Encode.optional input.cargoCapacity ), ( "cargoCapacity_not", Encode.float |> Encode.optional input.cargoCapacity_not ), ( "cargoCapacity_in", (Encode.float |> Encode.list) |> Encode.optional input.cargoCapacity_in ), ( "cargoCapacity_not_in", (Encode.float |> Encode.list) |> Encode.optional input.cargoCapacity_not_in ), ( "cargoCapacity_lt", Encode.float |> Encode.optional input.cargoCapacity_lt ), ( "cargoCapacity_lte", Encode.float |> Encode.optional input.cargoCapacity_lte ), ( "cargoCapacity_gt", Encode.float |> Encode.optional input.cargoCapacity_gt ), ( "cargoCapacity_gte", Encode.float |> Encode.optional input.cargoCapacity_gte ), ( "class", Encode.string |> Encode.optional input.class ), ( "class_not", Encode.string |> Encode.optional input.class_not ), ( "class_in", (Encode.string |> Encode.list) |> Encode.optional input.class_in ), ( "class_not_in", (Encode.string |> Encode.list) |> Encode.optional input.class_not_in ), ( "class_lt", Encode.string |> Encode.optional input.class_lt ), ( "class_lte", Encode.string |> Encode.optional input.class_lte ), ( "class_gt", Encode.string |> Encode.optional input.class_gt ), ( "class_gte", Encode.string |> Encode.optional input.class_gte ), ( "class_contains", Encode.string |> Encode.optional input.class_contains ), ( "class_not_contains", Encode.string |> Encode.optional input.class_not_contains ), ( "class_starts_with", Encode.string |> Encode.optional input.class_starts_with ), ( "class_not_starts_with", Encode.string |> Encode.optional input.class_not_starts_with ), ( "class_ends_with", Encode.string |> Encode.optional input.class_ends_with ), ( "class_not_ends_with", Encode.string |> Encode.optional input.class_not_ends_with ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "consumables_not", Encode.string |> Encode.optional input.consumables_not ), ( "consumables_in", (Encode.string |> Encode.list) |> Encode.optional input.consumables_in ), ( "consumables_not_in", (Encode.string |> Encode.list) |> Encode.optional input.consumables_not_in ), ( "consumables_lt", Encode.string |> Encode.optional input.consumables_lt ), ( "consumables_lte", Encode.string |> Encode.optional input.consumables_lte ), ( "consumables_gt", Encode.string |> Encode.optional input.consumables_gt ), ( "consumables_gte", Encode.string |> Encode.optional input.consumables_gte ), ( "consumables_contains", Encode.string |> Encode.optional input.consumables_contains ), ( "consumables_not_contains", Encode.string |> Encode.optional input.consumables_not_contains ), ( "consumables_starts_with", Encode.string |> Encode.optional input.consumables_starts_with ), ( "consumables_not_starts_with", Encode.string |> Encode.optional input.consumables_not_starts_with ), ( "consumables_ends_with", Encode.string |> Encode.optional input.consumables_ends_with ), ( "consumables_not_ends_with", Encode.string |> Encode.optional input.consumables_not_ends_with ), ( "costInCredits", Encode.float |> Encode.optional input.costInCredits ), ( "costInCredits_not", Encode.float |> Encode.optional input.costInCredits_not ), ( "costInCredits_in", (Encode.float |> Encode.list) |> Encode.optional input.costInCredits_in ), ( "costInCredits_not_in", (Encode.float |> Encode.list) |> Encode.optional input.costInCredits_not_in ), ( "costInCredits_lt", Encode.float |> Encode.optional input.costInCredits_lt ), ( "costInCredits_lte", Encode.float |> Encode.optional input.costInCredits_lte ), ( "costInCredits_gt", Encode.float |> Encode.optional input.costInCredits_gt ), ( "costInCredits_gte", Encode.float |> Encode.optional input.costInCredits_gte ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "crew_not", Encode.int |> Encode.optional input.crew_not ), ( "crew_in", (Encode.int |> Encode.list) |> Encode.optional input.crew_in ), ( "crew_not_in", (Encode.int |> Encode.list) |> Encode.optional input.crew_not_in ), ( "crew_lt", Encode.int |> Encode.optional input.crew_lt ), ( "crew_lte", Encode.int |> Encode.optional input.crew_lte ), ( "crew_gt", Encode.int |> Encode.optional input.crew_gt ), ( "crew_gte", Encode.int |> Encode.optional input.crew_gte ), ( "hyperdriveRating", Encode.float |> Encode.optional input.hyperdriveRating ), ( "hyperdriveRating_not", Encode.float |> Encode.optional input.hyperdriveRating_not ), ( "hyperdriveRating_in", (Encode.float |> Encode.list) |> Encode.optional input.hyperdriveRating_in ), ( "hyperdriveRating_not_in", (Encode.float |> Encode.list) |> Encode.optional input.hyperdriveRating_not_in ), ( "hyperdriveRating_lt", Encode.float |> Encode.optional input.hyperdriveRating_lt ), ( "hyperdriveRating_lte", Encode.float |> Encode.optional input.hyperdriveRating_lte ), ( "hyperdriveRating_gt", Encode.float |> Encode.optional input.hyperdriveRating_gt ), ( "hyperdriveRating_gte", Encode.float |> Encode.optional input.hyperdriveRating_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "length", Encode.float |> Encode.optional input.length ), ( "length_not", Encode.float |> Encode.optional input.length_not ), ( "length_in", (Encode.float |> Encode.list) |> Encode.optional input.length_in ), ( "length_not_in", (Encode.float |> Encode.list) |> Encode.optional input.length_not_in ), ( "length_lt", Encode.float |> Encode.optional input.length_lt ), ( "length_lte", Encode.float |> Encode.optional input.length_lte ), ( "length_gt", Encode.float |> Encode.optional input.length_gt ), ( "length_gte", Encode.float |> Encode.optional input.length_gte ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "maxAtmospheringSpeed_not", Encode.int |> Encode.optional input.maxAtmospheringSpeed_not ), ( "maxAtmospheringSpeed_in", (Encode.int |> Encode.list) |> Encode.optional input.maxAtmospheringSpeed_in ), ( "maxAtmospheringSpeed_not_in", (Encode.int |> Encode.list) |> Encode.optional input.maxAtmospheringSpeed_not_in ), ( "maxAtmospheringSpeed_lt", Encode.int |> Encode.optional input.maxAtmospheringSpeed_lt ), ( "maxAtmospheringSpeed_lte", Encode.int |> Encode.optional input.maxAtmospheringSpeed_lte ), ( "maxAtmospheringSpeed_gt", Encode.int |> Encode.optional input.maxAtmospheringSpeed_gt ), ( "maxAtmospheringSpeed_gte", Encode.int |> Encode.optional input.maxAtmospheringSpeed_gte ), ( "mglt", Encode.int |> Encode.optional input.mglt ), ( "mglt_not", Encode.int |> Encode.optional input.mglt_not ), ( "mglt_in", (Encode.int |> Encode.list) |> Encode.optional input.mglt_in ), ( "mglt_not_in", (Encode.int |> Encode.list) |> Encode.optional input.mglt_not_in ), ( "mglt_lt", Encode.int |> Encode.optional input.mglt_lt ), ( "mglt_lte", Encode.int |> Encode.optional input.mglt_lte ), ( "mglt_gt", Encode.int |> Encode.optional input.mglt_gt ), ( "mglt_gte", Encode.int |> Encode.optional input.mglt_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "passengers_not", Encode.int |> Encode.optional input.passengers_not ), ( "passengers_in", (Encode.int |> Encode.list) |> Encode.optional input.passengers_in ), ( "passengers_not_in", (Encode.int |> Encode.list) |> Encode.optional input.passengers_not_in ), ( "passengers_lt", Encode.int |> Encode.optional input.passengers_lt ), ( "passengers_lte", Encode.int |> Encode.optional input.passengers_lte ), ( "passengers_gt", Encode.int |> Encode.optional input.passengers_gt ), ( "passengers_gte", Encode.int |> Encode.optional input.passengers_gte ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "pilots_every", encodePersonFilter |> Encode.optional input.pilots_every ), ( "pilots_some", encodePersonFilter |> Encode.optional input.pilots_some ), ( "pilots_none", encodePersonFilter |> Encode.optional input.pilots_none ) ]


buildStarshipSubscriptionFilter : (StarshipSubscriptionFilterOptionalFields -> StarshipSubscriptionFilterOptionalFields) -> StarshipSubscriptionFilter
buildStarshipSubscriptionFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, mutation_in = Absent, updatedFields_contains = Absent, updatedFields_contains_every = Absent, updatedFields_contains_some = Absent, node = Absent }
    in
    StarshipSubscriptionFilter { and = optionals.and, or = optionals.or, mutation_in = optionals.mutation_in, updatedFields_contains = optionals.updatedFields_contains, updatedFields_contains_every = optionals.updatedFields_contains_every, updatedFields_contains_some = optionals.updatedFields_contains_some, node = optionals.node }


type alias StarshipSubscriptionFilterOptionalFields =
    { and : OptionalArgument (List StarshipSubscriptionFilter)
    , or : OptionalArgument (List StarshipSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument StarshipSubscriptionFilterNode
    }


{-| Type alias for the `StarshipSubscriptionFilter` attributes. Note that this type
needs to use the `StarshipSubscriptionFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias StarshipSubscriptionFilterRaw =
    { and : OptionalArgument (List StarshipSubscriptionFilter)
    , or : OptionalArgument (List StarshipSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument StarshipSubscriptionFilterNode
    }


{-| Type for the StarshipSubscriptionFilter input object.
-}
type StarshipSubscriptionFilter
    = StarshipSubscriptionFilter StarshipSubscriptionFilterRaw


{-| Encode a StarshipSubscriptionFilter into a value that can be used as an argument.
-}
encodeStarshipSubscriptionFilter : StarshipSubscriptionFilter -> Value
encodeStarshipSubscriptionFilter (StarshipSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeStarshipSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeStarshipSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum Api.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeStarshipSubscriptionFilterNode |> Encode.optional input.node ) ]


buildStarshipSubscriptionFilterNode : (StarshipSubscriptionFilterNodeOptionalFields -> StarshipSubscriptionFilterNodeOptionalFields) -> StarshipSubscriptionFilterNode
buildStarshipSubscriptionFilterNode fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, cargoCapacity_not = Absent, cargoCapacity_in = Absent, cargoCapacity_not_in = Absent, cargoCapacity_lt = Absent, cargoCapacity_lte = Absent, cargoCapacity_gt = Absent, cargoCapacity_gte = Absent, class = Absent, class_not = Absent, class_in = Absent, class_not_in = Absent, class_lt = Absent, class_lte = Absent, class_gt = Absent, class_gte = Absent, class_contains = Absent, class_not_contains = Absent, class_starts_with = Absent, class_not_starts_with = Absent, class_ends_with = Absent, class_not_ends_with = Absent, consumables = Absent, consumables_not = Absent, consumables_in = Absent, consumables_not_in = Absent, consumables_lt = Absent, consumables_lte = Absent, consumables_gt = Absent, consumables_gte = Absent, consumables_contains = Absent, consumables_not_contains = Absent, consumables_starts_with = Absent, consumables_not_starts_with = Absent, consumables_ends_with = Absent, consumables_not_ends_with = Absent, costInCredits = Absent, costInCredits_not = Absent, costInCredits_in = Absent, costInCredits_not_in = Absent, costInCredits_lt = Absent, costInCredits_lte = Absent, costInCredits_gt = Absent, costInCredits_gte = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, crew = Absent, crew_not = Absent, crew_in = Absent, crew_not_in = Absent, crew_lt = Absent, crew_lte = Absent, crew_gt = Absent, crew_gte = Absent, hyperdriveRating = Absent, hyperdriveRating_not = Absent, hyperdriveRating_in = Absent, hyperdriveRating_not_in = Absent, hyperdriveRating_lt = Absent, hyperdriveRating_lte = Absent, hyperdriveRating_gt = Absent, hyperdriveRating_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, length = Absent, length_not = Absent, length_in = Absent, length_not_in = Absent, length_lt = Absent, length_lte = Absent, length_gt = Absent, length_gte = Absent, maxAtmospheringSpeed = Absent, maxAtmospheringSpeed_not = Absent, maxAtmospheringSpeed_in = Absent, maxAtmospheringSpeed_not_in = Absent, maxAtmospheringSpeed_lt = Absent, maxAtmospheringSpeed_lte = Absent, maxAtmospheringSpeed_gt = Absent, maxAtmospheringSpeed_gte = Absent, mglt = Absent, mglt_not = Absent, mglt_in = Absent, mglt_not_in = Absent, mglt_lt = Absent, mglt_lte = Absent, mglt_gt = Absent, mglt_gte = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, passengers = Absent, passengers_not = Absent, passengers_in = Absent, passengers_not_in = Absent, passengers_lt = Absent, passengers_lte = Absent, passengers_gt = Absent, passengers_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, pilots_every = Absent, pilots_some = Absent, pilots_none = Absent }
    in
    StarshipSubscriptionFilterNode { cargoCapacity = optionals.cargoCapacity, cargoCapacity_not = optionals.cargoCapacity_not, cargoCapacity_in = optionals.cargoCapacity_in, cargoCapacity_not_in = optionals.cargoCapacity_not_in, cargoCapacity_lt = optionals.cargoCapacity_lt, cargoCapacity_lte = optionals.cargoCapacity_lte, cargoCapacity_gt = optionals.cargoCapacity_gt, cargoCapacity_gte = optionals.cargoCapacity_gte, class = optionals.class, class_not = optionals.class_not, class_in = optionals.class_in, class_not_in = optionals.class_not_in, class_lt = optionals.class_lt, class_lte = optionals.class_lte, class_gt = optionals.class_gt, class_gte = optionals.class_gte, class_contains = optionals.class_contains, class_not_contains = optionals.class_not_contains, class_starts_with = optionals.class_starts_with, class_not_starts_with = optionals.class_not_starts_with, class_ends_with = optionals.class_ends_with, class_not_ends_with = optionals.class_not_ends_with, consumables = optionals.consumables, consumables_not = optionals.consumables_not, consumables_in = optionals.consumables_in, consumables_not_in = optionals.consumables_not_in, consumables_lt = optionals.consumables_lt, consumables_lte = optionals.consumables_lte, consumables_gt = optionals.consumables_gt, consumables_gte = optionals.consumables_gte, consumables_contains = optionals.consumables_contains, consumables_not_contains = optionals.consumables_not_contains, consumables_starts_with = optionals.consumables_starts_with, consumables_not_starts_with = optionals.consumables_not_starts_with, consumables_ends_with = optionals.consumables_ends_with, consumables_not_ends_with = optionals.consumables_not_ends_with, costInCredits = optionals.costInCredits, costInCredits_not = optionals.costInCredits_not, costInCredits_in = optionals.costInCredits_in, costInCredits_not_in = optionals.costInCredits_not_in, costInCredits_lt = optionals.costInCredits_lt, costInCredits_lte = optionals.costInCredits_lte, costInCredits_gt = optionals.costInCredits_gt, costInCredits_gte = optionals.costInCredits_gte, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, crew = optionals.crew, crew_not = optionals.crew_not, crew_in = optionals.crew_in, crew_not_in = optionals.crew_not_in, crew_lt = optionals.crew_lt, crew_lte = optionals.crew_lte, crew_gt = optionals.crew_gt, crew_gte = optionals.crew_gte, hyperdriveRating = optionals.hyperdriveRating, hyperdriveRating_not = optionals.hyperdriveRating_not, hyperdriveRating_in = optionals.hyperdriveRating_in, hyperdriveRating_not_in = optionals.hyperdriveRating_not_in, hyperdriveRating_lt = optionals.hyperdriveRating_lt, hyperdriveRating_lte = optionals.hyperdriveRating_lte, hyperdriveRating_gt = optionals.hyperdriveRating_gt, hyperdriveRating_gte = optionals.hyperdriveRating_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, length = optionals.length, length_not = optionals.length_not, length_in = optionals.length_in, length_not_in = optionals.length_not_in, length_lt = optionals.length_lt, length_lte = optionals.length_lte, length_gt = optionals.length_gt, length_gte = optionals.length_gte, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, maxAtmospheringSpeed_not = optionals.maxAtmospheringSpeed_not, maxAtmospheringSpeed_in = optionals.maxAtmospheringSpeed_in, maxAtmospheringSpeed_not_in = optionals.maxAtmospheringSpeed_not_in, maxAtmospheringSpeed_lt = optionals.maxAtmospheringSpeed_lt, maxAtmospheringSpeed_lte = optionals.maxAtmospheringSpeed_lte, maxAtmospheringSpeed_gt = optionals.maxAtmospheringSpeed_gt, maxAtmospheringSpeed_gte = optionals.maxAtmospheringSpeed_gte, mglt = optionals.mglt, mglt_not = optionals.mglt_not, mglt_in = optionals.mglt_in, mglt_not_in = optionals.mglt_not_in, mglt_lt = optionals.mglt_lt, mglt_lte = optionals.mglt_lte, mglt_gt = optionals.mglt_gt, mglt_gte = optionals.mglt_gte, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, passengers = optionals.passengers, passengers_not = optionals.passengers_not, passengers_in = optionals.passengers_in, passengers_not_in = optionals.passengers_not_in, passengers_lt = optionals.passengers_lt, passengers_lte = optionals.passengers_lte, passengers_gt = optionals.passengers_gt, passengers_gte = optionals.passengers_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, pilots_every = optionals.pilots_every, pilots_some = optionals.pilots_some, pilots_none = optionals.pilots_none }


type alias StarshipSubscriptionFilterNodeOptionalFields =
    { cargoCapacity : OptionalArgument Float
    , cargoCapacity_not : OptionalArgument Float
    , cargoCapacity_in : OptionalArgument (List Float)
    , cargoCapacity_not_in : OptionalArgument (List Float)
    , cargoCapacity_lt : OptionalArgument Float
    , cargoCapacity_lte : OptionalArgument Float
    , cargoCapacity_gt : OptionalArgument Float
    , cargoCapacity_gte : OptionalArgument Float
    , class : OptionalArgument String
    , class_not : OptionalArgument String
    , class_in : OptionalArgument (List String)
    , class_not_in : OptionalArgument (List String)
    , class_lt : OptionalArgument String
    , class_lte : OptionalArgument String
    , class_gt : OptionalArgument String
    , class_gte : OptionalArgument String
    , class_contains : OptionalArgument String
    , class_not_contains : OptionalArgument String
    , class_starts_with : OptionalArgument String
    , class_not_starts_with : OptionalArgument String
    , class_ends_with : OptionalArgument String
    , class_not_ends_with : OptionalArgument String
    , consumables : OptionalArgument String
    , consumables_not : OptionalArgument String
    , consumables_in : OptionalArgument (List String)
    , consumables_not_in : OptionalArgument (List String)
    , consumables_lt : OptionalArgument String
    , consumables_lte : OptionalArgument String
    , consumables_gt : OptionalArgument String
    , consumables_gte : OptionalArgument String
    , consumables_contains : OptionalArgument String
    , consumables_not_contains : OptionalArgument String
    , consumables_starts_with : OptionalArgument String
    , consumables_not_starts_with : OptionalArgument String
    , consumables_ends_with : OptionalArgument String
    , consumables_not_ends_with : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , costInCredits_not : OptionalArgument Float
    , costInCredits_in : OptionalArgument (List Float)
    , costInCredits_not_in : OptionalArgument (List Float)
    , costInCredits_lt : OptionalArgument Float
    , costInCredits_lte : OptionalArgument Float
    , costInCredits_gt : OptionalArgument Float
    , costInCredits_gte : OptionalArgument Float
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , crew : OptionalArgument Int
    , crew_not : OptionalArgument Int
    , crew_in : OptionalArgument (List Int)
    , crew_not_in : OptionalArgument (List Int)
    , crew_lt : OptionalArgument Int
    , crew_lte : OptionalArgument Int
    , crew_gt : OptionalArgument Int
    , crew_gte : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , hyperdriveRating_not : OptionalArgument Float
    , hyperdriveRating_in : OptionalArgument (List Float)
    , hyperdriveRating_not_in : OptionalArgument (List Float)
    , hyperdriveRating_lt : OptionalArgument Float
    , hyperdriveRating_lte : OptionalArgument Float
    , hyperdriveRating_gt : OptionalArgument Float
    , hyperdriveRating_gte : OptionalArgument Float
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , length : OptionalArgument Float
    , length_not : OptionalArgument Float
    , length_in : OptionalArgument (List Float)
    , length_not_in : OptionalArgument (List Float)
    , length_lt : OptionalArgument Float
    , length_lte : OptionalArgument Float
    , length_gt : OptionalArgument Float
    , length_gte : OptionalArgument Float
    , maxAtmospheringSpeed : OptionalArgument Int
    , maxAtmospheringSpeed_not : OptionalArgument Int
    , maxAtmospheringSpeed_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_not_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_lt : OptionalArgument Int
    , maxAtmospheringSpeed_lte : OptionalArgument Int
    , maxAtmospheringSpeed_gt : OptionalArgument Int
    , maxAtmospheringSpeed_gte : OptionalArgument Int
    , mglt : OptionalArgument Int
    , mglt_not : OptionalArgument Int
    , mglt_in : OptionalArgument (List Int)
    , mglt_not_in : OptionalArgument (List Int)
    , mglt_lt : OptionalArgument Int
    , mglt_lte : OptionalArgument Int
    , mglt_gt : OptionalArgument Int
    , mglt_gte : OptionalArgument Int
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , passengers : OptionalArgument Int
    , passengers_not : OptionalArgument Int
    , passengers_in : OptionalArgument (List Int)
    , passengers_not_in : OptionalArgument (List Int)
    , passengers_lt : OptionalArgument Int
    , passengers_lte : OptionalArgument Int
    , passengers_gt : OptionalArgument Int
    , passengers_gte : OptionalArgument Int
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , pilots_every : OptionalArgument PersonFilter
    , pilots_some : OptionalArgument PersonFilter
    , pilots_none : OptionalArgument PersonFilter
    }


{-| Type alias for the `StarshipSubscriptionFilterNode` attributes. Note that this type
needs to use the `StarshipSubscriptionFilterNode` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias StarshipSubscriptionFilterNodeRaw =
    { cargoCapacity : OptionalArgument Float
    , cargoCapacity_not : OptionalArgument Float
    , cargoCapacity_in : OptionalArgument (List Float)
    , cargoCapacity_not_in : OptionalArgument (List Float)
    , cargoCapacity_lt : OptionalArgument Float
    , cargoCapacity_lte : OptionalArgument Float
    , cargoCapacity_gt : OptionalArgument Float
    , cargoCapacity_gte : OptionalArgument Float
    , class : OptionalArgument String
    , class_not : OptionalArgument String
    , class_in : OptionalArgument (List String)
    , class_not_in : OptionalArgument (List String)
    , class_lt : OptionalArgument String
    , class_lte : OptionalArgument String
    , class_gt : OptionalArgument String
    , class_gte : OptionalArgument String
    , class_contains : OptionalArgument String
    , class_not_contains : OptionalArgument String
    , class_starts_with : OptionalArgument String
    , class_not_starts_with : OptionalArgument String
    , class_ends_with : OptionalArgument String
    , class_not_ends_with : OptionalArgument String
    , consumables : OptionalArgument String
    , consumables_not : OptionalArgument String
    , consumables_in : OptionalArgument (List String)
    , consumables_not_in : OptionalArgument (List String)
    , consumables_lt : OptionalArgument String
    , consumables_lte : OptionalArgument String
    , consumables_gt : OptionalArgument String
    , consumables_gte : OptionalArgument String
    , consumables_contains : OptionalArgument String
    , consumables_not_contains : OptionalArgument String
    , consumables_starts_with : OptionalArgument String
    , consumables_not_starts_with : OptionalArgument String
    , consumables_ends_with : OptionalArgument String
    , consumables_not_ends_with : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , costInCredits_not : OptionalArgument Float
    , costInCredits_in : OptionalArgument (List Float)
    , costInCredits_not_in : OptionalArgument (List Float)
    , costInCredits_lt : OptionalArgument Float
    , costInCredits_lte : OptionalArgument Float
    , costInCredits_gt : OptionalArgument Float
    , costInCredits_gte : OptionalArgument Float
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , crew : OptionalArgument Int
    , crew_not : OptionalArgument Int
    , crew_in : OptionalArgument (List Int)
    , crew_not_in : OptionalArgument (List Int)
    , crew_lt : OptionalArgument Int
    , crew_lte : OptionalArgument Int
    , crew_gt : OptionalArgument Int
    , crew_gte : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , hyperdriveRating_not : OptionalArgument Float
    , hyperdriveRating_in : OptionalArgument (List Float)
    , hyperdriveRating_not_in : OptionalArgument (List Float)
    , hyperdriveRating_lt : OptionalArgument Float
    , hyperdriveRating_lte : OptionalArgument Float
    , hyperdriveRating_gt : OptionalArgument Float
    , hyperdriveRating_gte : OptionalArgument Float
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , length : OptionalArgument Float
    , length_not : OptionalArgument Float
    , length_in : OptionalArgument (List Float)
    , length_not_in : OptionalArgument (List Float)
    , length_lt : OptionalArgument Float
    , length_lte : OptionalArgument Float
    , length_gt : OptionalArgument Float
    , length_gte : OptionalArgument Float
    , maxAtmospheringSpeed : OptionalArgument Int
    , maxAtmospheringSpeed_not : OptionalArgument Int
    , maxAtmospheringSpeed_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_not_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_lt : OptionalArgument Int
    , maxAtmospheringSpeed_lte : OptionalArgument Int
    , maxAtmospheringSpeed_gt : OptionalArgument Int
    , maxAtmospheringSpeed_gte : OptionalArgument Int
    , mglt : OptionalArgument Int
    , mglt_not : OptionalArgument Int
    , mglt_in : OptionalArgument (List Int)
    , mglt_not_in : OptionalArgument (List Int)
    , mglt_lt : OptionalArgument Int
    , mglt_lte : OptionalArgument Int
    , mglt_gt : OptionalArgument Int
    , mglt_gte : OptionalArgument Int
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , passengers : OptionalArgument Int
    , passengers_not : OptionalArgument Int
    , passengers_in : OptionalArgument (List Int)
    , passengers_not_in : OptionalArgument (List Int)
    , passengers_lt : OptionalArgument Int
    , passengers_lte : OptionalArgument Int
    , passengers_gt : OptionalArgument Int
    , passengers_gte : OptionalArgument Int
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , pilots_every : OptionalArgument PersonFilter
    , pilots_some : OptionalArgument PersonFilter
    , pilots_none : OptionalArgument PersonFilter
    }


{-| Type for the StarshipSubscriptionFilterNode input object.
-}
type StarshipSubscriptionFilterNode
    = StarshipSubscriptionFilterNode StarshipSubscriptionFilterNodeRaw


{-| Encode a StarshipSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeStarshipSubscriptionFilterNode : StarshipSubscriptionFilterNode -> Value
encodeStarshipSubscriptionFilterNode (StarshipSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.float |> Encode.optional input.cargoCapacity ), ( "cargoCapacity_not", Encode.float |> Encode.optional input.cargoCapacity_not ), ( "cargoCapacity_in", (Encode.float |> Encode.list) |> Encode.optional input.cargoCapacity_in ), ( "cargoCapacity_not_in", (Encode.float |> Encode.list) |> Encode.optional input.cargoCapacity_not_in ), ( "cargoCapacity_lt", Encode.float |> Encode.optional input.cargoCapacity_lt ), ( "cargoCapacity_lte", Encode.float |> Encode.optional input.cargoCapacity_lte ), ( "cargoCapacity_gt", Encode.float |> Encode.optional input.cargoCapacity_gt ), ( "cargoCapacity_gte", Encode.float |> Encode.optional input.cargoCapacity_gte ), ( "class", Encode.string |> Encode.optional input.class ), ( "class_not", Encode.string |> Encode.optional input.class_not ), ( "class_in", (Encode.string |> Encode.list) |> Encode.optional input.class_in ), ( "class_not_in", (Encode.string |> Encode.list) |> Encode.optional input.class_not_in ), ( "class_lt", Encode.string |> Encode.optional input.class_lt ), ( "class_lte", Encode.string |> Encode.optional input.class_lte ), ( "class_gt", Encode.string |> Encode.optional input.class_gt ), ( "class_gte", Encode.string |> Encode.optional input.class_gte ), ( "class_contains", Encode.string |> Encode.optional input.class_contains ), ( "class_not_contains", Encode.string |> Encode.optional input.class_not_contains ), ( "class_starts_with", Encode.string |> Encode.optional input.class_starts_with ), ( "class_not_starts_with", Encode.string |> Encode.optional input.class_not_starts_with ), ( "class_ends_with", Encode.string |> Encode.optional input.class_ends_with ), ( "class_not_ends_with", Encode.string |> Encode.optional input.class_not_ends_with ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "consumables_not", Encode.string |> Encode.optional input.consumables_not ), ( "consumables_in", (Encode.string |> Encode.list) |> Encode.optional input.consumables_in ), ( "consumables_not_in", (Encode.string |> Encode.list) |> Encode.optional input.consumables_not_in ), ( "consumables_lt", Encode.string |> Encode.optional input.consumables_lt ), ( "consumables_lte", Encode.string |> Encode.optional input.consumables_lte ), ( "consumables_gt", Encode.string |> Encode.optional input.consumables_gt ), ( "consumables_gte", Encode.string |> Encode.optional input.consumables_gte ), ( "consumables_contains", Encode.string |> Encode.optional input.consumables_contains ), ( "consumables_not_contains", Encode.string |> Encode.optional input.consumables_not_contains ), ( "consumables_starts_with", Encode.string |> Encode.optional input.consumables_starts_with ), ( "consumables_not_starts_with", Encode.string |> Encode.optional input.consumables_not_starts_with ), ( "consumables_ends_with", Encode.string |> Encode.optional input.consumables_ends_with ), ( "consumables_not_ends_with", Encode.string |> Encode.optional input.consumables_not_ends_with ), ( "costInCredits", Encode.float |> Encode.optional input.costInCredits ), ( "costInCredits_not", Encode.float |> Encode.optional input.costInCredits_not ), ( "costInCredits_in", (Encode.float |> Encode.list) |> Encode.optional input.costInCredits_in ), ( "costInCredits_not_in", (Encode.float |> Encode.list) |> Encode.optional input.costInCredits_not_in ), ( "costInCredits_lt", Encode.float |> Encode.optional input.costInCredits_lt ), ( "costInCredits_lte", Encode.float |> Encode.optional input.costInCredits_lte ), ( "costInCredits_gt", Encode.float |> Encode.optional input.costInCredits_gt ), ( "costInCredits_gte", Encode.float |> Encode.optional input.costInCredits_gte ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "crew_not", Encode.int |> Encode.optional input.crew_not ), ( "crew_in", (Encode.int |> Encode.list) |> Encode.optional input.crew_in ), ( "crew_not_in", (Encode.int |> Encode.list) |> Encode.optional input.crew_not_in ), ( "crew_lt", Encode.int |> Encode.optional input.crew_lt ), ( "crew_lte", Encode.int |> Encode.optional input.crew_lte ), ( "crew_gt", Encode.int |> Encode.optional input.crew_gt ), ( "crew_gte", Encode.int |> Encode.optional input.crew_gte ), ( "hyperdriveRating", Encode.float |> Encode.optional input.hyperdriveRating ), ( "hyperdriveRating_not", Encode.float |> Encode.optional input.hyperdriveRating_not ), ( "hyperdriveRating_in", (Encode.float |> Encode.list) |> Encode.optional input.hyperdriveRating_in ), ( "hyperdriveRating_not_in", (Encode.float |> Encode.list) |> Encode.optional input.hyperdriveRating_not_in ), ( "hyperdriveRating_lt", Encode.float |> Encode.optional input.hyperdriveRating_lt ), ( "hyperdriveRating_lte", Encode.float |> Encode.optional input.hyperdriveRating_lte ), ( "hyperdriveRating_gt", Encode.float |> Encode.optional input.hyperdriveRating_gt ), ( "hyperdriveRating_gte", Encode.float |> Encode.optional input.hyperdriveRating_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "length", Encode.float |> Encode.optional input.length ), ( "length_not", Encode.float |> Encode.optional input.length_not ), ( "length_in", (Encode.float |> Encode.list) |> Encode.optional input.length_in ), ( "length_not_in", (Encode.float |> Encode.list) |> Encode.optional input.length_not_in ), ( "length_lt", Encode.float |> Encode.optional input.length_lt ), ( "length_lte", Encode.float |> Encode.optional input.length_lte ), ( "length_gt", Encode.float |> Encode.optional input.length_gt ), ( "length_gte", Encode.float |> Encode.optional input.length_gte ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "maxAtmospheringSpeed_not", Encode.int |> Encode.optional input.maxAtmospheringSpeed_not ), ( "maxAtmospheringSpeed_in", (Encode.int |> Encode.list) |> Encode.optional input.maxAtmospheringSpeed_in ), ( "maxAtmospheringSpeed_not_in", (Encode.int |> Encode.list) |> Encode.optional input.maxAtmospheringSpeed_not_in ), ( "maxAtmospheringSpeed_lt", Encode.int |> Encode.optional input.maxAtmospheringSpeed_lt ), ( "maxAtmospheringSpeed_lte", Encode.int |> Encode.optional input.maxAtmospheringSpeed_lte ), ( "maxAtmospheringSpeed_gt", Encode.int |> Encode.optional input.maxAtmospheringSpeed_gt ), ( "maxAtmospheringSpeed_gte", Encode.int |> Encode.optional input.maxAtmospheringSpeed_gte ), ( "mglt", Encode.int |> Encode.optional input.mglt ), ( "mglt_not", Encode.int |> Encode.optional input.mglt_not ), ( "mglt_in", (Encode.int |> Encode.list) |> Encode.optional input.mglt_in ), ( "mglt_not_in", (Encode.int |> Encode.list) |> Encode.optional input.mglt_not_in ), ( "mglt_lt", Encode.int |> Encode.optional input.mglt_lt ), ( "mglt_lte", Encode.int |> Encode.optional input.mglt_lte ), ( "mglt_gt", Encode.int |> Encode.optional input.mglt_gt ), ( "mglt_gte", Encode.int |> Encode.optional input.mglt_gte ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "passengers_not", Encode.int |> Encode.optional input.passengers_not ), ( "passengers_in", (Encode.int |> Encode.list) |> Encode.optional input.passengers_in ), ( "passengers_not_in", (Encode.int |> Encode.list) |> Encode.optional input.passengers_not_in ), ( "passengers_lt", Encode.int |> Encode.optional input.passengers_lt ), ( "passengers_lte", Encode.int |> Encode.optional input.passengers_lte ), ( "passengers_gt", Encode.int |> Encode.optional input.passengers_gt ), ( "passengers_gte", Encode.int |> Encode.optional input.passengers_gte ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "pilots_every", encodePersonFilter |> Encode.optional input.pilots_every ), ( "pilots_some", encodePersonFilter |> Encode.optional input.pilots_some ), ( "pilots_none", encodePersonFilter |> Encode.optional input.pilots_none ) ]


buildStarshipfilmsFilm : StarshipfilmsFilmRequiredFields -> (StarshipfilmsFilmOptionalFields -> StarshipfilmsFilmOptionalFields) -> StarshipfilmsFilm
buildStarshipfilmsFilm required fillOptionals =
    let
        optionals =
            fillOptionals
                { director = Absent, isPublished = Absent, openingCrawl = Absent, producers = Absent, releaseDate = Absent, charactersIds = Absent, characters = Absent, planetsIds = Absent, planets = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    StarshipfilmsFilm { director = optionals.director, episodeId = required.episodeId, isPublished = optionals.isPublished, openingCrawl = optionals.openingCrawl, producers = optionals.producers, releaseDate = optionals.releaseDate, title = required.title, charactersIds = optionals.charactersIds, characters = optionals.characters, planetsIds = optionals.planetsIds, planets = optionals.planets, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias StarshipfilmsFilmRequiredFields =
    { episodeId : Int
    , title : String
    }


type alias StarshipfilmsFilmOptionalFields =
    { director : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type alias for the `StarshipfilmsFilm` attributes. Note that this type
needs to use the `StarshipfilmsFilm` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias StarshipfilmsFilmRaw =
    { director : OptionalArgument String
    , episodeId : Int
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , title : String
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type for the StarshipfilmsFilm input object.
-}
type StarshipfilmsFilm
    = StarshipfilmsFilm StarshipfilmsFilmRaw


{-| Encode a StarshipfilmsFilm into a value that can be used as an argument.
-}
encodeStarshipfilmsFilm : StarshipfilmsFilm -> Value
encodeStarshipfilmsFilm (StarshipfilmsFilm input) =
    Encode.maybeObject
        [ ( "director", Encode.string |> Encode.optional input.director ), ( "episodeId", Encode.int input.episodeId |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "producers", (Encode.string |> Encode.list) |> Encode.optional input.producers ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "title", Encode.string input.title |> Just ), ( "charactersIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.charactersIds ), ( "characters", (encodeFilmcharactersPerson |> Encode.list) |> Encode.optional input.characters ), ( "planetsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.planetsIds ), ( "planets", (encodeFilmplanetsPlanet |> Encode.list) |> Encode.optional input.planets ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodeFilmspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodeFilmstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodeFilmvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildStarshippilotsPerson : StarshippilotsPersonRequiredFields -> (StarshippilotsPersonOptionalFields -> StarshippilotsPersonOptionalFields) -> StarshippilotsPerson
buildStarshippilotsPerson required fillOptionals =
    let
        optionals =
            fillOptionals
                { birthYear = Absent, eyeColor = Absent, gender = Absent, hairColor = Absent, height = Absent, isPublished = Absent, mass = Absent, skinColor = Absent, homeworldId = Absent, homeworld = Absent, filmsIds = Absent, films = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    StarshippilotsPerson { birthYear = optionals.birthYear, eyeColor = optionals.eyeColor, gender = optionals.gender, hairColor = optionals.hairColor, height = optionals.height, isPublished = optionals.isPublished, mass = optionals.mass, name = required.name, skinColor = optionals.skinColor, homeworldId = optionals.homeworldId, homeworld = optionals.homeworld, filmsIds = optionals.filmsIds, films = optionals.films, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias StarshippilotsPersonRequiredFields =
    { name : String }


type alias StarshippilotsPersonOptionalFields =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type alias for the `StarshippilotsPerson` attributes. Note that this type
needs to use the `StarshippilotsPerson` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias StarshippilotsPersonRaw =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type for the StarshippilotsPerson input object.
-}
type StarshippilotsPerson
    = StarshippilotsPerson StarshippilotsPersonRaw


{-| Encode a StarshippilotsPerson into a value that can be used as an argument.
-}
encodeStarshippilotsPerson : StarshippilotsPerson -> Value
encodeStarshippilotsPerson (StarshippilotsPerson input) =
    Encode.maybeObject
        [ ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "eyeColor", (Encode.enum Api.Enum.PersonEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "hairColor", (Encode.enum Api.Enum.PersonHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "height", Encode.int |> Encode.optional input.height ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.PersonSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "homeworldId", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.homeworldId ), ( "homeworld", encodePersonhomeworldPlanet |> Encode.optional input.homeworld ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePersonfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodePersonspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodePersonstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodePersonvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildUpdateAsset : UpdateAssetRequiredFields -> (UpdateAssetOptionalFields -> UpdateAssetOptionalFields) -> UpdateAsset
buildUpdateAsset required fillOptionals =
    let
        optionals =
            fillOptionals
                { fileName = Absent, handle = Absent, height = Absent, mimeType = Absent, size = Absent, url = Absent, width = Absent }
    in
    { fileName = optionals.fileName, handle = optionals.handle, height = optionals.height, id = required.id, mimeType = optionals.mimeType, size = optionals.size, url = optionals.url, width = optionals.width }


type alias UpdateAssetRequiredFields =
    { id : Api.ScalarCodecs.Id }


type alias UpdateAssetOptionalFields =
    { fileName : OptionalArgument String
    , handle : OptionalArgument String
    , height : OptionalArgument Float
    , mimeType : OptionalArgument String
    , size : OptionalArgument Float
    , url : OptionalArgument String
    , width : OptionalArgument Float
    }


{-| Type for the UpdateAsset input object.
-}
type alias UpdateAsset =
    { fileName : OptionalArgument String
    , handle : OptionalArgument String
    , height : OptionalArgument Float
    , id : Api.ScalarCodecs.Id
    , mimeType : OptionalArgument String
    , size : OptionalArgument Float
    , url : OptionalArgument String
    , width : OptionalArgument Float
    }


{-| Encode a UpdateAsset into a value that can be used as an argument.
-}
encodeUpdateAsset : UpdateAsset -> Value
encodeUpdateAsset input =
    Encode.maybeObject
        [ ( "fileName", Encode.string |> Encode.optional input.fileName ), ( "handle", Encode.string |> Encode.optional input.handle ), ( "height", Encode.float |> Encode.optional input.height ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) input.id |> Just ), ( "mimeType", Encode.string |> Encode.optional input.mimeType ), ( "size", Encode.float |> Encode.optional input.size ), ( "url", Encode.string |> Encode.optional input.url ), ( "width", Encode.float |> Encode.optional input.width ) ]


buildUpdateFilm : UpdateFilmRequiredFields -> (UpdateFilmOptionalFields -> UpdateFilmOptionalFields) -> UpdateFilm
buildUpdateFilm required fillOptionals =
    let
        optionals =
            fillOptionals
                { director = Absent, episodeId = Absent, isPublished = Absent, openingCrawl = Absent, producers = Absent, releaseDate = Absent, title = Absent, charactersIds = Absent, characters = Absent, planetsIds = Absent, planets = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    UpdateFilm { director = optionals.director, episodeId = optionals.episodeId, id = required.id, isPublished = optionals.isPublished, openingCrawl = optionals.openingCrawl, producers = optionals.producers, releaseDate = optionals.releaseDate, title = optionals.title, charactersIds = optionals.charactersIds, characters = optionals.characters, planetsIds = optionals.planetsIds, planets = optionals.planets, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias UpdateFilmRequiredFields =
    { id : Api.ScalarCodecs.Id }


type alias UpdateFilmOptionalFields =
    { director : OptionalArgument String
    , episodeId : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , title : OptionalArgument String
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type alias for the `UpdateFilm` attributes. Note that this type
needs to use the `UpdateFilm` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias UpdateFilmRaw =
    { director : OptionalArgument String
    , episodeId : OptionalArgument Int
    , id : Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , title : OptionalArgument String
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type for the UpdateFilm input object.
-}
type UpdateFilm
    = UpdateFilm UpdateFilmRaw


{-| Encode a UpdateFilm into a value that can be used as an argument.
-}
encodeUpdateFilm : UpdateFilm -> Value
encodeUpdateFilm (UpdateFilm input) =
    Encode.maybeObject
        [ ( "director", Encode.string |> Encode.optional input.director ), ( "episodeId", Encode.int |> Encode.optional input.episodeId ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) input.id |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "producers", (Encode.string |> Encode.list) |> Encode.optional input.producers ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "title", Encode.string |> Encode.optional input.title ), ( "charactersIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.charactersIds ), ( "characters", (encodeFilmcharactersPerson |> Encode.list) |> Encode.optional input.characters ), ( "planetsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.planetsIds ), ( "planets", (encodeFilmplanetsPlanet |> Encode.list) |> Encode.optional input.planets ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodeFilmspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodeFilmstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodeFilmvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildUpdatePerson : UpdatePersonRequiredFields -> (UpdatePersonOptionalFields -> UpdatePersonOptionalFields) -> UpdatePerson
buildUpdatePerson required fillOptionals =
    let
        optionals =
            fillOptionals
                { birthYear = Absent, eyeColor = Absent, gender = Absent, hairColor = Absent, height = Absent, isPublished = Absent, mass = Absent, name = Absent, skinColor = Absent, homeworldId = Absent, homeworld = Absent, filmsIds = Absent, films = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    UpdatePerson { birthYear = optionals.birthYear, eyeColor = optionals.eyeColor, gender = optionals.gender, hairColor = optionals.hairColor, height = optionals.height, id = required.id, isPublished = optionals.isPublished, mass = optionals.mass, name = optionals.name, skinColor = optionals.skinColor, homeworldId = optionals.homeworldId, homeworld = optionals.homeworld, filmsIds = optionals.filmsIds, films = optionals.films, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias UpdatePersonRequiredFields =
    { id : Api.ScalarCodecs.Id }


type alias UpdatePersonOptionalFields =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , name : OptionalArgument String
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type alias for the `UpdatePerson` attributes. Note that this type
needs to use the `UpdatePerson` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias UpdatePersonRaw =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , id : Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , name : OptionalArgument String
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type for the UpdatePerson input object.
-}
type UpdatePerson
    = UpdatePerson UpdatePersonRaw


{-| Encode a UpdatePerson into a value that can be used as an argument.
-}
encodeUpdatePerson : UpdatePerson -> Value
encodeUpdatePerson (UpdatePerson input) =
    Encode.maybeObject
        [ ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "eyeColor", (Encode.enum Api.Enum.PersonEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "hairColor", (Encode.enum Api.Enum.PersonHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "height", Encode.int |> Encode.optional input.height ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) input.id |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "name", Encode.string |> Encode.optional input.name ), ( "skinColor", (Encode.enum Api.Enum.PersonSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "homeworldId", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.homeworldId ), ( "homeworld", encodePersonhomeworldPlanet |> Encode.optional input.homeworld ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePersonfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodePersonspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodePersonstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodePersonvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildUpdatePlanet : UpdatePlanetRequiredFields -> (UpdatePlanetOptionalFields -> UpdatePlanetOptionalFields) -> UpdatePlanet
buildUpdatePlanet required fillOptionals =
    let
        optionals =
            fillOptionals
                { climate = Absent, diameter = Absent, gravity = Absent, isPublished = Absent, name = Absent, orbitalPeriod = Absent, population = Absent, rotationPeriod = Absent, surfaceWater = Absent, terrain = Absent, filmsIds = Absent, films = Absent, residentsIds = Absent, residents = Absent }
    in
    UpdatePlanet { climate = optionals.climate, diameter = optionals.diameter, gravity = optionals.gravity, id = required.id, isPublished = optionals.isPublished, name = optionals.name, orbitalPeriod = optionals.orbitalPeriod, population = optionals.population, rotationPeriod = optionals.rotationPeriod, surfaceWater = optionals.surfaceWater, terrain = optionals.terrain, filmsIds = optionals.filmsIds, films = optionals.films, residentsIds = optionals.residentsIds, residents = optionals.residents }


type alias UpdatePlanetRequiredFields =
    { id : Api.ScalarCodecs.Id }


type alias UpdatePlanetOptionalFields =
    { climate : OptionalArgument (List String)
    , diameter : OptionalArgument Int
    , gravity : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , name : OptionalArgument String
    , orbitalPeriod : OptionalArgument Int
    , population : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , terrain : OptionalArgument (List String)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PlanetfilmsFilm)
    , residentsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , residents : OptionalArgument (List PlanetresidentsPerson)
    }


{-| Type alias for the `UpdatePlanet` attributes. Note that this type
needs to use the `UpdatePlanet` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias UpdatePlanetRaw =
    { climate : OptionalArgument (List String)
    , diameter : OptionalArgument Int
    , gravity : OptionalArgument String
    , id : Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , name : OptionalArgument String
    , orbitalPeriod : OptionalArgument Int
    , population : OptionalArgument Float
    , rotationPeriod : OptionalArgument Int
    , surfaceWater : OptionalArgument Float
    , terrain : OptionalArgument (List String)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PlanetfilmsFilm)
    , residentsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , residents : OptionalArgument (List PlanetresidentsPerson)
    }


{-| Type for the UpdatePlanet input object.
-}
type UpdatePlanet
    = UpdatePlanet UpdatePlanetRaw


{-| Encode a UpdatePlanet into a value that can be used as an argument.
-}
encodeUpdatePlanet : UpdatePlanet -> Value
encodeUpdatePlanet (UpdatePlanet input) =
    Encode.maybeObject
        [ ( "climate", (Encode.string |> Encode.list) |> Encode.optional input.climate ), ( "diameter", Encode.int |> Encode.optional input.diameter ), ( "gravity", Encode.string |> Encode.optional input.gravity ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) input.id |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "name", Encode.string |> Encode.optional input.name ), ( "orbitalPeriod", Encode.int |> Encode.optional input.orbitalPeriod ), ( "population", Encode.float |> Encode.optional input.population ), ( "rotationPeriod", Encode.int |> Encode.optional input.rotationPeriod ), ( "surfaceWater", Encode.float |> Encode.optional input.surfaceWater ), ( "terrain", (Encode.string |> Encode.list) |> Encode.optional input.terrain ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePlanetfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "residentsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.residentsIds ), ( "residents", (encodePlanetresidentsPerson |> Encode.list) |> Encode.optional input.residents ) ]


buildUpdateSpecies : UpdateSpeciesRequiredFields -> (UpdateSpeciesOptionalFields -> UpdateSpeciesOptionalFields) -> UpdateSpecies
buildUpdateSpecies required fillOptionals =
    let
        optionals =
            fillOptionals
                { averageHeight = Absent, averageLifespan = Absent, classification = Absent, designation = Absent, eyeColor = Absent, hairColor = Absent, isPublished = Absent, language = Absent, name = Absent, skinColor = Absent, filmsIds = Absent, films = Absent, peopleIds = Absent, people = Absent }
    in
    UpdateSpecies { averageHeight = optionals.averageHeight, averageLifespan = optionals.averageLifespan, classification = optionals.classification, designation = optionals.designation, eyeColor = optionals.eyeColor, hairColor = optionals.hairColor, id = required.id, isPublished = optionals.isPublished, language = optionals.language, name = optionals.name, skinColor = optionals.skinColor, filmsIds = optionals.filmsIds, films = optionals.films, peopleIds = optionals.peopleIds, people = optionals.people }


type alias UpdateSpeciesRequiredFields =
    { id : Api.ScalarCodecs.Id }


type alias UpdateSpeciesOptionalFields =
    { averageHeight : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , classification : OptionalArgument String
    , designation : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.SpeciesEyeColor.SpeciesEyeColor)
    , hairColor : OptionalArgument (List Api.Enum.SpeciesHairColor.SpeciesHairColor)
    , isPublished : OptionalArgument Bool
    , language : OptionalArgument String
    , name : OptionalArgument String
    , skinColor : OptionalArgument (List Api.Enum.SpeciesSkinColor.SpeciesSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List SpeciesfilmsFilm)
    , peopleIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , people : OptionalArgument (List SpeciespeoplePerson)
    }


{-| Type alias for the `UpdateSpecies` attributes. Note that this type
needs to use the `UpdateSpecies` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias UpdateSpeciesRaw =
    { averageHeight : OptionalArgument Int
    , averageLifespan : OptionalArgument Int
    , classification : OptionalArgument String
    , designation : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.SpeciesEyeColor.SpeciesEyeColor)
    , hairColor : OptionalArgument (List Api.Enum.SpeciesHairColor.SpeciesHairColor)
    , id : Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , language : OptionalArgument String
    , name : OptionalArgument String
    , skinColor : OptionalArgument (List Api.Enum.SpeciesSkinColor.SpeciesSkinColor)
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List SpeciesfilmsFilm)
    , peopleIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , people : OptionalArgument (List SpeciespeoplePerson)
    }


{-| Type for the UpdateSpecies input object.
-}
type UpdateSpecies
    = UpdateSpecies UpdateSpeciesRaw


{-| Encode a UpdateSpecies into a value that can be used as an argument.
-}
encodeUpdateSpecies : UpdateSpecies -> Value
encodeUpdateSpecies (UpdateSpecies input) =
    Encode.maybeObject
        [ ( "averageHeight", Encode.int |> Encode.optional input.averageHeight ), ( "averageLifespan", Encode.int |> Encode.optional input.averageLifespan ), ( "classification", Encode.string |> Encode.optional input.classification ), ( "designation", Encode.string |> Encode.optional input.designation ), ( "eyeColor", (Encode.enum Api.Enum.SpeciesEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "hairColor", (Encode.enum Api.Enum.SpeciesHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) input.id |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "language", Encode.string |> Encode.optional input.language ), ( "name", Encode.string |> Encode.optional input.name ), ( "skinColor", (Encode.enum Api.Enum.SpeciesSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeSpeciesfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "peopleIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.peopleIds ), ( "people", (encodeSpeciespeoplePerson |> Encode.list) |> Encode.optional input.people ) ]


buildUpdateStarship : UpdateStarshipRequiredFields -> (UpdateStarshipOptionalFields -> UpdateStarshipOptionalFields) -> UpdateStarship
buildUpdateStarship required fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, class = Absent, consumables = Absent, costInCredits = Absent, crew = Absent, hyperdriveRating = Absent, isPublished = Absent, length = Absent, manufacturer = Absent, maxAtmospheringSpeed = Absent, mglt = Absent, name = Absent, passengers = Absent, filmsIds = Absent, films = Absent, pilotsIds = Absent, pilots = Absent }
    in
    UpdateStarship { cargoCapacity = optionals.cargoCapacity, class = optionals.class, consumables = optionals.consumables, costInCredits = optionals.costInCredits, crew = optionals.crew, hyperdriveRating = optionals.hyperdriveRating, id = required.id, isPublished = optionals.isPublished, length = optionals.length, manufacturer = optionals.manufacturer, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, mglt = optionals.mglt, name = optionals.name, passengers = optionals.passengers, filmsIds = optionals.filmsIds, films = optionals.films, pilotsIds = optionals.pilotsIds, pilots = optionals.pilots }


type alias UpdateStarshipRequiredFields =
    { id : Api.ScalarCodecs.Id }


type alias UpdateStarshipOptionalFields =
    { cargoCapacity : OptionalArgument Float
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , crew : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , mglt : OptionalArgument Int
    , name : OptionalArgument String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List StarshipfilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List StarshippilotsPerson)
    }


{-| Type alias for the `UpdateStarship` attributes. Note that this type
needs to use the `UpdateStarship` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias UpdateStarshipRaw =
    { cargoCapacity : OptionalArgument Float
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Float
    , crew : OptionalArgument Int
    , hyperdriveRating : OptionalArgument Float
    , id : Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , mglt : OptionalArgument Int
    , name : OptionalArgument String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List StarshipfilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List StarshippilotsPerson)
    }


{-| Type for the UpdateStarship input object.
-}
type UpdateStarship
    = UpdateStarship UpdateStarshipRaw


{-| Encode a UpdateStarship into a value that can be used as an argument.
-}
encodeUpdateStarship : UpdateStarship -> Value
encodeUpdateStarship (UpdateStarship input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.float |> Encode.optional input.cargoCapacity ), ( "class", Encode.string |> Encode.optional input.class ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "costInCredits", Encode.float |> Encode.optional input.costInCredits ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "hyperdriveRating", Encode.float |> Encode.optional input.hyperdriveRating ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) input.id |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "length", Encode.float |> Encode.optional input.length ), ( "manufacturer", (Encode.string |> Encode.list) |> Encode.optional input.manufacturer ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "mglt", Encode.int |> Encode.optional input.mglt ), ( "name", Encode.string |> Encode.optional input.name ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeStarshipfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "pilotsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.pilotsIds ), ( "pilots", (encodeStarshippilotsPerson |> Encode.list) |> Encode.optional input.pilots ) ]


buildUpdateVehicle : UpdateVehicleRequiredFields -> (UpdateVehicleOptionalFields -> UpdateVehicleOptionalFields) -> UpdateVehicle
buildUpdateVehicle required fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, class = Absent, consumables = Absent, costInCredits = Absent, crew = Absent, isPublished = Absent, length = Absent, manufacturer = Absent, maxAtmospheringSpeed = Absent, model = Absent, name = Absent, passengers = Absent, filmsIds = Absent, films = Absent, pilotsIds = Absent, pilots = Absent }
    in
    UpdateVehicle { cargoCapacity = optionals.cargoCapacity, class = optionals.class, consumables = optionals.consumables, costInCredits = optionals.costInCredits, crew = optionals.crew, id = required.id, isPublished = optionals.isPublished, length = optionals.length, manufacturer = optionals.manufacturer, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, model = optionals.model, name = optionals.name, passengers = optionals.passengers, filmsIds = optionals.filmsIds, films = optionals.films, pilotsIds = optionals.pilotsIds, pilots = optionals.pilots }


type alias UpdateVehicleRequiredFields =
    { id : Api.ScalarCodecs.Id }


type alias UpdateVehicleOptionalFields =
    { cargoCapacity : OptionalArgument Int
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , crew : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , model : OptionalArgument String
    , name : OptionalArgument String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List VehiclefilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List VehiclepilotsPerson)
    }


{-| Type alias for the `UpdateVehicle` attributes. Note that this type
needs to use the `UpdateVehicle` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias UpdateVehicleRaw =
    { cargoCapacity : OptionalArgument Int
    , class : OptionalArgument String
    , consumables : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , crew : OptionalArgument Int
    , id : Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , length : OptionalArgument Float
    , manufacturer : OptionalArgument (List String)
    , maxAtmospheringSpeed : OptionalArgument Int
    , model : OptionalArgument String
    , name : OptionalArgument String
    , passengers : OptionalArgument Int
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List VehiclefilmsFilm)
    , pilotsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , pilots : OptionalArgument (List VehiclepilotsPerson)
    }


{-| Type for the UpdateVehicle input object.
-}
type UpdateVehicle
    = UpdateVehicle UpdateVehicleRaw


{-| Encode a UpdateVehicle into a value that can be used as an argument.
-}
encodeUpdateVehicle : UpdateVehicle -> Value
encodeUpdateVehicle (UpdateVehicle input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.int |> Encode.optional input.cargoCapacity ), ( "class", Encode.string |> Encode.optional input.class ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "costInCredits", Encode.int |> Encode.optional input.costInCredits ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) input.id |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "length", Encode.float |> Encode.optional input.length ), ( "manufacturer", (Encode.string |> Encode.list) |> Encode.optional input.manufacturer ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "model", Encode.string |> Encode.optional input.model ), ( "name", Encode.string |> Encode.optional input.name ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodeVehiclefilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "pilotsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.pilotsIds ), ( "pilots", (encodeVehiclepilotsPerson |> Encode.list) |> Encode.optional input.pilots ) ]


buildVehicleFilter : (VehicleFilterOptionalFields -> VehicleFilterOptionalFields) -> VehicleFilter
buildVehicleFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, cargoCapacity = Absent, cargoCapacity_not = Absent, cargoCapacity_in = Absent, cargoCapacity_not_in = Absent, cargoCapacity_lt = Absent, cargoCapacity_lte = Absent, cargoCapacity_gt = Absent, cargoCapacity_gte = Absent, class = Absent, class_not = Absent, class_in = Absent, class_not_in = Absent, class_lt = Absent, class_lte = Absent, class_gt = Absent, class_gte = Absent, class_contains = Absent, class_not_contains = Absent, class_starts_with = Absent, class_not_starts_with = Absent, class_ends_with = Absent, class_not_ends_with = Absent, consumables = Absent, consumables_not = Absent, consumables_in = Absent, consumables_not_in = Absent, consumables_lt = Absent, consumables_lte = Absent, consumables_gt = Absent, consumables_gte = Absent, consumables_contains = Absent, consumables_not_contains = Absent, consumables_starts_with = Absent, consumables_not_starts_with = Absent, consumables_ends_with = Absent, consumables_not_ends_with = Absent, costInCredits = Absent, costInCredits_not = Absent, costInCredits_in = Absent, costInCredits_not_in = Absent, costInCredits_lt = Absent, costInCredits_lte = Absent, costInCredits_gt = Absent, costInCredits_gte = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, crew = Absent, crew_not = Absent, crew_in = Absent, crew_not_in = Absent, crew_lt = Absent, crew_lte = Absent, crew_gt = Absent, crew_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, length = Absent, length_not = Absent, length_in = Absent, length_not_in = Absent, length_lt = Absent, length_lte = Absent, length_gt = Absent, length_gte = Absent, maxAtmospheringSpeed = Absent, maxAtmospheringSpeed_not = Absent, maxAtmospheringSpeed_in = Absent, maxAtmospheringSpeed_not_in = Absent, maxAtmospheringSpeed_lt = Absent, maxAtmospheringSpeed_lte = Absent, maxAtmospheringSpeed_gt = Absent, maxAtmospheringSpeed_gte = Absent, model = Absent, model_not = Absent, model_in = Absent, model_not_in = Absent, model_lt = Absent, model_lte = Absent, model_gt = Absent, model_gte = Absent, model_contains = Absent, model_not_contains = Absent, model_starts_with = Absent, model_not_starts_with = Absent, model_ends_with = Absent, model_not_ends_with = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, passengers = Absent, passengers_not = Absent, passengers_in = Absent, passengers_not_in = Absent, passengers_lt = Absent, passengers_lte = Absent, passengers_gt = Absent, passengers_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, pilots_every = Absent, pilots_some = Absent, pilots_none = Absent }
    in
    VehicleFilter { and = optionals.and, or = optionals.or, cargoCapacity = optionals.cargoCapacity, cargoCapacity_not = optionals.cargoCapacity_not, cargoCapacity_in = optionals.cargoCapacity_in, cargoCapacity_not_in = optionals.cargoCapacity_not_in, cargoCapacity_lt = optionals.cargoCapacity_lt, cargoCapacity_lte = optionals.cargoCapacity_lte, cargoCapacity_gt = optionals.cargoCapacity_gt, cargoCapacity_gte = optionals.cargoCapacity_gte, class = optionals.class, class_not = optionals.class_not, class_in = optionals.class_in, class_not_in = optionals.class_not_in, class_lt = optionals.class_lt, class_lte = optionals.class_lte, class_gt = optionals.class_gt, class_gte = optionals.class_gte, class_contains = optionals.class_contains, class_not_contains = optionals.class_not_contains, class_starts_with = optionals.class_starts_with, class_not_starts_with = optionals.class_not_starts_with, class_ends_with = optionals.class_ends_with, class_not_ends_with = optionals.class_not_ends_with, consumables = optionals.consumables, consumables_not = optionals.consumables_not, consumables_in = optionals.consumables_in, consumables_not_in = optionals.consumables_not_in, consumables_lt = optionals.consumables_lt, consumables_lte = optionals.consumables_lte, consumables_gt = optionals.consumables_gt, consumables_gte = optionals.consumables_gte, consumables_contains = optionals.consumables_contains, consumables_not_contains = optionals.consumables_not_contains, consumables_starts_with = optionals.consumables_starts_with, consumables_not_starts_with = optionals.consumables_not_starts_with, consumables_ends_with = optionals.consumables_ends_with, consumables_not_ends_with = optionals.consumables_not_ends_with, costInCredits = optionals.costInCredits, costInCredits_not = optionals.costInCredits_not, costInCredits_in = optionals.costInCredits_in, costInCredits_not_in = optionals.costInCredits_not_in, costInCredits_lt = optionals.costInCredits_lt, costInCredits_lte = optionals.costInCredits_lte, costInCredits_gt = optionals.costInCredits_gt, costInCredits_gte = optionals.costInCredits_gte, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, crew = optionals.crew, crew_not = optionals.crew_not, crew_in = optionals.crew_in, crew_not_in = optionals.crew_not_in, crew_lt = optionals.crew_lt, crew_lte = optionals.crew_lte, crew_gt = optionals.crew_gt, crew_gte = optionals.crew_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, length = optionals.length, length_not = optionals.length_not, length_in = optionals.length_in, length_not_in = optionals.length_not_in, length_lt = optionals.length_lt, length_lte = optionals.length_lte, length_gt = optionals.length_gt, length_gte = optionals.length_gte, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, maxAtmospheringSpeed_not = optionals.maxAtmospheringSpeed_not, maxAtmospheringSpeed_in = optionals.maxAtmospheringSpeed_in, maxAtmospheringSpeed_not_in = optionals.maxAtmospheringSpeed_not_in, maxAtmospheringSpeed_lt = optionals.maxAtmospheringSpeed_lt, maxAtmospheringSpeed_lte = optionals.maxAtmospheringSpeed_lte, maxAtmospheringSpeed_gt = optionals.maxAtmospheringSpeed_gt, maxAtmospheringSpeed_gte = optionals.maxAtmospheringSpeed_gte, model = optionals.model, model_not = optionals.model_not, model_in = optionals.model_in, model_not_in = optionals.model_not_in, model_lt = optionals.model_lt, model_lte = optionals.model_lte, model_gt = optionals.model_gt, model_gte = optionals.model_gte, model_contains = optionals.model_contains, model_not_contains = optionals.model_not_contains, model_starts_with = optionals.model_starts_with, model_not_starts_with = optionals.model_not_starts_with, model_ends_with = optionals.model_ends_with, model_not_ends_with = optionals.model_not_ends_with, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, passengers = optionals.passengers, passengers_not = optionals.passengers_not, passengers_in = optionals.passengers_in, passengers_not_in = optionals.passengers_not_in, passengers_lt = optionals.passengers_lt, passengers_lte = optionals.passengers_lte, passengers_gt = optionals.passengers_gt, passengers_gte = optionals.passengers_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, pilots_every = optionals.pilots_every, pilots_some = optionals.pilots_some, pilots_none = optionals.pilots_none }


type alias VehicleFilterOptionalFields =
    { and : OptionalArgument (List VehicleFilter)
    , or : OptionalArgument (List VehicleFilter)
    , cargoCapacity : OptionalArgument Int
    , cargoCapacity_not : OptionalArgument Int
    , cargoCapacity_in : OptionalArgument (List Int)
    , cargoCapacity_not_in : OptionalArgument (List Int)
    , cargoCapacity_lt : OptionalArgument Int
    , cargoCapacity_lte : OptionalArgument Int
    , cargoCapacity_gt : OptionalArgument Int
    , cargoCapacity_gte : OptionalArgument Int
    , class : OptionalArgument String
    , class_not : OptionalArgument String
    , class_in : OptionalArgument (List String)
    , class_not_in : OptionalArgument (List String)
    , class_lt : OptionalArgument String
    , class_lte : OptionalArgument String
    , class_gt : OptionalArgument String
    , class_gte : OptionalArgument String
    , class_contains : OptionalArgument String
    , class_not_contains : OptionalArgument String
    , class_starts_with : OptionalArgument String
    , class_not_starts_with : OptionalArgument String
    , class_ends_with : OptionalArgument String
    , class_not_ends_with : OptionalArgument String
    , consumables : OptionalArgument String
    , consumables_not : OptionalArgument String
    , consumables_in : OptionalArgument (List String)
    , consumables_not_in : OptionalArgument (List String)
    , consumables_lt : OptionalArgument String
    , consumables_lte : OptionalArgument String
    , consumables_gt : OptionalArgument String
    , consumables_gte : OptionalArgument String
    , consumables_contains : OptionalArgument String
    , consumables_not_contains : OptionalArgument String
    , consumables_starts_with : OptionalArgument String
    , consumables_not_starts_with : OptionalArgument String
    , consumables_ends_with : OptionalArgument String
    , consumables_not_ends_with : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , costInCredits_not : OptionalArgument Int
    , costInCredits_in : OptionalArgument (List Int)
    , costInCredits_not_in : OptionalArgument (List Int)
    , costInCredits_lt : OptionalArgument Int
    , costInCredits_lte : OptionalArgument Int
    , costInCredits_gt : OptionalArgument Int
    , costInCredits_gte : OptionalArgument Int
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , crew : OptionalArgument Int
    , crew_not : OptionalArgument Int
    , crew_in : OptionalArgument (List Int)
    , crew_not_in : OptionalArgument (List Int)
    , crew_lt : OptionalArgument Int
    , crew_lte : OptionalArgument Int
    , crew_gt : OptionalArgument Int
    , crew_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , length : OptionalArgument Float
    , length_not : OptionalArgument Float
    , length_in : OptionalArgument (List Float)
    , length_not_in : OptionalArgument (List Float)
    , length_lt : OptionalArgument Float
    , length_lte : OptionalArgument Float
    , length_gt : OptionalArgument Float
    , length_gte : OptionalArgument Float
    , maxAtmospheringSpeed : OptionalArgument Int
    , maxAtmospheringSpeed_not : OptionalArgument Int
    , maxAtmospheringSpeed_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_not_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_lt : OptionalArgument Int
    , maxAtmospheringSpeed_lte : OptionalArgument Int
    , maxAtmospheringSpeed_gt : OptionalArgument Int
    , maxAtmospheringSpeed_gte : OptionalArgument Int
    , model : OptionalArgument String
    , model_not : OptionalArgument String
    , model_in : OptionalArgument (List String)
    , model_not_in : OptionalArgument (List String)
    , model_lt : OptionalArgument String
    , model_lte : OptionalArgument String
    , model_gt : OptionalArgument String
    , model_gte : OptionalArgument String
    , model_contains : OptionalArgument String
    , model_not_contains : OptionalArgument String
    , model_starts_with : OptionalArgument String
    , model_not_starts_with : OptionalArgument String
    , model_ends_with : OptionalArgument String
    , model_not_ends_with : OptionalArgument String
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , passengers : OptionalArgument Int
    , passengers_not : OptionalArgument Int
    , passengers_in : OptionalArgument (List Int)
    , passengers_not_in : OptionalArgument (List Int)
    , passengers_lt : OptionalArgument Int
    , passengers_lte : OptionalArgument Int
    , passengers_gt : OptionalArgument Int
    , passengers_gte : OptionalArgument Int
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , pilots_every : OptionalArgument PersonFilter
    , pilots_some : OptionalArgument PersonFilter
    , pilots_none : OptionalArgument PersonFilter
    }


{-| Type alias for the `VehicleFilter` attributes. Note that this type
needs to use the `VehicleFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias VehicleFilterRaw =
    { and : OptionalArgument (List VehicleFilter)
    , or : OptionalArgument (List VehicleFilter)
    , cargoCapacity : OptionalArgument Int
    , cargoCapacity_not : OptionalArgument Int
    , cargoCapacity_in : OptionalArgument (List Int)
    , cargoCapacity_not_in : OptionalArgument (List Int)
    , cargoCapacity_lt : OptionalArgument Int
    , cargoCapacity_lte : OptionalArgument Int
    , cargoCapacity_gt : OptionalArgument Int
    , cargoCapacity_gte : OptionalArgument Int
    , class : OptionalArgument String
    , class_not : OptionalArgument String
    , class_in : OptionalArgument (List String)
    , class_not_in : OptionalArgument (List String)
    , class_lt : OptionalArgument String
    , class_lte : OptionalArgument String
    , class_gt : OptionalArgument String
    , class_gte : OptionalArgument String
    , class_contains : OptionalArgument String
    , class_not_contains : OptionalArgument String
    , class_starts_with : OptionalArgument String
    , class_not_starts_with : OptionalArgument String
    , class_ends_with : OptionalArgument String
    , class_not_ends_with : OptionalArgument String
    , consumables : OptionalArgument String
    , consumables_not : OptionalArgument String
    , consumables_in : OptionalArgument (List String)
    , consumables_not_in : OptionalArgument (List String)
    , consumables_lt : OptionalArgument String
    , consumables_lte : OptionalArgument String
    , consumables_gt : OptionalArgument String
    , consumables_gte : OptionalArgument String
    , consumables_contains : OptionalArgument String
    , consumables_not_contains : OptionalArgument String
    , consumables_starts_with : OptionalArgument String
    , consumables_not_starts_with : OptionalArgument String
    , consumables_ends_with : OptionalArgument String
    , consumables_not_ends_with : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , costInCredits_not : OptionalArgument Int
    , costInCredits_in : OptionalArgument (List Int)
    , costInCredits_not_in : OptionalArgument (List Int)
    , costInCredits_lt : OptionalArgument Int
    , costInCredits_lte : OptionalArgument Int
    , costInCredits_gt : OptionalArgument Int
    , costInCredits_gte : OptionalArgument Int
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , crew : OptionalArgument Int
    , crew_not : OptionalArgument Int
    , crew_in : OptionalArgument (List Int)
    , crew_not_in : OptionalArgument (List Int)
    , crew_lt : OptionalArgument Int
    , crew_lte : OptionalArgument Int
    , crew_gt : OptionalArgument Int
    , crew_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , length : OptionalArgument Float
    , length_not : OptionalArgument Float
    , length_in : OptionalArgument (List Float)
    , length_not_in : OptionalArgument (List Float)
    , length_lt : OptionalArgument Float
    , length_lte : OptionalArgument Float
    , length_gt : OptionalArgument Float
    , length_gte : OptionalArgument Float
    , maxAtmospheringSpeed : OptionalArgument Int
    , maxAtmospheringSpeed_not : OptionalArgument Int
    , maxAtmospheringSpeed_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_not_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_lt : OptionalArgument Int
    , maxAtmospheringSpeed_lte : OptionalArgument Int
    , maxAtmospheringSpeed_gt : OptionalArgument Int
    , maxAtmospheringSpeed_gte : OptionalArgument Int
    , model : OptionalArgument String
    , model_not : OptionalArgument String
    , model_in : OptionalArgument (List String)
    , model_not_in : OptionalArgument (List String)
    , model_lt : OptionalArgument String
    , model_lte : OptionalArgument String
    , model_gt : OptionalArgument String
    , model_gte : OptionalArgument String
    , model_contains : OptionalArgument String
    , model_not_contains : OptionalArgument String
    , model_starts_with : OptionalArgument String
    , model_not_starts_with : OptionalArgument String
    , model_ends_with : OptionalArgument String
    , model_not_ends_with : OptionalArgument String
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , passengers : OptionalArgument Int
    , passengers_not : OptionalArgument Int
    , passengers_in : OptionalArgument (List Int)
    , passengers_not_in : OptionalArgument (List Int)
    , passengers_lt : OptionalArgument Int
    , passengers_lte : OptionalArgument Int
    , passengers_gt : OptionalArgument Int
    , passengers_gte : OptionalArgument Int
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , pilots_every : OptionalArgument PersonFilter
    , pilots_some : OptionalArgument PersonFilter
    , pilots_none : OptionalArgument PersonFilter
    }


{-| Type for the VehicleFilter input object.
-}
type VehicleFilter
    = VehicleFilter VehicleFilterRaw


{-| Encode a VehicleFilter into a value that can be used as an argument.
-}
encodeVehicleFilter : VehicleFilter -> Value
encodeVehicleFilter (VehicleFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeVehicleFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeVehicleFilter |> Encode.list) |> Encode.optional input.or ), ( "cargoCapacity", Encode.int |> Encode.optional input.cargoCapacity ), ( "cargoCapacity_not", Encode.int |> Encode.optional input.cargoCapacity_not ), ( "cargoCapacity_in", (Encode.int |> Encode.list) |> Encode.optional input.cargoCapacity_in ), ( "cargoCapacity_not_in", (Encode.int |> Encode.list) |> Encode.optional input.cargoCapacity_not_in ), ( "cargoCapacity_lt", Encode.int |> Encode.optional input.cargoCapacity_lt ), ( "cargoCapacity_lte", Encode.int |> Encode.optional input.cargoCapacity_lte ), ( "cargoCapacity_gt", Encode.int |> Encode.optional input.cargoCapacity_gt ), ( "cargoCapacity_gte", Encode.int |> Encode.optional input.cargoCapacity_gte ), ( "class", Encode.string |> Encode.optional input.class ), ( "class_not", Encode.string |> Encode.optional input.class_not ), ( "class_in", (Encode.string |> Encode.list) |> Encode.optional input.class_in ), ( "class_not_in", (Encode.string |> Encode.list) |> Encode.optional input.class_not_in ), ( "class_lt", Encode.string |> Encode.optional input.class_lt ), ( "class_lte", Encode.string |> Encode.optional input.class_lte ), ( "class_gt", Encode.string |> Encode.optional input.class_gt ), ( "class_gte", Encode.string |> Encode.optional input.class_gte ), ( "class_contains", Encode.string |> Encode.optional input.class_contains ), ( "class_not_contains", Encode.string |> Encode.optional input.class_not_contains ), ( "class_starts_with", Encode.string |> Encode.optional input.class_starts_with ), ( "class_not_starts_with", Encode.string |> Encode.optional input.class_not_starts_with ), ( "class_ends_with", Encode.string |> Encode.optional input.class_ends_with ), ( "class_not_ends_with", Encode.string |> Encode.optional input.class_not_ends_with ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "consumables_not", Encode.string |> Encode.optional input.consumables_not ), ( "consumables_in", (Encode.string |> Encode.list) |> Encode.optional input.consumables_in ), ( "consumables_not_in", (Encode.string |> Encode.list) |> Encode.optional input.consumables_not_in ), ( "consumables_lt", Encode.string |> Encode.optional input.consumables_lt ), ( "consumables_lte", Encode.string |> Encode.optional input.consumables_lte ), ( "consumables_gt", Encode.string |> Encode.optional input.consumables_gt ), ( "consumables_gte", Encode.string |> Encode.optional input.consumables_gte ), ( "consumables_contains", Encode.string |> Encode.optional input.consumables_contains ), ( "consumables_not_contains", Encode.string |> Encode.optional input.consumables_not_contains ), ( "consumables_starts_with", Encode.string |> Encode.optional input.consumables_starts_with ), ( "consumables_not_starts_with", Encode.string |> Encode.optional input.consumables_not_starts_with ), ( "consumables_ends_with", Encode.string |> Encode.optional input.consumables_ends_with ), ( "consumables_not_ends_with", Encode.string |> Encode.optional input.consumables_not_ends_with ), ( "costInCredits", Encode.int |> Encode.optional input.costInCredits ), ( "costInCredits_not", Encode.int |> Encode.optional input.costInCredits_not ), ( "costInCredits_in", (Encode.int |> Encode.list) |> Encode.optional input.costInCredits_in ), ( "costInCredits_not_in", (Encode.int |> Encode.list) |> Encode.optional input.costInCredits_not_in ), ( "costInCredits_lt", Encode.int |> Encode.optional input.costInCredits_lt ), ( "costInCredits_lte", Encode.int |> Encode.optional input.costInCredits_lte ), ( "costInCredits_gt", Encode.int |> Encode.optional input.costInCredits_gt ), ( "costInCredits_gte", Encode.int |> Encode.optional input.costInCredits_gte ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "crew_not", Encode.int |> Encode.optional input.crew_not ), ( "crew_in", (Encode.int |> Encode.list) |> Encode.optional input.crew_in ), ( "crew_not_in", (Encode.int |> Encode.list) |> Encode.optional input.crew_not_in ), ( "crew_lt", Encode.int |> Encode.optional input.crew_lt ), ( "crew_lte", Encode.int |> Encode.optional input.crew_lte ), ( "crew_gt", Encode.int |> Encode.optional input.crew_gt ), ( "crew_gte", Encode.int |> Encode.optional input.crew_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "length", Encode.float |> Encode.optional input.length ), ( "length_not", Encode.float |> Encode.optional input.length_not ), ( "length_in", (Encode.float |> Encode.list) |> Encode.optional input.length_in ), ( "length_not_in", (Encode.float |> Encode.list) |> Encode.optional input.length_not_in ), ( "length_lt", Encode.float |> Encode.optional input.length_lt ), ( "length_lte", Encode.float |> Encode.optional input.length_lte ), ( "length_gt", Encode.float |> Encode.optional input.length_gt ), ( "length_gte", Encode.float |> Encode.optional input.length_gte ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "maxAtmospheringSpeed_not", Encode.int |> Encode.optional input.maxAtmospheringSpeed_not ), ( "maxAtmospheringSpeed_in", (Encode.int |> Encode.list) |> Encode.optional input.maxAtmospheringSpeed_in ), ( "maxAtmospheringSpeed_not_in", (Encode.int |> Encode.list) |> Encode.optional input.maxAtmospheringSpeed_not_in ), ( "maxAtmospheringSpeed_lt", Encode.int |> Encode.optional input.maxAtmospheringSpeed_lt ), ( "maxAtmospheringSpeed_lte", Encode.int |> Encode.optional input.maxAtmospheringSpeed_lte ), ( "maxAtmospheringSpeed_gt", Encode.int |> Encode.optional input.maxAtmospheringSpeed_gt ), ( "maxAtmospheringSpeed_gte", Encode.int |> Encode.optional input.maxAtmospheringSpeed_gte ), ( "model", Encode.string |> Encode.optional input.model ), ( "model_not", Encode.string |> Encode.optional input.model_not ), ( "model_in", (Encode.string |> Encode.list) |> Encode.optional input.model_in ), ( "model_not_in", (Encode.string |> Encode.list) |> Encode.optional input.model_not_in ), ( "model_lt", Encode.string |> Encode.optional input.model_lt ), ( "model_lte", Encode.string |> Encode.optional input.model_lte ), ( "model_gt", Encode.string |> Encode.optional input.model_gt ), ( "model_gte", Encode.string |> Encode.optional input.model_gte ), ( "model_contains", Encode.string |> Encode.optional input.model_contains ), ( "model_not_contains", Encode.string |> Encode.optional input.model_not_contains ), ( "model_starts_with", Encode.string |> Encode.optional input.model_starts_with ), ( "model_not_starts_with", Encode.string |> Encode.optional input.model_not_starts_with ), ( "model_ends_with", Encode.string |> Encode.optional input.model_ends_with ), ( "model_not_ends_with", Encode.string |> Encode.optional input.model_not_ends_with ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "passengers_not", Encode.int |> Encode.optional input.passengers_not ), ( "passengers_in", (Encode.int |> Encode.list) |> Encode.optional input.passengers_in ), ( "passengers_not_in", (Encode.int |> Encode.list) |> Encode.optional input.passengers_not_in ), ( "passengers_lt", Encode.int |> Encode.optional input.passengers_lt ), ( "passengers_lte", Encode.int |> Encode.optional input.passengers_lte ), ( "passengers_gt", Encode.int |> Encode.optional input.passengers_gt ), ( "passengers_gte", Encode.int |> Encode.optional input.passengers_gte ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "pilots_every", encodePersonFilter |> Encode.optional input.pilots_every ), ( "pilots_some", encodePersonFilter |> Encode.optional input.pilots_some ), ( "pilots_none", encodePersonFilter |> Encode.optional input.pilots_none ) ]


buildVehicleSubscriptionFilter : (VehicleSubscriptionFilterOptionalFields -> VehicleSubscriptionFilterOptionalFields) -> VehicleSubscriptionFilter
buildVehicleSubscriptionFilter fillOptionals =
    let
        optionals =
            fillOptionals
                { and = Absent, or = Absent, mutation_in = Absent, updatedFields_contains = Absent, updatedFields_contains_every = Absent, updatedFields_contains_some = Absent, node = Absent }
    in
    VehicleSubscriptionFilter { and = optionals.and, or = optionals.or, mutation_in = optionals.mutation_in, updatedFields_contains = optionals.updatedFields_contains, updatedFields_contains_every = optionals.updatedFields_contains_every, updatedFields_contains_some = optionals.updatedFields_contains_some, node = optionals.node }


type alias VehicleSubscriptionFilterOptionalFields =
    { and : OptionalArgument (List VehicleSubscriptionFilter)
    , or : OptionalArgument (List VehicleSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument VehicleSubscriptionFilterNode
    }


{-| Type alias for the `VehicleSubscriptionFilter` attributes. Note that this type
needs to use the `VehicleSubscriptionFilter` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias VehicleSubscriptionFilterRaw =
    { and : OptionalArgument (List VehicleSubscriptionFilter)
    , or : OptionalArgument (List VehicleSubscriptionFilter)
    , mutation_in : OptionalArgument (List Api.Enum.ModelMutationType_.ModelMutationType_)
    , updatedFields_contains : OptionalArgument String
    , updatedFields_contains_every : OptionalArgument (List String)
    , updatedFields_contains_some : OptionalArgument (List String)
    , node : OptionalArgument VehicleSubscriptionFilterNode
    }


{-| Type for the VehicleSubscriptionFilter input object.
-}
type VehicleSubscriptionFilter
    = VehicleSubscriptionFilter VehicleSubscriptionFilterRaw


{-| Encode a VehicleSubscriptionFilter into a value that can be used as an argument.
-}
encodeVehicleSubscriptionFilter : VehicleSubscriptionFilter -> Value
encodeVehicleSubscriptionFilter (VehicleSubscriptionFilter input) =
    Encode.maybeObject
        [ ( "AND", (encodeVehicleSubscriptionFilter |> Encode.list) |> Encode.optional input.and ), ( "OR", (encodeVehicleSubscriptionFilter |> Encode.list) |> Encode.optional input.or ), ( "mutation_in", (Encode.enum Api.Enum.ModelMutationType_.toString |> Encode.list) |> Encode.optional input.mutation_in ), ( "updatedFields_contains", Encode.string |> Encode.optional input.updatedFields_contains ), ( "updatedFields_contains_every", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_every ), ( "updatedFields_contains_some", (Encode.string |> Encode.list) |> Encode.optional input.updatedFields_contains_some ), ( "node", encodeVehicleSubscriptionFilterNode |> Encode.optional input.node ) ]


buildVehicleSubscriptionFilterNode : (VehicleSubscriptionFilterNodeOptionalFields -> VehicleSubscriptionFilterNodeOptionalFields) -> VehicleSubscriptionFilterNode
buildVehicleSubscriptionFilterNode fillOptionals =
    let
        optionals =
            fillOptionals
                { cargoCapacity = Absent, cargoCapacity_not = Absent, cargoCapacity_in = Absent, cargoCapacity_not_in = Absent, cargoCapacity_lt = Absent, cargoCapacity_lte = Absent, cargoCapacity_gt = Absent, cargoCapacity_gte = Absent, class = Absent, class_not = Absent, class_in = Absent, class_not_in = Absent, class_lt = Absent, class_lte = Absent, class_gt = Absent, class_gte = Absent, class_contains = Absent, class_not_contains = Absent, class_starts_with = Absent, class_not_starts_with = Absent, class_ends_with = Absent, class_not_ends_with = Absent, consumables = Absent, consumables_not = Absent, consumables_in = Absent, consumables_not_in = Absent, consumables_lt = Absent, consumables_lte = Absent, consumables_gt = Absent, consumables_gte = Absent, consumables_contains = Absent, consumables_not_contains = Absent, consumables_starts_with = Absent, consumables_not_starts_with = Absent, consumables_ends_with = Absent, consumables_not_ends_with = Absent, costInCredits = Absent, costInCredits_not = Absent, costInCredits_in = Absent, costInCredits_not_in = Absent, costInCredits_lt = Absent, costInCredits_lte = Absent, costInCredits_gt = Absent, costInCredits_gte = Absent, createdAt = Absent, createdAt_not = Absent, createdAt_in = Absent, createdAt_not_in = Absent, createdAt_lt = Absent, createdAt_lte = Absent, createdAt_gt = Absent, createdAt_gte = Absent, crew = Absent, crew_not = Absent, crew_in = Absent, crew_not_in = Absent, crew_lt = Absent, crew_lte = Absent, crew_gt = Absent, crew_gte = Absent, id = Absent, id_not = Absent, id_in = Absent, id_not_in = Absent, id_lt = Absent, id_lte = Absent, id_gt = Absent, id_gte = Absent, id_contains = Absent, id_not_contains = Absent, id_starts_with = Absent, id_not_starts_with = Absent, id_ends_with = Absent, id_not_ends_with = Absent, isPublished = Absent, isPublished_not = Absent, length = Absent, length_not = Absent, length_in = Absent, length_not_in = Absent, length_lt = Absent, length_lte = Absent, length_gt = Absent, length_gte = Absent, maxAtmospheringSpeed = Absent, maxAtmospheringSpeed_not = Absent, maxAtmospheringSpeed_in = Absent, maxAtmospheringSpeed_not_in = Absent, maxAtmospheringSpeed_lt = Absent, maxAtmospheringSpeed_lte = Absent, maxAtmospheringSpeed_gt = Absent, maxAtmospheringSpeed_gte = Absent, model = Absent, model_not = Absent, model_in = Absent, model_not_in = Absent, model_lt = Absent, model_lte = Absent, model_gt = Absent, model_gte = Absent, model_contains = Absent, model_not_contains = Absent, model_starts_with = Absent, model_not_starts_with = Absent, model_ends_with = Absent, model_not_ends_with = Absent, name = Absent, name_not = Absent, name_in = Absent, name_not_in = Absent, name_lt = Absent, name_lte = Absent, name_gt = Absent, name_gte = Absent, name_contains = Absent, name_not_contains = Absent, name_starts_with = Absent, name_not_starts_with = Absent, name_ends_with = Absent, name_not_ends_with = Absent, passengers = Absent, passengers_not = Absent, passengers_in = Absent, passengers_not_in = Absent, passengers_lt = Absent, passengers_lte = Absent, passengers_gt = Absent, passengers_gte = Absent, updatedAt = Absent, updatedAt_not = Absent, updatedAt_in = Absent, updatedAt_not_in = Absent, updatedAt_lt = Absent, updatedAt_lte = Absent, updatedAt_gt = Absent, updatedAt_gte = Absent, films_every = Absent, films_some = Absent, films_none = Absent, pilots_every = Absent, pilots_some = Absent, pilots_none = Absent }
    in
    VehicleSubscriptionFilterNode { cargoCapacity = optionals.cargoCapacity, cargoCapacity_not = optionals.cargoCapacity_not, cargoCapacity_in = optionals.cargoCapacity_in, cargoCapacity_not_in = optionals.cargoCapacity_not_in, cargoCapacity_lt = optionals.cargoCapacity_lt, cargoCapacity_lte = optionals.cargoCapacity_lte, cargoCapacity_gt = optionals.cargoCapacity_gt, cargoCapacity_gte = optionals.cargoCapacity_gte, class = optionals.class, class_not = optionals.class_not, class_in = optionals.class_in, class_not_in = optionals.class_not_in, class_lt = optionals.class_lt, class_lte = optionals.class_lte, class_gt = optionals.class_gt, class_gte = optionals.class_gte, class_contains = optionals.class_contains, class_not_contains = optionals.class_not_contains, class_starts_with = optionals.class_starts_with, class_not_starts_with = optionals.class_not_starts_with, class_ends_with = optionals.class_ends_with, class_not_ends_with = optionals.class_not_ends_with, consumables = optionals.consumables, consumables_not = optionals.consumables_not, consumables_in = optionals.consumables_in, consumables_not_in = optionals.consumables_not_in, consumables_lt = optionals.consumables_lt, consumables_lte = optionals.consumables_lte, consumables_gt = optionals.consumables_gt, consumables_gte = optionals.consumables_gte, consumables_contains = optionals.consumables_contains, consumables_not_contains = optionals.consumables_not_contains, consumables_starts_with = optionals.consumables_starts_with, consumables_not_starts_with = optionals.consumables_not_starts_with, consumables_ends_with = optionals.consumables_ends_with, consumables_not_ends_with = optionals.consumables_not_ends_with, costInCredits = optionals.costInCredits, costInCredits_not = optionals.costInCredits_not, costInCredits_in = optionals.costInCredits_in, costInCredits_not_in = optionals.costInCredits_not_in, costInCredits_lt = optionals.costInCredits_lt, costInCredits_lte = optionals.costInCredits_lte, costInCredits_gt = optionals.costInCredits_gt, costInCredits_gte = optionals.costInCredits_gte, createdAt = optionals.createdAt, createdAt_not = optionals.createdAt_not, createdAt_in = optionals.createdAt_in, createdAt_not_in = optionals.createdAt_not_in, createdAt_lt = optionals.createdAt_lt, createdAt_lte = optionals.createdAt_lte, createdAt_gt = optionals.createdAt_gt, createdAt_gte = optionals.createdAt_gte, crew = optionals.crew, crew_not = optionals.crew_not, crew_in = optionals.crew_in, crew_not_in = optionals.crew_not_in, crew_lt = optionals.crew_lt, crew_lte = optionals.crew_lte, crew_gt = optionals.crew_gt, crew_gte = optionals.crew_gte, id = optionals.id, id_not = optionals.id_not, id_in = optionals.id_in, id_not_in = optionals.id_not_in, id_lt = optionals.id_lt, id_lte = optionals.id_lte, id_gt = optionals.id_gt, id_gte = optionals.id_gte, id_contains = optionals.id_contains, id_not_contains = optionals.id_not_contains, id_starts_with = optionals.id_starts_with, id_not_starts_with = optionals.id_not_starts_with, id_ends_with = optionals.id_ends_with, id_not_ends_with = optionals.id_not_ends_with, isPublished = optionals.isPublished, isPublished_not = optionals.isPublished_not, length = optionals.length, length_not = optionals.length_not, length_in = optionals.length_in, length_not_in = optionals.length_not_in, length_lt = optionals.length_lt, length_lte = optionals.length_lte, length_gt = optionals.length_gt, length_gte = optionals.length_gte, maxAtmospheringSpeed = optionals.maxAtmospheringSpeed, maxAtmospheringSpeed_not = optionals.maxAtmospheringSpeed_not, maxAtmospheringSpeed_in = optionals.maxAtmospheringSpeed_in, maxAtmospheringSpeed_not_in = optionals.maxAtmospheringSpeed_not_in, maxAtmospheringSpeed_lt = optionals.maxAtmospheringSpeed_lt, maxAtmospheringSpeed_lte = optionals.maxAtmospheringSpeed_lte, maxAtmospheringSpeed_gt = optionals.maxAtmospheringSpeed_gt, maxAtmospheringSpeed_gte = optionals.maxAtmospheringSpeed_gte, model = optionals.model, model_not = optionals.model_not, model_in = optionals.model_in, model_not_in = optionals.model_not_in, model_lt = optionals.model_lt, model_lte = optionals.model_lte, model_gt = optionals.model_gt, model_gte = optionals.model_gte, model_contains = optionals.model_contains, model_not_contains = optionals.model_not_contains, model_starts_with = optionals.model_starts_with, model_not_starts_with = optionals.model_not_starts_with, model_ends_with = optionals.model_ends_with, model_not_ends_with = optionals.model_not_ends_with, name = optionals.name, name_not = optionals.name_not, name_in = optionals.name_in, name_not_in = optionals.name_not_in, name_lt = optionals.name_lt, name_lte = optionals.name_lte, name_gt = optionals.name_gt, name_gte = optionals.name_gte, name_contains = optionals.name_contains, name_not_contains = optionals.name_not_contains, name_starts_with = optionals.name_starts_with, name_not_starts_with = optionals.name_not_starts_with, name_ends_with = optionals.name_ends_with, name_not_ends_with = optionals.name_not_ends_with, passengers = optionals.passengers, passengers_not = optionals.passengers_not, passengers_in = optionals.passengers_in, passengers_not_in = optionals.passengers_not_in, passengers_lt = optionals.passengers_lt, passengers_lte = optionals.passengers_lte, passengers_gt = optionals.passengers_gt, passengers_gte = optionals.passengers_gte, updatedAt = optionals.updatedAt, updatedAt_not = optionals.updatedAt_not, updatedAt_in = optionals.updatedAt_in, updatedAt_not_in = optionals.updatedAt_not_in, updatedAt_lt = optionals.updatedAt_lt, updatedAt_lte = optionals.updatedAt_lte, updatedAt_gt = optionals.updatedAt_gt, updatedAt_gte = optionals.updatedAt_gte, films_every = optionals.films_every, films_some = optionals.films_some, films_none = optionals.films_none, pilots_every = optionals.pilots_every, pilots_some = optionals.pilots_some, pilots_none = optionals.pilots_none }


type alias VehicleSubscriptionFilterNodeOptionalFields =
    { cargoCapacity : OptionalArgument Int
    , cargoCapacity_not : OptionalArgument Int
    , cargoCapacity_in : OptionalArgument (List Int)
    , cargoCapacity_not_in : OptionalArgument (List Int)
    , cargoCapacity_lt : OptionalArgument Int
    , cargoCapacity_lte : OptionalArgument Int
    , cargoCapacity_gt : OptionalArgument Int
    , cargoCapacity_gte : OptionalArgument Int
    , class : OptionalArgument String
    , class_not : OptionalArgument String
    , class_in : OptionalArgument (List String)
    , class_not_in : OptionalArgument (List String)
    , class_lt : OptionalArgument String
    , class_lte : OptionalArgument String
    , class_gt : OptionalArgument String
    , class_gte : OptionalArgument String
    , class_contains : OptionalArgument String
    , class_not_contains : OptionalArgument String
    , class_starts_with : OptionalArgument String
    , class_not_starts_with : OptionalArgument String
    , class_ends_with : OptionalArgument String
    , class_not_ends_with : OptionalArgument String
    , consumables : OptionalArgument String
    , consumables_not : OptionalArgument String
    , consumables_in : OptionalArgument (List String)
    , consumables_not_in : OptionalArgument (List String)
    , consumables_lt : OptionalArgument String
    , consumables_lte : OptionalArgument String
    , consumables_gt : OptionalArgument String
    , consumables_gte : OptionalArgument String
    , consumables_contains : OptionalArgument String
    , consumables_not_contains : OptionalArgument String
    , consumables_starts_with : OptionalArgument String
    , consumables_not_starts_with : OptionalArgument String
    , consumables_ends_with : OptionalArgument String
    , consumables_not_ends_with : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , costInCredits_not : OptionalArgument Int
    , costInCredits_in : OptionalArgument (List Int)
    , costInCredits_not_in : OptionalArgument (List Int)
    , costInCredits_lt : OptionalArgument Int
    , costInCredits_lte : OptionalArgument Int
    , costInCredits_gt : OptionalArgument Int
    , costInCredits_gte : OptionalArgument Int
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , crew : OptionalArgument Int
    , crew_not : OptionalArgument Int
    , crew_in : OptionalArgument (List Int)
    , crew_not_in : OptionalArgument (List Int)
    , crew_lt : OptionalArgument Int
    , crew_lte : OptionalArgument Int
    , crew_gt : OptionalArgument Int
    , crew_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , length : OptionalArgument Float
    , length_not : OptionalArgument Float
    , length_in : OptionalArgument (List Float)
    , length_not_in : OptionalArgument (List Float)
    , length_lt : OptionalArgument Float
    , length_lte : OptionalArgument Float
    , length_gt : OptionalArgument Float
    , length_gte : OptionalArgument Float
    , maxAtmospheringSpeed : OptionalArgument Int
    , maxAtmospheringSpeed_not : OptionalArgument Int
    , maxAtmospheringSpeed_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_not_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_lt : OptionalArgument Int
    , maxAtmospheringSpeed_lte : OptionalArgument Int
    , maxAtmospheringSpeed_gt : OptionalArgument Int
    , maxAtmospheringSpeed_gte : OptionalArgument Int
    , model : OptionalArgument String
    , model_not : OptionalArgument String
    , model_in : OptionalArgument (List String)
    , model_not_in : OptionalArgument (List String)
    , model_lt : OptionalArgument String
    , model_lte : OptionalArgument String
    , model_gt : OptionalArgument String
    , model_gte : OptionalArgument String
    , model_contains : OptionalArgument String
    , model_not_contains : OptionalArgument String
    , model_starts_with : OptionalArgument String
    , model_not_starts_with : OptionalArgument String
    , model_ends_with : OptionalArgument String
    , model_not_ends_with : OptionalArgument String
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , passengers : OptionalArgument Int
    , passengers_not : OptionalArgument Int
    , passengers_in : OptionalArgument (List Int)
    , passengers_not_in : OptionalArgument (List Int)
    , passengers_lt : OptionalArgument Int
    , passengers_lte : OptionalArgument Int
    , passengers_gt : OptionalArgument Int
    , passengers_gte : OptionalArgument Int
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , pilots_every : OptionalArgument PersonFilter
    , pilots_some : OptionalArgument PersonFilter
    , pilots_none : OptionalArgument PersonFilter
    }


{-| Type alias for the `VehicleSubscriptionFilterNode` attributes. Note that this type
needs to use the `VehicleSubscriptionFilterNode` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias VehicleSubscriptionFilterNodeRaw =
    { cargoCapacity : OptionalArgument Int
    , cargoCapacity_not : OptionalArgument Int
    , cargoCapacity_in : OptionalArgument (List Int)
    , cargoCapacity_not_in : OptionalArgument (List Int)
    , cargoCapacity_lt : OptionalArgument Int
    , cargoCapacity_lte : OptionalArgument Int
    , cargoCapacity_gt : OptionalArgument Int
    , cargoCapacity_gte : OptionalArgument Int
    , class : OptionalArgument String
    , class_not : OptionalArgument String
    , class_in : OptionalArgument (List String)
    , class_not_in : OptionalArgument (List String)
    , class_lt : OptionalArgument String
    , class_lte : OptionalArgument String
    , class_gt : OptionalArgument String
    , class_gte : OptionalArgument String
    , class_contains : OptionalArgument String
    , class_not_contains : OptionalArgument String
    , class_starts_with : OptionalArgument String
    , class_not_starts_with : OptionalArgument String
    , class_ends_with : OptionalArgument String
    , class_not_ends_with : OptionalArgument String
    , consumables : OptionalArgument String
    , consumables_not : OptionalArgument String
    , consumables_in : OptionalArgument (List String)
    , consumables_not_in : OptionalArgument (List String)
    , consumables_lt : OptionalArgument String
    , consumables_lte : OptionalArgument String
    , consumables_gt : OptionalArgument String
    , consumables_gte : OptionalArgument String
    , consumables_contains : OptionalArgument String
    , consumables_not_contains : OptionalArgument String
    , consumables_starts_with : OptionalArgument String
    , consumables_not_starts_with : OptionalArgument String
    , consumables_ends_with : OptionalArgument String
    , consumables_not_ends_with : OptionalArgument String
    , costInCredits : OptionalArgument Int
    , costInCredits_not : OptionalArgument Int
    , costInCredits_in : OptionalArgument (List Int)
    , costInCredits_not_in : OptionalArgument (List Int)
    , costInCredits_lt : OptionalArgument Int
    , costInCredits_lte : OptionalArgument Int
    , costInCredits_gt : OptionalArgument Int
    , costInCredits_gte : OptionalArgument Int
    , createdAt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , createdAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , createdAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , crew : OptionalArgument Int
    , crew_not : OptionalArgument Int
    , crew_in : OptionalArgument (List Int)
    , crew_not_in : OptionalArgument (List Int)
    , crew_lt : OptionalArgument Int
    , crew_lte : OptionalArgument Int
    , crew_gt : OptionalArgument Int
    , crew_gte : OptionalArgument Int
    , id : OptionalArgument Api.ScalarCodecs.Id
    , id_not : OptionalArgument Api.ScalarCodecs.Id
    , id_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_not_in : OptionalArgument (List Api.ScalarCodecs.Id)
    , id_lt : OptionalArgument Api.ScalarCodecs.Id
    , id_lte : OptionalArgument Api.ScalarCodecs.Id
    , id_gt : OptionalArgument Api.ScalarCodecs.Id
    , id_gte : OptionalArgument Api.ScalarCodecs.Id
    , id_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_not_contains : OptionalArgument Api.ScalarCodecs.Id
    , id_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_starts_with : OptionalArgument Api.ScalarCodecs.Id
    , id_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , id_not_ends_with : OptionalArgument Api.ScalarCodecs.Id
    , isPublished : OptionalArgument Bool
    , isPublished_not : OptionalArgument Bool
    , length : OptionalArgument Float
    , length_not : OptionalArgument Float
    , length_in : OptionalArgument (List Float)
    , length_not_in : OptionalArgument (List Float)
    , length_lt : OptionalArgument Float
    , length_lte : OptionalArgument Float
    , length_gt : OptionalArgument Float
    , length_gte : OptionalArgument Float
    , maxAtmospheringSpeed : OptionalArgument Int
    , maxAtmospheringSpeed_not : OptionalArgument Int
    , maxAtmospheringSpeed_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_not_in : OptionalArgument (List Int)
    , maxAtmospheringSpeed_lt : OptionalArgument Int
    , maxAtmospheringSpeed_lte : OptionalArgument Int
    , maxAtmospheringSpeed_gt : OptionalArgument Int
    , maxAtmospheringSpeed_gte : OptionalArgument Int
    , model : OptionalArgument String
    , model_not : OptionalArgument String
    , model_in : OptionalArgument (List String)
    , model_not_in : OptionalArgument (List String)
    , model_lt : OptionalArgument String
    , model_lte : OptionalArgument String
    , model_gt : OptionalArgument String
    , model_gte : OptionalArgument String
    , model_contains : OptionalArgument String
    , model_not_contains : OptionalArgument String
    , model_starts_with : OptionalArgument String
    , model_not_starts_with : OptionalArgument String
    , model_ends_with : OptionalArgument String
    , model_not_ends_with : OptionalArgument String
    , name : OptionalArgument String
    , name_not : OptionalArgument String
    , name_in : OptionalArgument (List String)
    , name_not_in : OptionalArgument (List String)
    , name_lt : OptionalArgument String
    , name_lte : OptionalArgument String
    , name_gt : OptionalArgument String
    , name_gte : OptionalArgument String
    , name_contains : OptionalArgument String
    , name_not_contains : OptionalArgument String
    , name_starts_with : OptionalArgument String
    , name_not_starts_with : OptionalArgument String
    , name_ends_with : OptionalArgument String
    , name_not_ends_with : OptionalArgument String
    , passengers : OptionalArgument Int
    , passengers_not : OptionalArgument Int
    , passengers_in : OptionalArgument (List Int)
    , passengers_not_in : OptionalArgument (List Int)
    , passengers_lt : OptionalArgument Int
    , passengers_lte : OptionalArgument Int
    , passengers_gt : OptionalArgument Int
    , passengers_gte : OptionalArgument Int
    , updatedAt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_not : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_not_in : OptionalArgument (List Api.ScalarCodecs.DateTime)
    , updatedAt_lt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_lte : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gt : OptionalArgument Api.ScalarCodecs.DateTime
    , updatedAt_gte : OptionalArgument Api.ScalarCodecs.DateTime
    , films_every : OptionalArgument FilmFilter
    , films_some : OptionalArgument FilmFilter
    , films_none : OptionalArgument FilmFilter
    , pilots_every : OptionalArgument PersonFilter
    , pilots_some : OptionalArgument PersonFilter
    , pilots_none : OptionalArgument PersonFilter
    }


{-| Type for the VehicleSubscriptionFilterNode input object.
-}
type VehicleSubscriptionFilterNode
    = VehicleSubscriptionFilterNode VehicleSubscriptionFilterNodeRaw


{-| Encode a VehicleSubscriptionFilterNode into a value that can be used as an argument.
-}
encodeVehicleSubscriptionFilterNode : VehicleSubscriptionFilterNode -> Value
encodeVehicleSubscriptionFilterNode (VehicleSubscriptionFilterNode input) =
    Encode.maybeObject
        [ ( "cargoCapacity", Encode.int |> Encode.optional input.cargoCapacity ), ( "cargoCapacity_not", Encode.int |> Encode.optional input.cargoCapacity_not ), ( "cargoCapacity_in", (Encode.int |> Encode.list) |> Encode.optional input.cargoCapacity_in ), ( "cargoCapacity_not_in", (Encode.int |> Encode.list) |> Encode.optional input.cargoCapacity_not_in ), ( "cargoCapacity_lt", Encode.int |> Encode.optional input.cargoCapacity_lt ), ( "cargoCapacity_lte", Encode.int |> Encode.optional input.cargoCapacity_lte ), ( "cargoCapacity_gt", Encode.int |> Encode.optional input.cargoCapacity_gt ), ( "cargoCapacity_gte", Encode.int |> Encode.optional input.cargoCapacity_gte ), ( "class", Encode.string |> Encode.optional input.class ), ( "class_not", Encode.string |> Encode.optional input.class_not ), ( "class_in", (Encode.string |> Encode.list) |> Encode.optional input.class_in ), ( "class_not_in", (Encode.string |> Encode.list) |> Encode.optional input.class_not_in ), ( "class_lt", Encode.string |> Encode.optional input.class_lt ), ( "class_lte", Encode.string |> Encode.optional input.class_lte ), ( "class_gt", Encode.string |> Encode.optional input.class_gt ), ( "class_gte", Encode.string |> Encode.optional input.class_gte ), ( "class_contains", Encode.string |> Encode.optional input.class_contains ), ( "class_not_contains", Encode.string |> Encode.optional input.class_not_contains ), ( "class_starts_with", Encode.string |> Encode.optional input.class_starts_with ), ( "class_not_starts_with", Encode.string |> Encode.optional input.class_not_starts_with ), ( "class_ends_with", Encode.string |> Encode.optional input.class_ends_with ), ( "class_not_ends_with", Encode.string |> Encode.optional input.class_not_ends_with ), ( "consumables", Encode.string |> Encode.optional input.consumables ), ( "consumables_not", Encode.string |> Encode.optional input.consumables_not ), ( "consumables_in", (Encode.string |> Encode.list) |> Encode.optional input.consumables_in ), ( "consumables_not_in", (Encode.string |> Encode.list) |> Encode.optional input.consumables_not_in ), ( "consumables_lt", Encode.string |> Encode.optional input.consumables_lt ), ( "consumables_lte", Encode.string |> Encode.optional input.consumables_lte ), ( "consumables_gt", Encode.string |> Encode.optional input.consumables_gt ), ( "consumables_gte", Encode.string |> Encode.optional input.consumables_gte ), ( "consumables_contains", Encode.string |> Encode.optional input.consumables_contains ), ( "consumables_not_contains", Encode.string |> Encode.optional input.consumables_not_contains ), ( "consumables_starts_with", Encode.string |> Encode.optional input.consumables_starts_with ), ( "consumables_not_starts_with", Encode.string |> Encode.optional input.consumables_not_starts_with ), ( "consumables_ends_with", Encode.string |> Encode.optional input.consumables_ends_with ), ( "consumables_not_ends_with", Encode.string |> Encode.optional input.consumables_not_ends_with ), ( "costInCredits", Encode.int |> Encode.optional input.costInCredits ), ( "costInCredits_not", Encode.int |> Encode.optional input.costInCredits_not ), ( "costInCredits_in", (Encode.int |> Encode.list) |> Encode.optional input.costInCredits_in ), ( "costInCredits_not_in", (Encode.int |> Encode.list) |> Encode.optional input.costInCredits_not_in ), ( "costInCredits_lt", Encode.int |> Encode.optional input.costInCredits_lt ), ( "costInCredits_lte", Encode.int |> Encode.optional input.costInCredits_lte ), ( "costInCredits_gt", Encode.int |> Encode.optional input.costInCredits_gt ), ( "costInCredits_gte", Encode.int |> Encode.optional input.costInCredits_gte ), ( "createdAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt ), ( "createdAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_not ), ( "createdAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_in ), ( "createdAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.createdAt_not_in ), ( "createdAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lt ), ( "createdAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_lte ), ( "createdAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gt ), ( "createdAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.createdAt_gte ), ( "crew", Encode.int |> Encode.optional input.crew ), ( "crew_not", Encode.int |> Encode.optional input.crew_not ), ( "crew_in", (Encode.int |> Encode.list) |> Encode.optional input.crew_in ), ( "crew_not_in", (Encode.int |> Encode.list) |> Encode.optional input.crew_not_in ), ( "crew_lt", Encode.int |> Encode.optional input.crew_lt ), ( "crew_lte", Encode.int |> Encode.optional input.crew_lte ), ( "crew_gt", Encode.int |> Encode.optional input.crew_gt ), ( "crew_gte", Encode.int |> Encode.optional input.crew_gte ), ( "id", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id ), ( "id_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not ), ( "id_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_in ), ( "id_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.id_not_in ), ( "id_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lt ), ( "id_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_lte ), ( "id_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gt ), ( "id_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_gte ), ( "id_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_contains ), ( "id_not_contains", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_contains ), ( "id_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_starts_with ), ( "id_not_starts_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_starts_with ), ( "id_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_ends_with ), ( "id_not_ends_with", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.id_not_ends_with ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "isPublished_not", Encode.bool |> Encode.optional input.isPublished_not ), ( "length", Encode.float |> Encode.optional input.length ), ( "length_not", Encode.float |> Encode.optional input.length_not ), ( "length_in", (Encode.float |> Encode.list) |> Encode.optional input.length_in ), ( "length_not_in", (Encode.float |> Encode.list) |> Encode.optional input.length_not_in ), ( "length_lt", Encode.float |> Encode.optional input.length_lt ), ( "length_lte", Encode.float |> Encode.optional input.length_lte ), ( "length_gt", Encode.float |> Encode.optional input.length_gt ), ( "length_gte", Encode.float |> Encode.optional input.length_gte ), ( "maxAtmospheringSpeed", Encode.int |> Encode.optional input.maxAtmospheringSpeed ), ( "maxAtmospheringSpeed_not", Encode.int |> Encode.optional input.maxAtmospheringSpeed_not ), ( "maxAtmospheringSpeed_in", (Encode.int |> Encode.list) |> Encode.optional input.maxAtmospheringSpeed_in ), ( "maxAtmospheringSpeed_not_in", (Encode.int |> Encode.list) |> Encode.optional input.maxAtmospheringSpeed_not_in ), ( "maxAtmospheringSpeed_lt", Encode.int |> Encode.optional input.maxAtmospheringSpeed_lt ), ( "maxAtmospheringSpeed_lte", Encode.int |> Encode.optional input.maxAtmospheringSpeed_lte ), ( "maxAtmospheringSpeed_gt", Encode.int |> Encode.optional input.maxAtmospheringSpeed_gt ), ( "maxAtmospheringSpeed_gte", Encode.int |> Encode.optional input.maxAtmospheringSpeed_gte ), ( "model", Encode.string |> Encode.optional input.model ), ( "model_not", Encode.string |> Encode.optional input.model_not ), ( "model_in", (Encode.string |> Encode.list) |> Encode.optional input.model_in ), ( "model_not_in", (Encode.string |> Encode.list) |> Encode.optional input.model_not_in ), ( "model_lt", Encode.string |> Encode.optional input.model_lt ), ( "model_lte", Encode.string |> Encode.optional input.model_lte ), ( "model_gt", Encode.string |> Encode.optional input.model_gt ), ( "model_gte", Encode.string |> Encode.optional input.model_gte ), ( "model_contains", Encode.string |> Encode.optional input.model_contains ), ( "model_not_contains", Encode.string |> Encode.optional input.model_not_contains ), ( "model_starts_with", Encode.string |> Encode.optional input.model_starts_with ), ( "model_not_starts_with", Encode.string |> Encode.optional input.model_not_starts_with ), ( "model_ends_with", Encode.string |> Encode.optional input.model_ends_with ), ( "model_not_ends_with", Encode.string |> Encode.optional input.model_not_ends_with ), ( "name", Encode.string |> Encode.optional input.name ), ( "name_not", Encode.string |> Encode.optional input.name_not ), ( "name_in", (Encode.string |> Encode.list) |> Encode.optional input.name_in ), ( "name_not_in", (Encode.string |> Encode.list) |> Encode.optional input.name_not_in ), ( "name_lt", Encode.string |> Encode.optional input.name_lt ), ( "name_lte", Encode.string |> Encode.optional input.name_lte ), ( "name_gt", Encode.string |> Encode.optional input.name_gt ), ( "name_gte", Encode.string |> Encode.optional input.name_gte ), ( "name_contains", Encode.string |> Encode.optional input.name_contains ), ( "name_not_contains", Encode.string |> Encode.optional input.name_not_contains ), ( "name_starts_with", Encode.string |> Encode.optional input.name_starts_with ), ( "name_not_starts_with", Encode.string |> Encode.optional input.name_not_starts_with ), ( "name_ends_with", Encode.string |> Encode.optional input.name_ends_with ), ( "name_not_ends_with", Encode.string |> Encode.optional input.name_not_ends_with ), ( "passengers", Encode.int |> Encode.optional input.passengers ), ( "passengers_not", Encode.int |> Encode.optional input.passengers_not ), ( "passengers_in", (Encode.int |> Encode.list) |> Encode.optional input.passengers_in ), ( "passengers_not_in", (Encode.int |> Encode.list) |> Encode.optional input.passengers_not_in ), ( "passengers_lt", Encode.int |> Encode.optional input.passengers_lt ), ( "passengers_lte", Encode.int |> Encode.optional input.passengers_lte ), ( "passengers_gt", Encode.int |> Encode.optional input.passengers_gt ), ( "passengers_gte", Encode.int |> Encode.optional input.passengers_gte ), ( "updatedAt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt ), ( "updatedAt_not", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_not ), ( "updatedAt_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_in ), ( "updatedAt_not_in", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.list) |> Encode.optional input.updatedAt_not_in ), ( "updatedAt_lt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lt ), ( "updatedAt_lte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_lte ), ( "updatedAt_gt", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gt ), ( "updatedAt_gte", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.updatedAt_gte ), ( "films_every", encodeFilmFilter |> Encode.optional input.films_every ), ( "films_some", encodeFilmFilter |> Encode.optional input.films_some ), ( "films_none", encodeFilmFilter |> Encode.optional input.films_none ), ( "pilots_every", encodePersonFilter |> Encode.optional input.pilots_every ), ( "pilots_some", encodePersonFilter |> Encode.optional input.pilots_some ), ( "pilots_none", encodePersonFilter |> Encode.optional input.pilots_none ) ]


buildVehiclefilmsFilm : VehiclefilmsFilmRequiredFields -> (VehiclefilmsFilmOptionalFields -> VehiclefilmsFilmOptionalFields) -> VehiclefilmsFilm
buildVehiclefilmsFilm required fillOptionals =
    let
        optionals =
            fillOptionals
                { director = Absent, isPublished = Absent, openingCrawl = Absent, producers = Absent, releaseDate = Absent, charactersIds = Absent, characters = Absent, planetsIds = Absent, planets = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    VehiclefilmsFilm { director = optionals.director, episodeId = required.episodeId, isPublished = optionals.isPublished, openingCrawl = optionals.openingCrawl, producers = optionals.producers, releaseDate = optionals.releaseDate, title = required.title, charactersIds = optionals.charactersIds, characters = optionals.characters, planetsIds = optionals.planetsIds, planets = optionals.planets, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias VehiclefilmsFilmRequiredFields =
    { episodeId : Int
    , title : String
    }


type alias VehiclefilmsFilmOptionalFields =
    { director : OptionalArgument String
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type alias for the `VehiclefilmsFilm` attributes. Note that this type
needs to use the `VehiclefilmsFilm` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias VehiclefilmsFilmRaw =
    { director : OptionalArgument String
    , episodeId : Int
    , isPublished : OptionalArgument Bool
    , openingCrawl : OptionalArgument String
    , producers : OptionalArgument (List String)
    , releaseDate : OptionalArgument Api.ScalarCodecs.DateTime
    , title : String
    , charactersIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , characters : OptionalArgument (List FilmcharactersPerson)
    , planetsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , planets : OptionalArgument (List FilmplanetsPlanet)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List FilmspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List FilmstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List FilmvehiclesVehicle)
    }


{-| Type for the VehiclefilmsFilm input object.
-}
type VehiclefilmsFilm
    = VehiclefilmsFilm VehiclefilmsFilmRaw


{-| Encode a VehiclefilmsFilm into a value that can be used as an argument.
-}
encodeVehiclefilmsFilm : VehiclefilmsFilm -> Value
encodeVehiclefilmsFilm (VehiclefilmsFilm input) =
    Encode.maybeObject
        [ ( "director", Encode.string |> Encode.optional input.director ), ( "episodeId", Encode.int input.episodeId |> Just ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "openingCrawl", Encode.string |> Encode.optional input.openingCrawl ), ( "producers", (Encode.string |> Encode.list) |> Encode.optional input.producers ), ( "releaseDate", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecDateTime) |> Encode.optional input.releaseDate ), ( "title", Encode.string input.title |> Just ), ( "charactersIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.charactersIds ), ( "characters", (encodeFilmcharactersPerson |> Encode.list) |> Encode.optional input.characters ), ( "planetsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.planetsIds ), ( "planets", (encodeFilmplanetsPlanet |> Encode.list) |> Encode.optional input.planets ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodeFilmspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodeFilmstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodeFilmvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]


buildVehiclepilotsPerson : VehiclepilotsPersonRequiredFields -> (VehiclepilotsPersonOptionalFields -> VehiclepilotsPersonOptionalFields) -> VehiclepilotsPerson
buildVehiclepilotsPerson required fillOptionals =
    let
        optionals =
            fillOptionals
                { birthYear = Absent, eyeColor = Absent, gender = Absent, hairColor = Absent, height = Absent, isPublished = Absent, mass = Absent, skinColor = Absent, homeworldId = Absent, homeworld = Absent, filmsIds = Absent, films = Absent, speciesIds = Absent, species = Absent, starshipsIds = Absent, starships = Absent, vehiclesIds = Absent, vehicles = Absent }
    in
    VehiclepilotsPerson { birthYear = optionals.birthYear, eyeColor = optionals.eyeColor, gender = optionals.gender, hairColor = optionals.hairColor, height = optionals.height, isPublished = optionals.isPublished, mass = optionals.mass, name = required.name, skinColor = optionals.skinColor, homeworldId = optionals.homeworldId, homeworld = optionals.homeworld, filmsIds = optionals.filmsIds, films = optionals.films, speciesIds = optionals.speciesIds, species = optionals.species, starshipsIds = optionals.starshipsIds, starships = optionals.starships, vehiclesIds = optionals.vehiclesIds, vehicles = optionals.vehicles }


type alias VehiclepilotsPersonRequiredFields =
    { name : String }


type alias VehiclepilotsPersonOptionalFields =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type alias for the `VehiclepilotsPerson` attributes. Note that this type
needs to use the `VehiclepilotsPerson` type (not just a plain type alias) because it has
references to itself either directly (recursive) or indirectly (circular). See
<https://github.com/dillonkearns/elm-graphql/issues/33>.
-}
type alias VehiclepilotsPersonRaw =
    { birthYear : OptionalArgument String
    , eyeColor : OptionalArgument (List Api.Enum.PersonEyeColor.PersonEyeColor)
    , gender : OptionalArgument Api.Enum.PersonGender.PersonGender
    , hairColor : OptionalArgument (List Api.Enum.PersonHairColor.PersonHairColor)
    , height : OptionalArgument Int
    , isPublished : OptionalArgument Bool
    , mass : OptionalArgument Float
    , name : String
    , skinColor : OptionalArgument (List Api.Enum.PersonSkinColor.PersonSkinColor)
    , homeworldId : OptionalArgument Api.ScalarCodecs.Id
    , homeworld : OptionalArgument PersonhomeworldPlanet
    , filmsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , films : OptionalArgument (List PersonfilmsFilm)
    , speciesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , species : OptionalArgument (List PersonspeciesSpecies)
    , starshipsIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , starships : OptionalArgument (List PersonstarshipsStarship)
    , vehiclesIds : OptionalArgument (List Api.ScalarCodecs.Id)
    , vehicles : OptionalArgument (List PersonvehiclesVehicle)
    }


{-| Type for the VehiclepilotsPerson input object.
-}
type VehiclepilotsPerson
    = VehiclepilotsPerson VehiclepilotsPersonRaw


{-| Encode a VehiclepilotsPerson into a value that can be used as an argument.
-}
encodeVehiclepilotsPerson : VehiclepilotsPerson -> Value
encodeVehiclepilotsPerson (VehiclepilotsPerson input) =
    Encode.maybeObject
        [ ( "birthYear", Encode.string |> Encode.optional input.birthYear ), ( "eyeColor", (Encode.enum Api.Enum.PersonEyeColor.toString |> Encode.list) |> Encode.optional input.eyeColor ), ( "gender", Encode.enum Api.Enum.PersonGender.toString |> Encode.optional input.gender ), ( "hairColor", (Encode.enum Api.Enum.PersonHairColor.toString |> Encode.list) |> Encode.optional input.hairColor ), ( "height", Encode.int |> Encode.optional input.height ), ( "isPublished", Encode.bool |> Encode.optional input.isPublished ), ( "mass", Encode.float |> Encode.optional input.mass ), ( "name", Encode.string input.name |> Just ), ( "skinColor", (Encode.enum Api.Enum.PersonSkinColor.toString |> Encode.list) |> Encode.optional input.skinColor ), ( "homeworldId", (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.optional input.homeworldId ), ( "homeworld", encodePersonhomeworldPlanet |> Encode.optional input.homeworld ), ( "filmsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.filmsIds ), ( "films", (encodePersonfilmsFilm |> Encode.list) |> Encode.optional input.films ), ( "speciesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.speciesIds ), ( "species", (encodePersonspeciesSpecies |> Encode.list) |> Encode.optional input.species ), ( "starshipsIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.starshipsIds ), ( "starships", (encodePersonstarshipsStarship |> Encode.list) |> Encode.optional input.starships ), ( "vehiclesIds", ((Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecId) |> Encode.list) |> Encode.optional input.vehiclesIds ), ( "vehicles", (encodePersonvehiclesVehicle |> Encode.list) |> Encode.optional input.vehicles ) ]
