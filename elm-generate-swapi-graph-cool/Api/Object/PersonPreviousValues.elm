-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.PersonPreviousValues exposing (..)

import Api.Enum.PersonEyeColor
import Api.Enum.PersonGender
import Api.Enum.PersonHairColor
import Api.Enum.PersonSkinColor
import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The birth year of the person, using the in-universe standard of BBY or ABY - Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is a battle that occurs at the end of Star Wars episode IV: A New Hope.
-}
birthYear : SelectionSet (Maybe String) Api.Object.PersonPreviousValues
birthYear =
    Object.selectionForField "(Maybe String)" "birthYear" [] (Decode.string |> Decode.nullable)


createdAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.PersonPreviousValues
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The eye color of this person. Will be "UNKNOWN" if not known or null if the person does not have an eye.
-}
eyeColor : SelectionSet (Maybe (List Api.Enum.PersonEyeColor.PersonEyeColor)) Api.Object.PersonPreviousValues
eyeColor =
    Object.selectionForField "(Maybe (List Enum.PersonEyeColor.PersonEyeColor))" "eyeColor" [] (Api.Enum.PersonEyeColor.decoder |> Decode.list |> Decode.nullable)


{-| The gender of this person. Will be "UNKNOWN" if not known or null if the person does not have a gender.
-}
gender : SelectionSet (Maybe Api.Enum.PersonGender.PersonGender) Api.Object.PersonPreviousValues
gender =
    Object.selectionForField "(Maybe Enum.PersonGender.PersonGender)" "gender" [] (Api.Enum.PersonGender.decoder |> Decode.nullable)


{-| The hair color of this person. Will be "UNKNOWN" if not known or null if the person does not have hair.
-}
hairColor : SelectionSet (Maybe (List Api.Enum.PersonHairColor.PersonHairColor)) Api.Object.PersonPreviousValues
hairColor =
    Object.selectionForField "(Maybe (List Enum.PersonHairColor.PersonHairColor))" "hairColor" [] (Api.Enum.PersonHairColor.decoder |> Decode.list |> Decode.nullable)


{-| The height of the person in centimeters.
-}
height : SelectionSet (Maybe Int) Api.Object.PersonPreviousValues
height =
    Object.selectionForField "(Maybe Int)" "height" [] (Decode.int |> Decode.nullable)


id : SelectionSet Api.ScalarCodecs.Id Api.Object.PersonPreviousValues
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| indicates if the record is published
-}
isPublished : SelectionSet Bool Api.Object.PersonPreviousValues
isPublished =
    Object.selectionForField "Bool" "isPublished" [] Decode.bool


{-| The mass of the person in kilograms.
-}
mass : SelectionSet (Maybe Float) Api.Object.PersonPreviousValues
mass =
    Object.selectionForField "(Maybe Float)" "mass" [] (Decode.float |> Decode.nullable)


{-| The name of this person.
-}
name : SelectionSet String Api.Object.PersonPreviousValues
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| The skin color of this person.
-}
skinColor : SelectionSet (Maybe (List Api.Enum.PersonSkinColor.PersonSkinColor)) Api.Object.PersonPreviousValues
skinColor =
    Object.selectionForField "(Maybe (List Enum.PersonSkinColor.PersonSkinColor))" "skinColor" [] (Api.Enum.PersonSkinColor.decoder |> Decode.list |> Decode.nullable)


updatedAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.PersonPreviousValues
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)
